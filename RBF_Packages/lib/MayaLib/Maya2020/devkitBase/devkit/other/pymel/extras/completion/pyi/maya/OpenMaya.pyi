from typing import Any, Container, Dict, Generic, Iterable, Iterator, List, Optional, Set, Tuple, TypeVar, Union
import weakref
from . import _OpenMaya
import contextlib


from __builtin__ import object as _object
from __builtin__ import property as _swig_property


if False:
    from typing import Dict, List, Tuple, Union, Optional

class MEvaluationNode(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def child(self, *args): ...
    def childCount(self, *args): ...
    def connect(self, *args): ...
    def datablock(self, *args): ...
    def dependencyNode(self, *args): ...
    def dirtyPlug(self, *args): ...
    def dirtyPlugExists(self, *args): ...
    def iterator(self, *args): ...
    def parent(self, *args): ...
    def parentCount(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MRampAttribute(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addEntries(self, *args): ...
    def assign(self, *args): ...
    def deleteEntries(self, *args): ...
    def getColorAtPosition(self, *args): ...
    def getEntries(self, *args): ...
    def getNumEntries(self, *args): ...
    def getValueAtPosition(self, *args): ...
    def hasIndex(self, *args): ...
    def isColorRamp(self, *args): ...
    def isCurveRamp(self, *args): ...
    def pack(self, *args): ...
    def sampleColorRamp(self, *args): ...
    def sampleValueRamp(self, *args): ...
    def setColorAtIndex(self, *args): ...
    def setInterpolationAtIndex(self, *args): ...
    def setPositionAtIndex(self, *args): ...
    def setRamp(self, *args): ...
    def setValueAtIndex(self, *args): ...
    def sort(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def createColorRamp(*args, **kwargs): ...
    @staticmethod
    def createCurveRamp(*args, **kwargs): ...
    @staticmethod
    def createRamp(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kLinear : int
    
    kNone : int
    
    kSmooth : int
    
    kSpline : int


class MDagPathArray(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def insert(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def set(self, *args): ...
    def setLength(self, *args): ...
    def setSizeIncrement(self, *args): ...
    def sizeIncrement(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MMeshIntersector(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def getClosestPoint(self, *args): ...
    def isCreated(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MObject(_object):
    def __del__(self): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __ne__(self, other: Any) -> bool: ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def apiType(self, *args): ...
    def apiTypeStr(self, *args): ...
    def assign(self, *args): ...
    def hasFn(self, *args): ...
    def isNull(self, *args): ...
    @property
    def kNullObj(self): ...
    @kNullObj.setter
    def kNullObj(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class intPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MTimeArray(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def insert(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def set(self, *args): ...
    def setLength(self, *args): ...
    def setSizeIncrement(self, *args): ...
    def sizeIncrement(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MItMeshEdge(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def center(self, *args): ...
    def cleanupSmoothing(self, *args): ...
    def connectedToEdge(self, *args): ...
    def connectedToFace(self, *args): ...
    def count(self, *args): ...
    def currentItem(self, *args): ...
    def edge(self, *args): ...
    def geomChanged(self, *args): ...
    def getConnectedEdges(self, *args): ...
    def getConnectedFaces(self, *args): ...
    def getLength(self, *args): ...
    def index(self, *args): ...
    def isDone(self, *args): ...
    def isSmooth(self, *args): ...
    def next(self, *args): ...
    def numConnectedEdges(self, *args): ...
    def numConnectedFaces(self, *args): ...
    def onBoundary(self, *args): ...
    def point(self, *args): ...
    def reset(self, *args): ...
    def setIndex(self, *args): ...
    def setPoint(self, *args): ...
    def setSmoothing(self, *args): ...
    def updateSurface(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class array2dDouble(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def get(self, *args): ...
    def getptr(self, *args): ...
    def set(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MTimer(_object):
    def __del__(self): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __ne__(self, other: Any) -> bool: ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def beginTimer(self, *args): ...
    def clear(self, *args): ...
    def elapsedTime(self, *args): ...
    def endTimer(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MItDependencyNodes(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def isDone(self, *args): ...
    def item(self, *args): ...
    def next(self, *args): ...
    def reset(self, *args): ...
    def thisNode(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MDagPath(_object):
    def __del__(self): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def apiType(self, *args): ...
    def assign(self, *args): ...
    def child(self, *args): ...
    def childCount(self, *args): ...
    def exclusiveMatrix(self, *args): ...
    def exclusiveMatrixInverse(self, *args): ...
    def extendToShape(self, *args): ...
    def extendToShapeDirectlyBelow(self, *args): ...
    def fullPathName(self, *args): ...
    def getAllPathsBelow(self, *args): ...
    def getDisplayStatus(self, *args): ...
    def getDrawOverrideInfo(self, *args): ...
    def getPath(self, *args): ...
    def hasFn(self, *args): ...
    def inclusiveMatrix(self, *args): ...
    def inclusiveMatrixInverse(self, *args): ...
    def instanceNumber(self, *args): ...
    def isInstanced(self, *args): ...
    def isTemplated(self, *args): ...
    def isValid(self, *args): ...
    def isVisible(self, *args): ...
    def length(self, *args): ...
    def node(self, *args): ...
    def numberOfShapesDirectlyBelow(self, *args): ...
    def partialPathName(self, *args): ...
    def pathCount(self, *args): ...
    def pop(self, *args): ...
    def push(self, *args): ...
    def set(self, *args): ...
    def transform(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def getAPathTo(*args, **kwargs): ...
    @staticmethod
    def getAllPathsTo(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MIntArray(_object):
    def __add__(self, *args): ...
    def __del__(self): ...
    def __delitem__(self, *args): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __iadd__(self, *args): ...
    def __init__(self, *args): ...
    def __len__(self) -> int: ...
    def __ne__(self, other: Any) -> bool: ...
    def __radd__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def __setitem__(self, *args): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def get(self, *args): ...
    def insert(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def set(self, *args): ...
    def setLength(self, *args): ...
    def setSizeIncrement(self, *args): ...
    def sizeIncrement(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class array4dFloat(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def get(self, *args): ...
    def getptr(self, *args): ...
    def set(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class array3dFloat(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def get(self, *args): ...
    def getptr(self, *args): ...
    def set(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MAttributePattern(_object):
    def __del__(self): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addRootAttr(self, *args): ...
    def assign(self, *args): ...
    def name(self, *args): ...
    def removeRootAttr(self, *args): ...
    def rootAttr(self, *args): ...
    def rootAttrCount(self, *args): ...
    @staticmethod
    def attrPattern(*args, **kwargs): ...
    @staticmethod
    def attrPatternCount(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def findPattern(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MRichSelection(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def clear(self, *args): ...
    def getSelection(self, *args): ...
    def getSymmetry(self, *args): ...
    def getSymmetryMatrix(self, *args): ...
    def getSymmetryPlane(self, *args): ...
    def setSelection(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MAttributePatternArray(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def insert(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def set(self, *args): ...
    def setLength(self, *args): ...
    def setSizeIncrement(self, *args): ...
    def sizeIncrement(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MItSubdEdge(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def index(self, *args): ...
    def isBoundary(self, *args): ...
    def isDone(self, *args): ...
    def isSharp(self, *args): ...
    def isValid(self, *args): ...
    def level(self, *args): ...
    def next(self, *args): ...
    def reset(self, *args): ...
    def setLevel(self, *args): ...
    def setSharpness(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MRenderPassRegistry(_object):
    def __getattr__(self, name): ...
    def __init__(self, *args, **kwargs): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def getRenderPassDefinition(*args, **kwargs): ...
    @staticmethod
    def registerRenderPassDefinition(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MItMeshPolygon(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def center(self, *args): ...
    def count(self, *args): ...
    def currentItem(self, *args): ...
    def geomChanged(self, *args): ...
    def getArea(self, *args): ...
    def getAxisAtUV(self, *args): ...
    def getColor(self, *args): ...
    def getColorIndex(self, *args): ...
    def getColorIndices(self, *args): ...
    def getColors(self, *args): ...
    def getConnectedEdges(self, *args): ...
    def getConnectedFaces(self, *args): ...
    def getConnectedVertices(self, *args): ...
    def getEdges(self, *args): ...
    def getNormal(self, *args): ...
    def getNormals(self, *args): ...
    def getPointAtUV(self, *args): ...
    def getPoints(self, *args): ...
    def getTriangle(self, *args): ...
    def getTriangles(self, *args): ...
    def getUV(self, *args): ...
    def getUVArea(self, *args): ...
    def getUVAtPoint(self, *args): ...
    def getUVIndex(self, *args): ...
    def getUVSetNames(self, *args): ...
    def getUVs(self, *args): ...
    def getVertices(self, *args): ...
    def hasColor(self, *args): ...
    def hasUVs(self, *args): ...
    def hasValidTriangulation(self, *args): ...
    def index(self, *args): ...
    def isConnectedToEdge(self, *args): ...
    def isConnectedToFace(self, *args): ...
    def isConnectedToVertex(self, *args): ...
    def isConvex(self, *args): ...
    def isDone(self, *args): ...
    def isHoled(self, *args): ...
    def isLamina(self, *args): ...
    def isPlanar(self, *args): ...
    def isStarlike(self, *args): ...
    def isUVReversed(self, *args): ...
    def next(self, *args): ...
    def normalIndex(self, *args): ...
    def numColors(self, *args): ...
    def numConnectedEdges(self, *args): ...
    def numConnectedFaces(self, *args): ...
    def numTriangles(self, *args): ...
    def onBoundary(self, *args): ...
    def point(self, *args): ...
    def polygon(self, *args): ...
    def polygonVertexCount(self, *args): ...
    def reset(self, *args): ...
    def setIndex(self, *args): ...
    def setPoint(self, *args): ...
    def setPoints(self, *args): ...
    def setUV(self, *args): ...
    def setUVs(self, *args): ...
    def tangentIndex(self, *args): ...
    def updateSurface(self, *args): ...
    def vertexIndex(self, *args): ...
    def zeroArea(self, *args): ...
    def zeroUVArea(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MVector(_object):
    def __add__(self, *args): ...
    def __call__(self, *args): ...
    def __del__(self): ...
    def __div__(self, *args): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __iadd__(self, *args): ...
    def __idiv__(self, *args): ...
    def __imul__(self, *args): ...
    def __init__(self, *args): ...
    def __isub__(self, *args): ...
    def __iter__(self):
        """
        Iterates on all components of a Maya api Vector
        """
        ...
    def __itruediv__(self, *args): ...
    def __len__(self) -> int:
        """
        Number of components in the Maya api Vector, ie 3
        """
        ...
    def __mul__(self, *args): ...
    def __ne__(self, other: Any) -> bool: ...
    def __neg__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def __sub__(self, *args): ...
    def __truediv__(self, *args): ...
    def __xor__(self, *args): ...
    def angle(self, *args): ...
    def assign(self, *args): ...
    def get(self, *args): ...
    def isEquivalent(self, *args): ...
    def isParallel(self, *args): ...
    def length(self, *args): ...
    def normal(self, *args): ...
    def normalize(self, *args): ...
    def rotateBy(self, *args): ...
    def rotateTo(self, *args): ...
    def transformAsNormal(self, *args): ...
    @property
    def x(self): ...
    @x.setter
    def x(self, value): ...
    @property
    def y(self): ...
    @y.setter
    def y(self, value): ...
    @property
    def z(self): ...
    @z.setter
    def z(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kWaxis : int
    
    kXaxis : int
    
    kYaxis : int
    
    kZaxis : int
    
    one : MVector
    
    xAxis : MVector
    
    xNegAxis : MVector
    
    yAxis : MVector
    
    yNegAxis : MVector
    
    zAxis : MVector
    
    zNegAxis : MVector
    
    zero : MVector


class MFloatVectorArray(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def get(self, *args): ...
    def insert(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def set(self, *args): ...
    def setLength(self, *args): ...
    def setSizeIncrement(self, *args): ...
    def sizeIncrement(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MTrimBoundaryArray(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def append(self, *args): ...
    def clear(self, *args): ...
    def get(self, *args): ...
    def getMergedBoundary(self, *args): ...
    def insert(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def reserve(self, *args): ...
    def set(self, *args): ...
    def size(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MPlugArray(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def insert(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def set(self, *args): ...
    def setLength(self, *args): ...
    def setSizeIncrement(self, *args): ...
    def sizeIncrement(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MIteratorType(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def filterListEnabled(self, *args): ...
    def getFilterList(self, *args): ...
    def getFilterType(self, *args): ...
    def getObjectType(self, *args): ...
    def setFilterList(self, *args): ...
    def setFilterType(self, *args): ...
    def setObjectType(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kMDagPathObject : int
    
    kMObject : int
    
    kMPlugObject : int


class MCommandResult(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def getResult(self, *args): ...
    def resultType(self, *args): ...
    def stringResult(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kDouble : int
    
    kDoubleArray : int
    
    kInt : int
    
    kInt64 : int
    
    kInt64Array : int
    
    kIntArray : int
    
    kInvalid : int
    
    kMatrix : int
    
    kMatrixArray : int
    
    kString : int
    
    kStringArray : int
    
    kVector : int
    
    kVectorArray : int


class MIffTag(_object):
    def __del__(self): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kCAT : MIffTag
    
    kCAT4 : MIffTag
    
    kCAT8 : MIffTag
    
    kFOR4 : MIffTag
    
    kFOR8 : MIffTag
    
    kFORM : MIffTag
    
    kLIS4 : MIffTag
    
    kLIS8 : MIffTag
    
    kLIST : MIffTag
    
    kPRO4 : MIffTag
    
    kPRO8 : MIffTag
    
    kPROP : MIffTag


class uIntPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MArgList(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addArg(self, *args): ...
    def asAngle(self, *args): ...
    def asBool(self, *args): ...
    def asDistance(self, *args): ...
    def asDouble(self, *args): ...
    def asDoubleArray(self, *args): ...
    def asInt(self, *args): ...
    def asIntArray(self, *args): ...
    def asMatrix(self, *args): ...
    def asPoint(self, *args): ...
    def asString(self, *args): ...
    def asStringArray(self, *args): ...
    def asTime(self, *args): ...
    def asVector(self, *args): ...
    def assign(self, *args): ...
    def flagIndex(self, *args): ...
    def length(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kInvalidArgIndex : long


class MEdit(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args, **kwargs): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def editType(self, *args): ...
    def getString(self, *args): ...
    def hasEditData(self, *args): ...
    def isApplied(self, *args): ...
    def isFailed(self, *args): ...
    def isTopLevel(self, *args): ...
    def matches(self, *args): ...
    def setApplied(self, *args): ...
    def setFailed(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kAddRemoveAttrEdit : int
    
    kConnectDisconnectEdit : int
    
    kFcurveEdit : int
    
    kNullEdit : int
    
    kParentEdit : int
    
    kSetAttrEdit : int


class MBoundingBox(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def center(self, *args): ...
    def clear(self, *args): ...
    def contains(self, *args): ...
    def depth(self, *args): ...
    def expand(self, *args): ...
    def height(self, *args): ...
    def intersects(self, *args): ...
    def max(self, *args): ...
    def min(self, *args): ...
    def transformUsing(self, *args): ...
    def width(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MNurbsIntersector(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def getClosestPoint(self, *args): ...
    def getIntersect(self, *args): ...
    def getIntersects(self, *args): ...
    def isCreated(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class array4dDouble(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def get(self, *args): ...
    def getptr(self, *args): ...
    def set(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MFloatMatrix(_object):
    def __add__(self, *args): ...
    def __call__(self, *args): ...
    def __del__(self): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __iadd__(self, *args): ...
    def __imul__(self, *args): ...
    def __init__(self, *args): ...
    def __isub__(self, *args): ...
    def __iter__(self):
        """
        Iterates on all 4 rows of a Maya api FloatMatrix
        """
        ...
    def __len__(self) -> int:
        """
        Number of rows in the Maya api FloatMatrix, ie 4.
        Not to be confused with the number of components (16) given by the size method
        """
        ...
    def __mul__(self, *args): ...
    def __ne__(self, other: Any) -> bool: ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def __sub__(self, *args): ...
    def adjoint(self, *args): ...
    def assign(self, *args): ...
    def det3x3(self, *args): ...
    def det4x4(self, *args): ...
    def get(self, *args): ...
    def homogenize(self, *args): ...
    def inverse(self, *args): ...
    def isEquivalent(self, *args): ...
    def setToIdentity(self, *args): ...
    def setToProduct(self, *args): ...
    def transpose(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @property
    def matrix(self): ...
    @matrix.setter
    def matrix(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MTime(_object):
    def __add__(self, *args): ...
    def __del__(self): ...
    def __div__(self, *args): ...
    def __eq__(self, other: Any) -> bool: ...
    def __ge__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __gt__(self, other: Any) -> bool: ...
    def __iadd__(self, *args): ...
    def __idiv__(self, *args): ...
    def __imul__(self, *args): ...
    def __init__(self, *args): ...
    def __isub__(self, *args): ...
    def __itruediv__(self, *args): ...
    def __le__(self, other: Any) -> bool: ...
    def __lt__(self, other: Any) -> bool: ...
    def __mul__(self, *args): ...
    def __ne__(self, other: Any) -> bool: ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def __sub__(self, *args): ...
    def __truediv__(self, *args): ...
    def asUnits(self, *args): ...
    def assign(self, *args): ...
    def setUnit(self, *args): ...
    def setValue(self, *args): ...
    def unit(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def setUIUnit(*args, **kwargs): ...
    @staticmethod
    def ticksPerSecond(*args, **kwargs): ...
    @staticmethod
    def uiUnit(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    k100FPS : int
    
    k10FPS : int
    
    k1200FPS : int
    
    k120FPS : int
    
    k125FPS : int
    
    k12FPS : int
    
    k1500FPS : int
    
    k150FPS : int
    
    k15FPS : int
    
    k16FPS : int
    
    k2000FPS : int
    
    k200FPS : int
    
    k20FPS : int
    
    k23_976FPS : int
    
    k240FPS : int
    
    k24FPS : int
    
    k250FPS : int
    
    k25FPS : int
    
    k29_97DF : int
    
    k29_97FPS : int
    
    k2FPS : int
    
    k3000FPS : int
    
    k300FPS : int
    
    k30FPS : int
    
    k375FPS : int
    
    k3FPS : int
    
    k400FPS : int
    
    k40FPS : int
    
    k44100FPS : int
    
    k47_952FPS : int
    
    k48000FPS : int
    
    k48FPS : int
    
    k4FPS : int
    
    k500FPS : int
    
    k50FPS : int
    
    k59_94FPS : int
    
    k5FPS : int
    
    k6000FPS : int
    
    k600FPS : int
    
    k60FPS : int
    
    k6FPS : int
    
    k750FPS : int
    
    k75FPS : int
    
    k80FPS : int
    
    k8FPS : int
    
    k90FPS : int
    
    kFilm : int
    
    kGames : int
    
    kHours : int
    
    kInvalid : int
    
    kLast : int
    
    kMilliseconds : int
    
    kMinutes : int
    
    kNTSCField : int
    
    kNTSCFrame : int
    
    kPALField : int
    
    kPALFrame : int
    
    kSeconds : int
    
    kShowScan : int
    
    kUserDef : int


class MInt64Array(_object):
    def __add__(self, *args): ...
    def __del__(self): ...
    def __delitem__(self, *args): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __iadd__(self, *args): ...
    def __init__(self, *args): ...
    def __len__(self) -> int: ...
    def __ne__(self, other: Any) -> bool: ...
    def __radd__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def __setitem__(self, *args): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def get(self, *args): ...
    def insert(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def set(self, *args): ...
    def setLength(self, *args): ...
    def setSizeIncrement(self, *args): ...
    def sizeIncrement(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MMessage(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def currentCallbackId(*args, **kwargs): ...
    @staticmethod
    def nodeCallbacks(*args, **kwargs): ...
    @staticmethod
    def registeringCallableScript(*args, **kwargs): ...
    @staticmethod
    def registeringCallableScriptNewAPI(*args, **kwargs): ...
    @staticmethod
    def removeCallback(*args, **kwargs): ...
    @staticmethod
    def removeCallbacks(*args, **kwargs): ...
    @staticmethod
    def setRegisteringCallableScript(*args, **kwargs): ...
    @staticmethod
    def setRegisteringCallableScriptNewAPI(*args, **kwargs): ...
    @staticmethod
    def stopRegisteringCallableScript(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kDefaultAction : int
    
    kDoAction : int
    
    kDoNotDoAction : int


class array4dInt(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def get(self, *args): ...
    def getptr(self, *args): ...
    def set(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MSelectionMask(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __or__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addMask(self, *args): ...
    def assign(self, *args): ...
    def intersects(self, *args): ...
    def setMask(self, *args): ...
    @staticmethod
    def deregisterSelectionType(*args, **kwargs): ...
    @staticmethod
    def getSelectionTypePriority(*args, **kwargs): ...
    @staticmethod
    def registerSelectionType(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kSelectAnimAny : int
    
    kSelectAnimCurves : int
    
    kSelectAnimInTangents : int
    
    kSelectAnimKeyframes : int
    
    kSelectAnimMask : int
    
    kSelectAnimOutTangents : int
    
    kSelectCVs : int
    
    kSelectCameras : int
    
    kSelectClusters : int
    
    kSelectCollisionModels : int
    
    kSelectComponentsMask : int
    
    kSelectCurveKnots : int
    
    kSelectCurveParmPoints : int
    
    kSelectCurves : int
    
    kSelectCurvesOnSurfaces : int
    
    kSelectDynamicConstraints : int
    
    kSelectEdges : int
    
    kSelectEditPoints : int
    
    kSelectEmitters : int
    
    kSelectFacets : int
    
    kSelectFields : int
    
    kSelectFluids : int
    
    kSelectFollicles : int
    
    kSelectGuideLines : int
    
    kSelectHairSystems : int
    
    kSelectHandles : int
    
    kSelectHulls : int
    
    kSelectIkEndEffectors : int
    
    kSelectIkHandles : int
    
    kSelectIsoparms : int
    
    kSelectJointPivots : int
    
    kSelectJoints : int
    
    kSelectLatticePoints : int
    
    kSelectLattices : int
    
    kSelectLights : int
    
    kSelectLocalAxis : int
    
    kSelectLocators : int
    
    kSelectManipulators : int
    
    kSelectMeshComponents : int
    
    kSelectMeshEdges : int
    
    kSelectMeshFaces : int
    
    kSelectMeshFreeEdges : int
    
    kSelectMeshLines : int
    
    kSelectMeshUVs : int
    
    kSelectMeshVerts : int
    
    kSelectMeshes : int
    
    kSelectNCloths : int
    
    kSelectNParticles : int
    
    kSelectNRigids : int
    
    kSelectNurbsCurves : int
    
    kSelectNurbsSurfaces : int
    
    kSelectObjectGroups : int
    
    kSelectObjectsMask : int
    
    kSelectOrientationLocators : int
    
    kSelectPPStrokes : int
    
    kSelectParticleShapes : int
    
    kSelectParticles : int
    
    kSelectPivots : int
    
    kSelectPointsForGravity : int
    
    kSelectPointsOnCurvesForGravity : int
    
    kSelectPointsOnSurfacesForGravity : int
    
    kSelectRigidBodies : int
    
    kSelectRigidConstraints : int
    
    kSelectRotatePivots : int
    
    kSelectScalePivots : int
    
    kSelectSculpts : int
    
    kSelectSelectHandles : int
    
    kSelectSketchPlanes : int
    
    kSelectSprings : int
    
    kSelectSubdiv : int
    
    kSelectSubdivMeshEdges : int
    
    kSelectSubdivMeshFaces : int
    
    kSelectSubdivMeshMaps : int
    
    kSelectSubdivMeshPoints : int
    
    kSelectSurfaceEdge : int
    
    kSelectSurfaceKnots : int
    
    kSelectSurfaceParmPoints : int
    
    kSelectSurfaceRange : int
    
    kSelectSurfaces : int
    
    kSelectTemplates : int
    
    kSelectTextures : int
    
    kSelectUVLocators : int
    
    kSelectVertices : int
    
    kSelectXYZLocators : int


class MProfiler(_object):
    def __getattr__(self, name): ...
    def __init__(self, *args, **kwargs): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def addCategory(*args, **kwargs): ...
    @staticmethod
    def categoryRecording(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def eventBegin(*args, **kwargs): ...
    @staticmethod
    def eventDataAvailable(*args, **kwargs): ...
    @staticmethod
    def eventEnd(*args, **kwargs): ...
    @staticmethod
    def getAllCategories(*args, **kwargs): ...
    @staticmethod
    def getBufferSize(*args, **kwargs): ...
    @staticmethod
    def getCPUId(*args, **kwargs): ...
    @staticmethod
    def getCategoryIndex(*args, **kwargs): ...
    @staticmethod
    def getCategoryInfo(*args, **kwargs): ...
    @staticmethod
    def getCategoryName(*args, **kwargs): ...
    @staticmethod
    def getColor(*args, **kwargs): ...
    @staticmethod
    def getDescription(*args, **kwargs): ...
    @staticmethod
    def getEventCategory(*args, **kwargs): ...
    @staticmethod
    def getEventCount(*args, **kwargs): ...
    @staticmethod
    def getEventDuration(*args, **kwargs): ...
    @staticmethod
    def getEventName(*args, **kwargs): ...
    @staticmethod
    def getEventTime(*args, **kwargs): ...
    @staticmethod
    def getNumberOfCPUs(*args, **kwargs): ...
    @staticmethod
    def getThreadDuration(*args, **kwargs): ...
    @staticmethod
    def getThreadId(*args, **kwargs): ...
    @staticmethod
    def isDataFromFile(*args, **kwargs): ...
    @staticmethod
    def isSignalEvent(*args, **kwargs): ...
    @staticmethod
    def loadRecording(*args, **kwargs): ...
    @staticmethod
    def recordingActive(*args, **kwargs): ...
    @staticmethod
    def removeCategory(*args, **kwargs): ...
    @staticmethod
    def resetRecording(*args, **kwargs): ...
    @staticmethod
    def saveRecording(*args, **kwargs): ...
    @staticmethod
    def setBufferSize(*args, **kwargs): ...
    @staticmethod
    def setCategoryRecording(*args, **kwargs): ...
    @staticmethod
    def setRecordingActive(*args, **kwargs): ...
    @staticmethod
    def signalEvent(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kColorA_L1 : int
    
    kColorA_L2 : int
    
    kColorA_L3 : int
    
    kColorB_L1 : int
    
    kColorB_L2 : int
    
    kColorB_L3 : int
    
    kColorC_L1 : int
    
    kColorC_L2 : int
    
    kColorC_L3 : int
    
    kColorCount : int
    
    kColorD_L1 : int
    
    kColorD_L2 : int
    
    kColorD_L3 : int
    
    kColorE_L1 : int
    
    kColorE_L2 : int
    
    kColorE_L3 : int
    
    kColorG_L1 : int
    
    kColorG_L2 : int
    
    kColorG_L3 : int


class MUuid(_object):
    def __del__(self): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __ne__(self, other: Any) -> bool: ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def asString(self, *args): ...
    def assign(self, *args): ...
    def copy(self, *args): ...
    def generate(self, *args): ...
    def get(self, *args): ...
    def valid(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MItDependencyGraph(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def atNodeLevel(self, *args): ...
    def currentDirection(self, *args): ...
    def currentFilter(self, *args): ...
    def currentItem(self, *args): ...
    def currentLevel(self, *args): ...
    def currentTraversal(self, *args): ...
    def disablePruningOnFilter(self, *args): ...
    def enablePruningOnFilter(self, *args): ...
    def getNodePath(self, *args): ...
    def getNodesVisited(self, *args): ...
    def getPlugPath(self, *args): ...
    def getPlugsVisited(self, *args): ...
    def isDirectionDownStream(self, *args): ...
    def isDone(self, *args): ...
    def isPruningOnFilter(self, *args): ...
    def isTraversalDepthFirst(self, *args): ...
    def isTraversingOverWorldSpaceDependents(self, *args): ...
    def next(self, *args): ...
    def previousPlug(self, *args): ...
    def prune(self, *args): ...
    def reset(self, *args): ...
    def resetFilter(self, *args): ...
    def resetTo(self, *args): ...
    def rootNode(self, *args): ...
    def rootPlug(self, *args): ...
    def setCurrentFilter(self, *args): ...
    def setTraversalOverWorldSpaceDependents(self, *args): ...
    def thisNode(self, *args): ...
    def thisNodeHasUnknownType(self, *args): ...
    def thisPlug(self, *args): ...
    def toggleDirection(self, *args): ...
    def toggleLevel(self, *args): ...
    def toggleTraversal(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kBreadthFirst : int
    
    kDepthFirst : int
    
    kDownstream : int
    
    kNodeLevel : int
    
    kPlugLevel : int
    
    kUpstream : int


class MMeshIsectAccelParams(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MUint64Array(_object):
    def __add__(self, *args): ...
    def __del__(self): ...
    def __delitem__(self, *args): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __iadd__(self, *args): ...
    def __init__(self, *args): ...
    def __len__(self) -> int: ...
    def __ne__(self, other: Any) -> bool: ...
    def __radd__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def __setitem__(self, *args): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def get(self, *args): ...
    def insert(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def set(self, *args): ...
    def setLength(self, *args): ...
    def setSizeIncrement(self, *args): ...
    def sizeIncrement(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MMatrix(_object):
    def __add__(self, *args): ...
    def __call__(self, *args): ...
    def __del__(self): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __iadd__(self, *args): ...
    def __imul__(self, *args): ...
    def __init__(self, *args): ...
    def __isub__(self, *args): ...
    def __iter__(self):
        """
        Iterates on all 4 rows of a Maya api Matrix
        """
        ...
    def __len__(self) -> int:
        """
        Number of rows in the Maya api Matrix, ie 4.
        Not to be confused with the number of components (16) given by the size method
        """
        ...
    def __mul__(self, *args): ...
    def __ne__(self, other: Any) -> bool: ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def __sub__(self, *args): ...
    def adjoint(self, *args): ...
    def assign(self, *args): ...
    def det3x3(self, *args): ...
    def det4x4(self, *args): ...
    def get(self, *args): ...
    def homogenize(self, *args): ...
    def inverse(self, *args): ...
    def isEquivalent(self, *args): ...
    def isSingular(self, *args): ...
    def setToIdentity(self, *args): ...
    def setToProduct(self, *args): ...
    def transpose(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @property
    def matrix(self): ...
    @matrix.setter
    def matrix(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    identity : MMatrix


class MArrayDataBuilder(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addElement(self, *args): ...
    def addElementArray(self, *args): ...
    def addLast(self, *args): ...
    def addLastArray(self, *args): ...
    def assign(self, *args): ...
    def elementCount(self, *args): ...
    def growArray(self, *args): ...
    def removeElement(self, *args): ...
    def setGrowSize(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MDGContextGuard(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MPoint(_object):
    def __add__(self, *args): ...
    def __call__(self, *args): ...
    def __del__(self): ...
    def __div__(self, *args): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __iadd__(self, *args): ...
    def __imul__(self, *args): ...
    def __init__(self, *args): ...
    def __isub__(self, *args): ...
    def __iter__(self):
        """
        Iterates on all components of a Maya api Point
        """
        ...
    def __len__(self) -> int:
        """
        Number of components in the Maya api Point, ie 4
        """
        ...
    def __mul__(self, *args): ...
    def __ne__(self, other: Any) -> bool: ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def __sub__(self, *args): ...
    def __truediv__(self, *args): ...
    def assign(self, *args): ...
    def cartesianize(self, *args): ...
    def distanceTo(self, *args): ...
    def get(self, *args): ...
    def homogenize(self, *args): ...
    def isEquivalent(self, *args): ...
    def rationalize(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @property
    def w(self): ...
    @w.setter
    def w(self, value): ...
    @property
    def x(self): ...
    @x.setter
    def x(self, value): ...
    @property
    def y(self): ...
    @y.setter
    def y(self, value): ...
    @property
    def z(self): ...
    @z.setter
    def z(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    origin : MPoint


class MItSubdVertex(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def index(self, *args): ...
    def isDone(self, *args): ...
    def isValid(self, *args): ...
    def level(self, *args): ...
    def next(self, *args): ...
    def reset(self, *args): ...
    def setLevel(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MWeight(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def influence(self, *args): ...
    def seam(self, *args): ...
    def setInfluence(self, *args): ...
    def setSeam(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MUserData(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def deleteAfterUse(self, *args): ...
    def setDeleteAfterUse(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MFloatPointArray(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def get(self, *args): ...
    def insert(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def set(self, *args): ...
    def setLength(self, *args): ...
    def setSizeIncrement(self, *args): ...
    def sizeIncrement(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MVectorArray(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def get(self, *args): ...
    def insert(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def set(self, *args): ...
    def setLength(self, *args): ...
    def setSizeIncrement(self, *args): ...
    def sizeIncrement(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class shortPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class array3dDouble(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def get(self, *args): ...
    def getptr(self, *args): ...
    def set(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MPointArray(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def get(self, *args): ...
    def insert(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def set(self, *args): ...
    def setLength(self, *args): ...
    def setSizeIncrement(self, *args): ...
    def sizeIncrement(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MObjectHandle(_object):
    def __del__(self): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __ne__(self, other: Any) -> bool: ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def hashCode(self, *args): ...
    def isAlive(self, *args): ...
    def isValid(self, *args): ...
    def object(self, *args): ...
    def objectRef(self, *args): ...
    @staticmethod
    def objectHashCode(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MItSelectionList(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def getDagPath(self, *args): ...
    def getDependNode(self, *args): ...
    def getPlug(self, *args): ...
    def getStrings(self, *args): ...
    def hasComponents(self, *args): ...
    def isDone(self, *args): ...
    def itemType(self, *args): ...
    def next(self, *args): ...
    def reset(self, *args): ...
    def setFilter(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kAnimSelectionItem : int
    
    kDNselectionItem : int
    
    kDagSelectionItem : int
    
    kPlugSelectionItem : int
    
    kUnknownItem : int


class MDataBlock(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args, **kwargs): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def context(self, *args): ...
    def inputArrayValue(self, *args): ...
    def inputValue(self, *args): ...
    def isClean(self, *args): ...
    def outputArrayValue(self, *args): ...
    def outputValue(self, *args): ...
    def setClean(self, *args): ...
    def setContext(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MAttributeIndex(_object):
    def __del__(self): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __ne__(self, other: Any) -> bool: ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def getLower(self, *args): ...
    def getUpper(self, *args): ...
    def getValue(self, *args): ...
    def hasLowerBound(self, *args): ...
    def hasRange(self, *args): ...
    def hasUpperBound(self, *args): ...
    def hasValidRange(self, *args): ...
    def isBounded(self, *args): ...
    def setLower(self, *args): ...
    def setType(self, *args): ...
    def setUpper(self, *args): ...
    def setValue(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kFloat : int
    
    kInteger : int


class MPlane(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def directedDistance(self, *args): ...
    def distance(self, *args): ...
    def normal(self, *args): ...
    def setPlane(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MItCurveCV(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def currentItem(self, *args): ...
    def cv(self, *args): ...
    def hasHistoryOnCreate(self, *args): ...
    def index(self, *args): ...
    def isDone(self, *args): ...
    def next(self, *args): ...
    def position(self, *args): ...
    def reset(self, *args): ...
    def setPosition(self, *args): ...
    def translateBy(self, *args): ...
    def updateCurve(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MDAGDrawOverrideInfo(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @property
    def fDisplayType(self): ...
    @fDisplayType.setter
    def fDisplayType(self, value): ...
    @property
    def fEnableShading(self): ...
    @fEnableShading.setter
    def fEnableShading(self, value): ...
    @property
    def fEnableTexturing(self): ...
    @fEnableTexturing.setter
    def fEnableTexturing(self, value): ...
    @property
    def fEnableVisible(self): ...
    @fEnableVisible.setter
    def fEnableVisible(self, value): ...
    @property
    def fLOD(self): ...
    @fLOD.setter
    def fLOD(self, value): ...
    @property
    def fOverrideEnabled(self): ...
    @fOverrideEnabled.setter
    def fOverrideEnabled(self, value): ...
    @property
    def fPlaybackVisible(self): ...
    @fPlaybackVisible.setter
    def fPlaybackVisible(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kDisplayTypeNormal : int
    
    kDisplayTypeReference : int
    
    kDisplayTypeTemplate : int
    
    kLODBoundingBox : int
    
    kLODFull : int


class MEvaluationManager(_object):
    def __getattr__(self, name): ...
    def __init__(self, *args, **kwargs): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def evaluationInExecution(*args, **kwargs): ...
    @staticmethod
    def evaluationManagerActive(*args, **kwargs): ...
    @staticmethod
    def graphConstructionActive(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MColor(_object):
    def __add__(self, *args): ...
    def __call__(self, *args): ...
    def __del__(self): ...
    def __div__(self, *args): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __iadd__(self, *args): ...
    def __idiv__(self, *args): ...
    def __imul__(self, *args): ...
    def __init__(self, *args): ...
    def __iter__(self):
        """
        Iterates on all components of a Maya api Color
        """
        ...
    def __itruediv__(self, *args): ...
    def __len__(self) -> int:
        """
        Number of components in the Maya api Color, ie 4
        """
        ...
    def __mul__(self, *args): ...
    def __ne__(self, other: Any) -> bool: ...
    def __neg__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def __sub__(self, *args): ...
    def __truediv__(self, *args): ...
    def assign(self, *args): ...
    def get(self, *args): ...
    def set(self, *args): ...
    @property
    def a(self): ...
    @a.setter
    def a(self, value): ...
    @property
    def b(self): ...
    @b.setter
    def b(self, value): ...
    @property
    def g(self): ...
    @g.setter
    def g(self, value): ...
    @property
    def r(self): ...
    @r.setter
    def r(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kCMY : int
    
    kCMYK : int
    
    kHSV : int
    
    kOpaqueBlack : MColor
    
    kRGB : int


class MFileIO(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def beforeExportFilename(*args, **kwargs): ...
    @staticmethod
    def beforeExportUserFileTranslator(*args, **kwargs): ...
    @staticmethod
    def beforeImportFilename(*args, **kwargs): ...
    @staticmethod
    def beforeImportUserFileTranslator(*args, **kwargs): ...
    @staticmethod
    def beforeOpenFilename(*args, **kwargs): ...
    @staticmethod
    def beforeOpenUserFileTranslator(*args, **kwargs): ...
    @staticmethod
    def beforeReferenceFilename(*args, **kwargs): ...
    @staticmethod
    def beforeReferenceUserFileTranslator(*args, **kwargs): ...
    @staticmethod
    def beforeSaveFilename(*args, **kwargs): ...
    @staticmethod
    def beforeSaveUserFileTranslator(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def cleanReference(*args, **kwargs): ...
    @staticmethod
    def currentFile(*args, **kwargs): ...
    @staticmethod
    def currentlyReadingFileVersion(*args, **kwargs): ...
    @staticmethod
    def exportAll(*args, **kwargs): ...
    @staticmethod
    def exportAnim(*args, **kwargs): ...
    @staticmethod
    def exportAnimFromReference(*args, **kwargs): ...
    @staticmethod
    def exportAsReference(*args, **kwargs): ...
    @staticmethod
    def exportSelected(*args, **kwargs): ...
    @staticmethod
    def exportSelectedAnim(*args, **kwargs): ...
    @staticmethod
    def exportSelectedAnimFromReference(*args, **kwargs): ...
    @staticmethod
    def exportType(*args, **kwargs): ...
    @staticmethod
    def fileCurrentlyLoading(*args, **kwargs): ...
    @staticmethod
    def fileType(*args, **kwargs): ...
    @staticmethod
    def getErrorStatus(*args, **kwargs): ...
    @staticmethod
    def getFileTypes(*args, **kwargs): ...
    @staticmethod
    def getFiles(*args, **kwargs): ...
    @staticmethod
    def getLastTempFile(*args, **kwargs): ...
    @staticmethod
    def getReferenceConnectionsBroken(*args, **kwargs): ...
    @staticmethod
    def getReferenceConnectionsMade(*args, **kwargs): ...
    @staticmethod
    def getReferenceFileByNode(*args, **kwargs): ...
    @staticmethod
    def getReferenceNodes(*args, **kwargs): ...
    @staticmethod
    def getReferences(*args, **kwargs): ...
    @staticmethod
    def importFile(*args, **kwargs): ...
    @staticmethod
    def isImportingFile(*args, **kwargs): ...
    @staticmethod
    def isNewingFile(*args, **kwargs): ...
    @staticmethod
    def isOpeningFile(*args, **kwargs): ...
    @staticmethod
    def isReadingFile(*args, **kwargs): ...
    @staticmethod
    def isReferencingFile(*args, **kwargs): ...
    @staticmethod
    def isSavingReference(*args, **kwargs): ...
    @staticmethod
    def isWritingFile(*args, **kwargs): ...
    @staticmethod
    def latestMayaFileVersion(*args, **kwargs): ...
    @staticmethod
    def loadReference(*args, **kwargs): ...
    @staticmethod
    def loadReferenceByNode(*args, **kwargs): ...
    @staticmethod
    def mustRenameToSave(*args, **kwargs): ...
    @staticmethod
    def mustRenameToSaveMsg(*args, **kwargs): ...
    @staticmethod
    def newFile(*args, **kwargs): ...
    @staticmethod
    def open(*args, **kwargs): ...
    @staticmethod
    def reference(*args, **kwargs): ...
    @staticmethod
    def removeReference(*args, **kwargs): ...
    @staticmethod
    def resetError(*args, **kwargs): ...
    @staticmethod
    def save(*args, **kwargs): ...
    @staticmethod
    def saveAs(*args, **kwargs): ...
    @staticmethod
    def saveReference(*args, **kwargs): ...
    @staticmethod
    def setCurrentFile(*args, **kwargs): ...
    @staticmethod
    def setError(*args, **kwargs): ...
    @staticmethod
    def setMustRenameToSave(*args, **kwargs): ...
    @staticmethod
    def setMustRenameToSaveMsg(*args, **kwargs): ...
    @staticmethod
    def unloadReference(*args, **kwargs): ...
    @staticmethod
    def unloadReferenceByNode(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kExportTypeAll : int
    
    kExportTypeAnim : int
    
    kExportTypeAnimFromReference : int
    
    kExportTypeAsReference : int
    
    kExportTypeEdits : int
    
    kExportTypePrefObjects : int
    
    kExportTypeSelected : int
    
    kForceDeleteNamespaceContent : int
    
    kLoadAllReferences : int
    
    kLoadDefault : int
    
    kLoadNoReferences : int
    
    kMergeNamespaceWithParentNamespace : int
    
    kMergeNamespaceWithRootNamespace : int
    
    kRemoveNamespaceIfEmpty : int
    
    kVersion2008 : int
    
    kVersion2009 : int
    
    kVersion2010 : int
    
    kVersion2011 : int
    
    kVersion2012 : int
    
    kVersion2013 : int
    
    kVersion2014 : int
    
    kVersion2015 : int
    
    kVersion2016 : int
    
    kVersion2016R2 : int
    
    kVersion2017 : int
    
    kVersion2017Update3 : int
    
    kVersion2017Update4 : int
    
    kVersion2018 : int
    
    kVersion2018Update2 : int
    
    kVersion2018Update3 : int
    
    kVersion2018Update4 : int
    
    kVersion2018Update5 : int
    
    kVersion2019 : int
    
    kVersion4_0 : int
    
    kVersion4_5 : int
    
    kVersion5_0 : int
    
    kVersion6_0 : int
    
    kVersion6_5 : int
    
    kVersion7_0 : int
    
    kVersion8_0 : int
    
    kVersion8_5 : int


class MTypeId(_object):
    def __del__(self): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __ne__(self, other: Any) -> bool: ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def id(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MMessageNode(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @property
    def fClientPtr(self): ...
    @fClientPtr.setter
    def fClientPtr(self, value): ...
    @property
    def fHeadNode(self): ...
    @fHeadNode.setter
    def fHeadNode(self, value): ...
    @property
    def fId(self): ...
    @fId.setter
    def fId(self, value): ...
    @property
    def fNextNode(self): ...
    @fNextNode.setter
    def fNextNode(self, value): ...
    @property
    def fServerPtr(self): ...
    @fServerPtr.setter
    def fServerPtr(self, value): ...
    @property
    def fSubClientPtr(self): ...
    @fSubClientPtr.setter
    def fSubClientPtr(self, value): ...
    @property
    def isValid(self): ...
    @isValid.setter
    def isValid(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MURI(_object):
    def __del__(self): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __ne__(self, other: Any) -> bool: ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addQueryItem(self, *args): ...
    def asString(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def getAllQueryItemKeys(self, *args): ...
    def getAllQueryItemValues(self, *args): ...
    def getAuthority(self, *args): ...
    def getDirectory(self, *args): ...
    def getFileName(self, *args): ...
    def getFragment(self, *args): ...
    def getHost(self, *args): ...
    def getPassword(self, *args): ...
    def getPath(self, *args): ...
    def getPort(self, *args): ...
    def getQueryItemValue(self, *args): ...
    def getQueryPairDelimiter(self, *args): ...
    def getQueryValueDelimiter(self, *args): ...
    def getScheme(self, *args): ...
    def getUserInfo(self, *args): ...
    def getUserName(self, *args): ...
    def isEmpty(self, *args): ...
    def isValid(self, *args): ...
    def removeAllQueryItems(self, *args): ...
    def removeQueryItem(self, *args): ...
    def setAuthority(self, *args): ...
    def setDirectory(self, *args): ...
    def setFileName(self, *args): ...
    def setFragment(self, *args): ...
    def setHost(self, *args): ...
    def setPassword(self, *args): ...
    def setPath(self, *args): ...
    def setPort(self, *args): ...
    def setQueryDelimiters(self, *args): ...
    def setScheme(self, *args): ...
    def setURI(self, *args): ...
    def setUserInfo(self, *args): ...
    def setUserName(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def isValidURI(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class charPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MScriptUtil(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def asBool(self, *args): ...
    def asBoolPtr(self, *args): ...
    def asCharPtr(self, *args): ...
    def asDouble(self, *args): ...
    def asDouble2Ptr(self, *args): ...
    def asDouble3Ptr(self, *args): ...
    def asDouble4Ptr(self, *args): ...
    def asDoublePtr(self, *args): ...
    def asFloat(self, *args): ...
    def asFloat2Ptr(self, *args): ...
    def asFloat3Ptr(self, *args): ...
    def asFloat4Ptr(self, *args): ...
    def asFloatPtr(self, *args): ...
    def asInt(self, *args): ...
    def asInt2Ptr(self, *args): ...
    def asInt3Ptr(self, *args): ...
    def asInt4Ptr(self, *args): ...
    def asIntPtr(self, *args): ...
    def asShort(self, *args): ...
    def asShort2Ptr(self, *args): ...
    def asShort3Ptr(self, *args): ...
    def asShort4Ptr(self, *args): ...
    def asShortPtr(self, *args): ...
    def asUcharPtr(self, *args): ...
    def asUint(self, *args): ...
    def asUint2Ptr(self, *args): ...
    def asUint3Ptr(self, *args): ...
    def asUint4Ptr(self, *args): ...
    def asUintPtr(self, *args): ...
    def asUshortPtr(self, *args): ...
    def createFromDouble(self, *args): ...
    def createFromInt(self, *args): ...
    def createFromList(self, *args): ...
    @staticmethod
    def createFloatArrayFromList(*args, **kwargs): ...
    @staticmethod
    def createFloatMatrixFromList(*args, **kwargs): ...
    @staticmethod
    def createIntArrayFromList(*args, **kwargs): ...
    @staticmethod
    def createMatrixFromList(*args, **kwargs): ...
    @staticmethod
    def getBool(*args, **kwargs): ...
    @staticmethod
    def getBoolArrayItem(*args, **kwargs): ...
    @staticmethod
    def getChar(*args, **kwargs): ...
    @staticmethod
    def getCharArrayItem(*args, **kwargs): ...
    @staticmethod
    def getDouble(*args, **kwargs): ...
    @staticmethod
    def getDouble2ArrayItem(*args, **kwargs): ...
    @staticmethod
    def getDouble3ArrayItem(*args, **kwargs): ...
    @staticmethod
    def getDouble4ArrayItem(*args, **kwargs): ...
    @staticmethod
    def getDoubleArrayItem(*args, **kwargs): ...
    @staticmethod
    def getFloat(*args, **kwargs): ...
    @staticmethod
    def getFloat2ArrayItem(*args, **kwargs): ...
    @staticmethod
    def getFloat3ArrayItem(*args, **kwargs): ...
    @staticmethod
    def getFloat4ArrayItem(*args, **kwargs): ...
    @staticmethod
    def getFloatArrayItem(*args, **kwargs): ...
    @staticmethod
    def getInt(*args, **kwargs): ...
    @staticmethod
    def getInt2ArrayItem(*args, **kwargs): ...
    @staticmethod
    def getInt3ArrayItem(*args, **kwargs): ...
    @staticmethod
    def getInt4ArrayItem(*args, **kwargs): ...
    @staticmethod
    def getIntArrayItem(*args, **kwargs): ...
    @staticmethod
    def getShort(*args, **kwargs): ...
    @staticmethod
    def getShort2ArrayItem(*args, **kwargs): ...
    @staticmethod
    def getShort3ArrayItem(*args, **kwargs): ...
    @staticmethod
    def getShort4ArrayItem(*args, **kwargs): ...
    @staticmethod
    def getShortArrayItem(*args, **kwargs): ...
    @staticmethod
    def getUchar(*args, **kwargs): ...
    @staticmethod
    def getUcharArrayItem(*args, **kwargs): ...
    @staticmethod
    def getUint(*args, **kwargs): ...
    @staticmethod
    def getUint2ArrayItem(*args, **kwargs): ...
    @staticmethod
    def getUint3ArrayItem(*args, **kwargs): ...
    @staticmethod
    def getUint4ArrayItem(*args, **kwargs): ...
    @staticmethod
    def getUintArrayItem(*args, **kwargs): ...
    @staticmethod
    def getUshortArrayItem(*args, **kwargs): ...
    @staticmethod
    def setBool(*args, **kwargs): ...
    @staticmethod
    def setBoolArray(*args, **kwargs): ...
    @staticmethod
    def setChar(*args, **kwargs): ...
    @staticmethod
    def setCharArray(*args, **kwargs): ...
    @staticmethod
    def setDouble(*args, **kwargs): ...
    @staticmethod
    def setDouble2ArrayItem(*args, **kwargs): ...
    @staticmethod
    def setDouble3ArrayItem(*args, **kwargs): ...
    @staticmethod
    def setDouble4ArrayItem(*args, **kwargs): ...
    @staticmethod
    def setDoubleArray(*args, **kwargs): ...
    @staticmethod
    def setFloat(*args, **kwargs): ...
    @staticmethod
    def setFloat2ArrayItem(*args, **kwargs): ...
    @staticmethod
    def setFloat3ArrayItem(*args, **kwargs): ...
    @staticmethod
    def setFloat4ArrayItem(*args, **kwargs): ...
    @staticmethod
    def setFloatArray(*args, **kwargs): ...
    @staticmethod
    def setInt(*args, **kwargs): ...
    @staticmethod
    def setInt2ArrayItem(*args, **kwargs): ...
    @staticmethod
    def setInt3ArrayItem(*args, **kwargs): ...
    @staticmethod
    def setInt4ArrayItem(*args, **kwargs): ...
    @staticmethod
    def setIntArray(*args, **kwargs): ...
    @staticmethod
    def setShort(*args, **kwargs): ...
    @staticmethod
    def setShort2ArrayItem(*args, **kwargs): ...
    @staticmethod
    def setShort3ArrayItem(*args, **kwargs): ...
    @staticmethod
    def setShort4ArrayItem(*args, **kwargs): ...
    @staticmethod
    def setShortArray(*args, **kwargs): ...
    @staticmethod
    def setUchar(*args, **kwargs): ...
    @staticmethod
    def setUcharArray(*args, **kwargs): ...
    @staticmethod
    def setUint(*args, **kwargs): ...
    @staticmethod
    def setUint2ArrayItem(*args, **kwargs): ...
    @staticmethod
    def setUint3ArrayItem(*args, **kwargs): ...
    @staticmethod
    def setUint4ArrayItem(*args, **kwargs): ...
    @staticmethod
    def setUintArray(*args, **kwargs): ...
    @staticmethod
    def setUshortArray(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MSelectionList(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def add(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def getDagPath(self, *args): ...
    def getDependNode(self, *args): ...
    def getPlug(self, *args): ...
    def getSelectionStrings(self, *args): ...
    def hasItem(self, *args): ...
    def hasItemPartly(self, *args): ...
    def intersect(self, *args): ...
    def isEmpty(self, *args): ...
    def length(self, *args): ...
    def merge(self, *args): ...
    def remove(self, *args): ...
    def replace(self, *args): ...
    def toggle(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kMergeNormal : int
    
    kRemoveFromList : int
    
    kXORWithList : int


class MItInstancer(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def instancer(self, *args): ...
    def instancerId(self, *args): ...
    def instancerPath(self, *args): ...
    def isDone(self, *args): ...
    def matrix(self, *args): ...
    def next(self, *args): ...
    def nextInstancer(self, *args): ...
    def nextParticle(self, *args): ...
    def particleId(self, *args): ...
    def path(self, *args): ...
    def pathId(self, *args): ...
    def reset(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MComputation(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def beginComputation(self, *args): ...
    def endComputation(self, *args): ...
    def isInterruptRequested(self, *args): ...
    def progress(self, *args): ...
    def progressMax(self, *args): ...
    def progressMin(self, *args): ...
    def setProgress(self, *args): ...
    def setProgressRange(self, *args): ...
    def setProgressStatus(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MCurveAttribute(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addEntries(self, *args): ...
    def assign(self, *args): ...
    def deleteEntries(self, *args): ...
    def getEntries(self, *args): ...
    def getNumEntries(self, *args): ...
    def getValueAtPosition(self, *args): ...
    def getValuesAtPositions(self, *args): ...
    def hasIndex(self, *args): ...
    def pack(self, *args): ...
    def sampleValueCurve(self, *args): ...
    def setCurve(self, *args): ...
    def setPositionAtIndex(self, *args): ...
    def setValueAtIndex(self, *args): ...
    def sort(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def createCurve(*args, **kwargs): ...
    @staticmethod
    def createCurveAttr(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MFnBase(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args, **kwargs): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def hasObj(self, *args): ...
    def object(self, *args): ...
    def setObject(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MIffFile(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def beginGet(self, *args): ...
    def beginReadGroup(self, *args): ...
    def close(self, *args): ...
    def endGet(self, *args): ...
    def endReadGroup(self, *args): ...
    def get(self, *args): ...
    def getChunk(self, *args): ...
    def iffGetFloat(self, *args): ...
    def iffGetInt(self, *args): ...
    def iffGetShort(self, *args): ...
    def isActive(self, *args): ...
    def open(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MArrayDataHandle(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def builder(self, *args): ...
    def elementCount(self, *args): ...
    def elementIndex(self, *args): ...
    def inputArrayValue(self, *args): ...
    def inputValue(self, *args): ...
    def jumpToArrayElement(self, *args): ...
    def jumpToElement(self, *args): ...
    def next(self, *args): ...
    def outputArrayValue(self, *args): ...
    def outputValue(self, *args): ...
    def set(self, *args): ...
    def setAllClean(self, *args): ...
    def setClean(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MCallbackIdArray(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def insert(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def set(self, *args): ...
    def setLength(self, *args): ...
    def setSizeIncrement(self, *args): ...
    def sizeIncrement(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MQuaternion(_object):
    def __add__(self, *args): ...
    def __del__(self): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __imul__(self, *args): ...
    def __init__(self, *args): ...
    def __iter__(self):
        """
        Iterates on all components of a Maya api Quaternion
        """
        ...
    def __len__(self) -> int:
        """
        Number of components in the Maya api Quaternion, ie 4
        """
        ...
    def __mul__(self, *args): ...
    def __ne__(self, other: Any) -> bool: ...
    def __neg__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def __sub__(self, *args): ...
    def asEulerRotation(self, *args): ...
    def asMatrix(self, *args): ...
    def assign(self, *args): ...
    def conjugate(self, *args): ...
    def conjugateIt(self, *args): ...
    def exp(self, *args): ...
    def get(self, *args): ...
    def getAxisAngle(self, *args): ...
    def inverse(self, *args): ...
    def invertIt(self, *args): ...
    def isEquivalent(self, *args): ...
    def log(self, *args): ...
    def negateIt(self, *args): ...
    def normal(self, *args): ...
    def normalizeIt(self, *args): ...
    def scaleIt(self, *args): ...
    def setAxisAngle(self, *args): ...
    def setToXAxis(self, *args): ...
    def setToYAxis(self, *args): ...
    def setToZAxis(self, *args): ...
    @property
    def w(self): ...
    @w.setter
    def w(self, value): ...
    @property
    def x(self): ...
    @x.setter
    def x(self, value): ...
    @property
    def y(self): ...
    @y.setter
    def y(self, value): ...
    @property
    def z(self): ...
    @z.setter
    def z(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    identity : MQuaternion


class MItGeometry(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def allPositions(self, *args): ...
    def component(self, *args): ...
    def count(self, *args): ...
    def currentItem(self, *args): ...
    def exactCount(self, *args): ...
    def index(self, *args): ...
    def isDone(self, *args): ...
    def next(self, *args): ...
    def normal(self, *args): ...
    def position(self, *args): ...
    def reset(self, *args): ...
    def setAllPositions(self, *args): ...
    def setPosition(self, *args): ...
    def weight(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MFloatArray(_object):
    def __add__(self, *args): ...
    def __del__(self): ...
    def __delitem__(self, *args): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __iadd__(self, *args): ...
    def __init__(self, *args): ...
    def __len__(self) -> int: ...
    def __ne__(self, other: Any) -> bool: ...
    def __radd__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def __setitem__(self, *args): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def get(self, *args): ...
    def insert(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def set(self, *args): ...
    def setLength(self, *args): ...
    def setSizeIncrement(self, *args): ...
    def sizeIncrement(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MDistance(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def asCentimeters(self, *args): ...
    def asFeet(self, *args): ...
    def asInches(self, *args): ...
    def asKilometers(self, *args): ...
    def asMeters(self, *args): ...
    def asMiles(self, *args): ...
    def asMillimeters(self, *args): ...
    def asUnits(self, *args): ...
    def asYards(self, *args): ...
    def assign(self, *args): ...
    def setUnit(self, *args): ...
    def setValue(self, *args): ...
    def unit(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def internalToUI(*args, **kwargs): ...
    @staticmethod
    def internalUnit(*args, **kwargs): ...
    @staticmethod
    def setInternalUnit(*args, **kwargs): ...
    @staticmethod
    def setUIUnit(*args, **kwargs): ...
    @staticmethod
    def uiToInternal(*args, **kwargs): ...
    @staticmethod
    def uiUnit(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kCentimeters : int
    
    kFeet : int
    
    kInches : int
    
    kInvalid : int
    
    kKilometers : int
    
    kLast : int
    
    kMeters : int
    
    kMiles : int
    
    kMillimeters : int
    
    kYards : int


class MCacheFormatDescription(_object):
    def __getattr__(self, name): ...
    def __init__(self, *args, **kwargs): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addChannel(self, *args): ...
    def addDescriptionInfo(self, *args): ...
    def getChannelDataType(self, *args): ...
    def getChannelEndTime(self, *args): ...
    def getChannelInterpretation(self, *args): ...
    def getChannelName(self, *args): ...
    def getChannelSamplingRate(self, *args): ...
    def getChannelSamplingType(self, *args): ...
    def getChannelStartTime(self, *args): ...
    def getDescriptionInfo(self, *args): ...
    def getDistribution(self, *args): ...
    def getNumChannels(self, *args): ...
    def getStartAndEndTimes(self, *args): ...
    def getTimePerFrame(self, *args): ...
    def setDistribution(self, *args): ...
    def setTimePerFrame(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kDouble : int
    
    kDoubleArray : int
    
    kDoubleVectorArray : int
    
    kFloatArray : int
    
    kFloatVectorArray : int
    
    kInt32Array : int
    
    kIrregular : int
    
    kNoFile : int
    
    kOneFile : int
    
    kOneFilePerFrame : int
    
    kRegular : int
    
    kUnknownData : int


class MDoubleArray(_object):
    def __add__(self, *args): ...
    def __del__(self): ...
    def __delitem__(self, *args): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __iadd__(self, *args): ...
    def __init__(self, *args): ...
    def __len__(self) -> int: ...
    def __ne__(self, other: Any) -> bool: ...
    def __radd__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def __setitem__(self, *args): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def get(self, *args): ...
    def insert(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def set(self, *args): ...
    def setLength(self, *args): ...
    def setSizeIncrement(self, *args): ...
    def sizeIncrement(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MMeshSmoothOptions(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def boundaryRule(self, *args): ...
    def divisions(self, *args): ...
    def keepBorderEdge(self, *args): ...
    def keepHardEdge(self, *args): ...
    def openSubdivCreaseMethod(self, *args): ...
    def openSubdivFaceVaryingBoundary(self, *args): ...
    def openSubdivSmoothTriangles(self, *args): ...
    def openSubdivVertexBoundary(self, *args): ...
    def propEdgeHardness(self, *args): ...
    def setBoundaryRule(self, *args): ...
    def setDivisions(self, *args): ...
    def setKeepBorderEdge(self, *args): ...
    def setKeepHardEdge(self, *args): ...
    def setOpenSubdivCreaseMethod(self, *args): ...
    def setOpenSubdivFaceVaryingBoundary(self, *args): ...
    def setOpenSubdivSmoothTriangles(self, *args): ...
    def setOpenSubdivVertexBoundary(self, *args): ...
    def setPropEdgeHardness(self, *args): ...
    def setSmoothUVs(self, *args): ...
    def setSmoothness(self, *args): ...
    def setSubdivisionType(self, *args): ...
    def smoothUVs(self, *args): ...
    def smoothness(self, *args): ...
    def subdivisionType(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kAlwaysSharp : int
    
    kCatmullClark : int
    
    kChaikin : int
    
    kCreaseAll : int
    
    kCreaseEdge : int
    
    kInvalid : int
    
    kInvalidBoundary : int
    
    kInvalidCreaseMethod : int
    
    kInvalidSubdivision : int
    
    kLast : int
    
    kLastBoundary : int
    
    kLastCreaseMethod : int
    
    kLastSubdivision : int
    
    kLegacy : int
    
    kNone : int
    
    kNormal : int
    
    kOpenSubdivCatmullClarkAdaptive : int
    
    kOpenSubdivCatmullClarkUniform : int
    
    kSharpEdges : int
    
    kSharpEdgesAndCorners : int


class MDataHandle(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def acceptedTypeIds(self, *args): ...
    def asAddr(self, *args): ...
    def asAngle(self, *args): ...
    def asBool(self, *args): ...
    def asChar(self, *args): ...
    def asDistance(self, *args): ...
    def asDouble(self, *args): ...
    def asDouble2(self, *args): ...
    def asDouble3(self, *args): ...
    def asDouble4(self, *args): ...
    def asFloat(self, *args): ...
    def asFloat2(self, *args): ...
    def asFloat3(self, *args): ...
    def asFloatMatrix(self, *args): ...
    def asFloatVector(self, *args): ...
    def asGenericBool(self, *args): ...
    def asGenericChar(self, *args): ...
    def asGenericDouble(self, *args): ...
    def asGenericFloat(self, *args): ...
    def asGenericInt(self, *args): ...
    def asGenericInt64(self, *args): ...
    def asGenericShort(self, *args): ...
    def asInt(self, *args): ...
    def asInt2(self, *args): ...
    def asInt3(self, *args): ...
    def asInt64(self, *args): ...
    def asLong(self, *args): ...
    def asLong2(self, *args): ...
    def asLong3(self, *args): ...
    def asMatrix(self, *args): ...
    def asMesh(self, *args): ...
    def asMeshTransformed(self, *args): ...
    def asNurbsCurve(self, *args): ...
    def asNurbsCurveTransformed(self, *args): ...
    def asNurbsSurface(self, *args): ...
    def asNurbsSurfaceTransformed(self, *args): ...
    def asPluginData(self, *args): ...
    def asShort(self, *args): ...
    def asShort2(self, *args): ...
    def asShort3(self, *args): ...
    def asString(self, *args): ...
    def asSubdSurface(self, *args): ...
    def asSubdSurfaceTransformed(self, *args): ...
    def asTime(self, *args): ...
    def asUChar(self, *args): ...
    def asVector(self, *args): ...
    def assign(self, *args): ...
    def child(self, *args): ...
    def copy(self, *args): ...
    def copyWritable(self, *args): ...
    def data(self, *args): ...
    def datablock(self, *args): ...
    def geometryTransformMatrix(self, *args): ...
    def isGeneric(self, *args): ...
    def isNumeric(self, *args): ...
    def numericType(self, *args): ...
    def set2Double(self, *args): ...
    def set2Float(self, *args): ...
    def set2Int(self, *args): ...
    def set2Short(self, *args): ...
    def set3Double(self, *args): ...
    def set3Float(self, *args): ...
    def set3Int(self, *args): ...
    def set3Short(self, *args): ...
    def set4Double(self, *args): ...
    def setBool(self, *args): ...
    def setChar(self, *args): ...
    def setClean(self, *args): ...
    def setDouble(self, *args): ...
    def setFloat(self, *args): ...
    def setGenericBool(self, *args): ...
    def setGenericChar(self, *args): ...
    def setGenericDouble(self, *args): ...
    def setGenericFloat(self, *args): ...
    def setGenericInt(self, *args): ...
    def setGenericInt64(self, *args): ...
    def setGenericShort(self, *args): ...
    def setInt(self, *args): ...
    def setInt64(self, *args): ...
    def setMAngle(self, *args): ...
    def setMDistance(self, *args): ...
    def setMFloatMatrix(self, *args): ...
    def setMFloatVector(self, *args): ...
    def setMMatrix(self, *args): ...
    def setMObject(self, *args): ...
    def setMPxData(self, *args): ...
    def setMTime(self, *args): ...
    def setMVector(self, *args): ...
    def setShort(self, *args): ...
    def setString(self, *args): ...
    def type(self, *args): ...
    def typeId(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MObjectArray(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __getitem__(*args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def insert(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def set(self, *args): ...
    def setLength(self, *args): ...
    def setSizeIncrement(self, *args): ...
    def sizeIncrement(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MEulerRotation(_object):
    def __add__(self, *args): ...
    def __del__(self): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __iadd__(self, *args): ...
    def __imul__(self, *args): ...
    def __init__(self, *args): ...
    def __isub__(self, *args): ...
    def __iter__(self):
        """
        Iterates on all components of a Maya api EulerRotation
        """
        ...
    def __len__(self) -> int:
        """
        Number of components in the Maya api EulerRotation, ie 3
        """
        ...
    def __mul__(self, *args): ...
    def __ne__(self, other: Any) -> bool: ...
    def __neg__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def __sub__(self, *args): ...
    def alternateSolution(self, *args): ...
    def asMatrix(self, *args): ...
    def asQuaternion(self, *args): ...
    def asVector(self, *args): ...
    def assign(self, *args): ...
    def bound(self, *args): ...
    def boundIt(self, *args): ...
    def closestCut(self, *args): ...
    def closestSolution(self, *args): ...
    def incrementalRotateBy(self, *args): ...
    def inverse(self, *args): ...
    def invertIt(self, *args): ...
    def isEquivalent(self, *args): ...
    def isZero(self, *args): ...
    def reorder(self, *args): ...
    def reorderIt(self, *args): ...
    def setToAlternateSolution(self, *args): ...
    def setToClosestCut(self, *args): ...
    def setToClosestSolution(self, *args): ...
    def setValue(self, *args): ...
    @staticmethod
    def decompose(*args, **kwargs): ...
    @property
    def order(self): ...
    @order.setter
    def order(self, value): ...
    @property
    def x(self): ...
    @x.setter
    def x(self, value): ...
    @property
    def y(self): ...
    @y.setter
    def y(self, value): ...
    @property
    def z(self): ...
    @z.setter
    def z(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    identity : MEulerRotation
    
    kXYZ : int
    
    kXZY : int
    
    kYXZ : int
    
    kYZX : int
    
    kZXY : int
    
    kZYX : int


class array3dInt(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def get(self, *args): ...
    def getptr(self, *args): ...
    def set(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MFileObject(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def exists(self, *args): ...
    def expandedFullName(self, *args): ...
    def expandedPath(self, *args): ...
    def fullName(self, *args): ...
    def isSet(self, *args): ...
    def ithFullName(self, *args): ...
    def ithPath(self, *args): ...
    def name(self, *args): ...
    def overrideResolvedFullName(self, *args): ...
    def path(self, *args): ...
    def pathCount(self, *args): ...
    def rawFullName(self, *args): ...
    def rawName(self, *args): ...
    def rawPath(self, *args): ...
    def rawURI(self, *args): ...
    def resolveMethod(self, *args): ...
    def resolvedFullName(self, *args): ...
    def resolvedName(self, *args): ...
    def resolvedPath(self, *args): ...
    def setFullName(self, *args): ...
    def setName(self, *args): ...
    def setRawFullName(self, *args): ...
    def setRawName(self, *args): ...
    def setRawPath(self, *args): ...
    def setRawURI(self, *args): ...
    def setResolveMethod(self, *args): ...
    @staticmethod
    def getResolvedFullName(*args, **kwargs): ...
    @staticmethod
    def isAbsolutePath(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kBaseName : int
    
    kDirMap : int
    
    kExact : int
    
    kInputFile : int
    
    kInputReference : int
    
    kNone : int
    
    kReferenceMappings : int
    
    kRelative : int
    
    kStrict : int


class MSpace(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kInvalid : int
    
    kLast : int
    
    kObject : int
    
    kPostTransform : int
    
    kPreTransform : int
    
    kTransform : int
    
    kWorld : int


class MStreamUtils(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def readChar(*args, **kwargs): ...
    @staticmethod
    def readCharBuffer(*args, **kwargs): ...
    @staticmethod
    def readDouble(*args, **kwargs): ...
    @staticmethod
    def readFloat(*args, **kwargs): ...
    @staticmethod
    def readInt(*args, **kwargs): ...
    @staticmethod
    def stdErrorStream(*args, **kwargs): ...
    @staticmethod
    def stdOutStream(*args, **kwargs): ...
    @staticmethod
    def writeChar(*args, **kwargs): ...
    @staticmethod
    def writeCharBuffer(*args, **kwargs): ...
    @staticmethod
    def writeDouble(*args, **kwargs): ...
    @staticmethod
    def writeFloat(*args, **kwargs): ...
    @staticmethod
    def writeInt(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MItDag(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def currentItem(self, *args): ...
    def depth(self, *args): ...
    def fullPathName(self, *args): ...
    def getAllPaths(self, *args): ...
    def getPath(self, *args): ...
    def getType(self, *args): ...
    def instanceCount(self, *args): ...
    def isDone(self, *args): ...
    def isInstanced(self, *args): ...
    def item(self, *args): ...
    def next(self, *args): ...
    def partialPathName(self, *args): ...
    def prune(self, *args): ...
    def reset(self, *args): ...
    def root(self, *args): ...
    def traverseUnderWorld(self, *args): ...
    def willTraverseUnderWorld(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kBreadthFirst : int
    
    kDepthFirst : int
    
    kInvalidType : int


class MFnSubdNames(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def base(*args, **kwargs): ...
    @staticmethod
    def baseFaceId(*args, **kwargs): ...
    @staticmethod
    def baseFaceIdFromIndex(*args, **kwargs): ...
    @staticmethod
    def baseFaceIdFromLong(*args, **kwargs): ...
    @staticmethod
    def baseFaceIndex(*args, **kwargs): ...
    @staticmethod
    def baseFaceIndexFromId(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def corner(*args, **kwargs): ...
    @staticmethod
    def first(*args, **kwargs): ...
    @staticmethod
    def fromMUint64(*args, **kwargs): ...
    @staticmethod
    def fromSelectionIndices(*args, **kwargs): ...
    @staticmethod
    def level(*args, **kwargs): ...
    @staticmethod
    def levelOneFaceAsLong(*args, **kwargs): ...
    @staticmethod
    def levelOneFaceId(*args, **kwargs): ...
    @staticmethod
    def levelOneFaceIdFromIndex(*args, **kwargs): ...
    @staticmethod
    def levelOneFaceIdFromLong(*args, **kwargs): ...
    @staticmethod
    def levelOneFaceIndexFromId(*args, **kwargs): ...
    @staticmethod
    def nonBaseFaceEdges(*args, **kwargs): ...
    @staticmethod
    def nonBaseFaceVertices(*args, **kwargs): ...
    @staticmethod
    def parentFaceId(*args, **kwargs): ...
    @staticmethod
    def path(*args, **kwargs): ...
    @staticmethod
    def toMUint64(*args, **kwargs): ...
    @staticmethod
    def toSelectionIndices(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class doublePtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MSyntax(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addArg(self, *args): ...
    def addFlag(self, *args): ...
    def assign(self, *args): ...
    def canEdit(self, *args): ...
    def canQuery(self, *args): ...
    def enableEdit(self, *args): ...
    def enableQuery(self, *args): ...
    def makeFlagMultiUse(self, *args): ...
    def makeFlagQueryWithFullArgs(self, *args): ...
    def maxObjects(self, *args): ...
    def minObjects(self, *args): ...
    def setMaxObjects(self, *args): ...
    def setMinObjects(self, *args): ...
    def setObjectType(self, *args): ...
    def useSelectionAsDefault(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kAngle : int
    
    kBoolean : int
    
    kDistance : int
    
    kDouble : int
    
    kInvalidArgType : int
    
    kInvalidObjectFormat : int
    
    kLastArgType : int
    
    kLastObjectFormat : int
    
    kLong : int
    
    kNoArg : int
    
    kNone : int
    
    kSelectionItem : int
    
    kSelectionList : int
    
    kString : int
    
    kStringObjects : int
    
    kTime : int
    
    kUnsigned : int


class MPointOnNurbs(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def getPoint(self, *args): ...
    def getUV(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MUintArray(_object):
    def __add__(self, *args): ...
    def __del__(self): ...
    def __delitem__(self, *args): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __iadd__(self, *args): ...
    def __init__(self, *args): ...
    def __len__(self) -> int: ...
    def __ne__(self, other: Any) -> bool: ...
    def __radd__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def __setitem__(self, *args): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def get(self, *args): ...
    def insert(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def set(self, *args): ...
    def setLength(self, *args): ...
    def setSizeIncrement(self, *args): ...
    def sizeIncrement(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MItEdits(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addRemoveAttrEdit(self, *args): ...
    def connectDisconnectEdit(self, *args): ...
    def currentEditString(self, *args): ...
    def currentEditType(self, *args): ...
    def edit(self, *args): ...
    def fcurveEdit(self, *args): ...
    def isDone(self, *args): ...
    def isReverse(self, *args): ...
    def next(self, *args): ...
    def parentingEdit(self, *args): ...
    def removeCurrentEdit(self, *args): ...
    def reset(self, *args): ...
    def setAttrEdit(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    ALL_EDITS : int
    
    SUCCESSFUL_EDITS : int
    
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kForward : int
    
    kReverse : int


class MFn(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @property
    def nodeType(self): ...
    @nodeType.setter
    def nodeType(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kAISEnvFacade : int
    
    kAddDoubleLinear : int
    
    kAdskMaterial : int
    
    kAffect : int
    
    kAimConstraint : int
    
    kAir : int
    
    kAlignCurve : int
    
    kAlignManip : int
    
    kAlignSurface : int
    
    kAmbientLight : int
    
    kAngle : int
    
    kAngleBetween : int
    
    kAnimBlend : int
    
    kAnimBlendInOut : int
    
    kAnimCurve : int
    
    kAnimCurveTimeToAngular : int
    
    kAnimCurveTimeToDistance : int
    
    kAnimCurveTimeToTime : int
    
    kAnimCurveTimeToUnitless : int
    
    kAnimCurveUnitlessToAngular : int
    
    kAnimCurveUnitlessToDistance : int
    
    kAnimCurveUnitlessToTime : int
    
    kAnimCurveUnitlessToUnitless : int
    
    kAnimLayer : int
    
    kAnisotropy : int
    
    kAnnotation : int
    
    kAnyGeometryVarGroup : int
    
    kArcLength : int
    
    kAreaLight : int
    
    kArrayMapper : int
    
    kArrowManip : int
    
    kArubaTesselate : int
    
    kAssembly : int
    
    kAsset : int
    
    kAttachCurve : int
    
    kAttachSurface : int
    
    kAttribute : int
    
    kAttribute2Double : int
    
    kAttribute2Float : int
    
    kAttribute2Int : int
    
    kAttribute2Long : int
    
    kAttribute2Short : int
    
    kAttribute3Double : int
    
    kAttribute3Float : int
    
    kAttribute3Int : int
    
    kAttribute3Long : int
    
    kAttribute3Short : int
    
    kAttribute4Double : int
    
    kAudio : int
    
    kAverageCurveManip : int
    
    kAvgCurves : int
    
    kAvgNurbsSurfacePoints : int
    
    kAvgSurfacePoints : int
    
    kAxesActionManip : int
    
    kBackground : int
    
    kBallProjectionManip : int
    
    kBarnDoorManip : int
    
    kBase : int
    
    kBaseLattice : int
    
    kBendLattice : int
    
    kBevel : int
    
    kBevelManip : int
    
    kBevelPlus : int
    
    kBezierCurve : int
    
    kBezierCurveData : int
    
    kBezierCurveToNurbs : int
    
    kBinaryData : int
    
    kBirailSrf : int
    
    kBlend : int
    
    kBlendColorSet : int
    
    kBlendColors : int
    
    kBlendDevice : int
    
    kBlendManip : int
    
    kBlendNodeAdditiveRotation : int
    
    kBlendNodeAdditiveScale : int
    
    kBlendNodeBase : int
    
    kBlendNodeBoolean : int
    
    kBlendNodeDouble : int
    
    kBlendNodeDoubleAngle : int
    
    kBlendNodeDoubleLinear : int
    
    kBlendNodeEnum : int
    
    kBlendNodeFloat : int
    
    kBlendNodeFloatAngle : int
    
    kBlendNodeFloatLinear : int
    
    kBlendNodeInt16 : int
    
    kBlendNodeInt32 : int
    
    kBlendNodeTime : int
    
    kBlendShape : int
    
    kBlendTwoAttr : int
    
    kBlendWeighted : int
    
    kBlindData : int
    
    kBlindDataTemplate : int
    
    kBlinn : int
    
    kBlinnMaterial : int
    
    kBoundary : int
    
    kBox : int
    
    kBoxData : int
    
    kBrownian : int
    
    kBrush : int
    
    kBulge : int
    
    kBulgeLattice : int
    
    kBump : int
    
    kBump3d : int
    
    kButtonManip : int
    
    kCacheBase : int
    
    kCacheBlend : int
    
    kCacheFile : int
    
    kCacheTrack : int
    
    kCacheableNode : int
    
    kCaddyManipBase : int
    
    kCamera : int
    
    kCameraManip : int
    
    kCameraPlaneManip : int
    
    kCameraSet : int
    
    kCameraView : int
    
    kCenterManip : int
    
    kChainToSpline : int
    
    kCharacter : int
    
    kCharacterMap : int
    
    kCharacterMappingData : int
    
    kCharacterOffset : int
    
    kChecker : int
    
    kChoice : int
    
    kChooser : int
    
    kCircle : int
    
    kCircleManip : int
    
    kCirclePointManip : int
    
    kCircleSweepManip : int
    
    kClampColor : int
    
    kClientDevice : int
    
    kClip : int
    
    kClipGhostShape : int
    
    kClipLibrary : int
    
    kClipScheduler : int
    
    kClipToGhostData : int
    
    kCloseCurve : int
    
    kCloseSurface : int
    
    kClosestPointOnMesh : int
    
    kClosestPointOnSurface : int
    
    kCloth : int
    
    kCloud : int
    
    kCluster : int
    
    kClusterFilter : int
    
    kClusterFlexor : int
    
    kCoiManip : int
    
    kCollision : int
    
    kColorBackground : int
    
    kColorMgtGlobals : int
    
    kColorProfile : int
    
    kCombinationShape : int
    
    kCommCornerManip : int
    
    kCommCornerOperManip : int
    
    kCommEdgeOperManip : int
    
    kCommEdgePtManip : int
    
    kCommEdgeSegmentManip : int
    
    kComponent : int
    
    kComponentListData : int
    
    kComponentManip : int
    
    kCompoundAttribute : int
    
    kConcentricProjectionManip : int
    
    kCondition : int
    
    kCone : int
    
    kConstraint : int
    
    kContainer : int
    
    kContainerBase : int
    
    kContourProjectionManip : int
    
    kContrast : int
    
    kControl : int
    
    kControllerTag : int
    
    kCopyColorSet : int
    
    kCopyUVSet : int
    
    kCpManip : int
    
    kCrater : int
    
    kCreaseSet : int
    
    kCreate : int
    
    kCreateBPManip : int
    
    kCreateBezierManip : int
    
    kCreateCVManip : int
    
    kCreateColorSet : int
    
    kCreateEPManip : int
    
    kCreateSectionManip : int
    
    kCreateUVSet : int
    
    kCrossSectionEditManip : int
    
    kCrossSectionManager : int
    
    kCubicProjectionManip : int
    
    kCurve : int
    
    kCurveCVComponent : int
    
    kCurveCurveIntersect : int
    
    kCurveEPComponent : int
    
    kCurveEdManip : int
    
    kCurveFromMeshCoM : int
    
    kCurveFromMeshEdge : int
    
    kCurveFromSubdivEdge : int
    
    kCurveFromSubdivFace : int
    
    kCurveFromSurface : int
    
    kCurveFromSurfaceBnd : int
    
    kCurveFromSurfaceCoS : int
    
    kCurveFromSurfaceIso : int
    
    kCurveInfo : int
    
    kCurveKnotComponent : int
    
    kCurveNormalizerAngle : int
    
    kCurveNormalizerLinear : int
    
    kCurveParamComponent : int
    
    kCurveSegmentManip : int
    
    kCurveVarGroup : int
    
    kCustomEvaluatorClusterNode : int
    
    kCylinder : int
    
    kCylindricalProjectionManip : int
    
    kDOF : int
    
    kDPbirailSrf : int
    
    kDagContainer : int
    
    kDagNode : int
    
    kDagPose : int
    
    kDagSelectionItem : int
    
    kData : int
    
    kData2Double : int
    
    kData2Float : int
    
    kData2Int : int
    
    kData2Long : int
    
    kData2Short : int
    
    kData3Double : int
    
    kData3Float : int
    
    kData3Int : int
    
    kData3Long : int
    
    kData3Short : int
    
    kData4Double : int
    
    kDblTrsManip : int
    
    kDecayRegionCapComponent : int
    
    kDecayRegionComponent : int
    
    kDefaultLightList : int
    
    kDeformBend : int
    
    kDeformBendManip : int
    
    kDeformFlare : int
    
    kDeformFlareManip : int
    
    kDeformFunc : int
    
    kDeformSine : int
    
    kDeformSineManip : int
    
    kDeformSquash : int
    
    kDeformSquashManip : int
    
    kDeformTwist : int
    
    kDeformTwistManip : int
    
    kDeformWave : int
    
    kDeformWaveManip : int
    
    kDeleteColorSet : int
    
    kDeleteComponent : int
    
    kDeleteUVSet : int
    
    kDeltaMush : int
    
    kDependencyNode : int
    
    kDetachCurve : int
    
    kDetachSurface : int
    
    kDiffuseMaterial : int
    
    kDimension : int
    
    kDimensionManip : int
    
    kDirectedDisc : int
    
    kDirectionManip : int
    
    kDirectionalLight : int
    
    kDiscManip : int
    
    kDiskCache : int
    
    kDispatchCompute : int
    
    kDisplacementShader : int
    
    kDisplayLayer : int
    
    kDisplayLayerManager : int
    
    kDistance : int
    
    kDistanceBetween : int
    
    kDistanceManip : int
    
    kDofManip : int
    
    kDoubleAngleAttribute : int
    
    kDoubleArrayData : int
    
    kDoubleIndexedComponent : int
    
    kDoubleLinearAttribute : int
    
    kDoubleShadingSwitch : int
    
    kDrag : int
    
    kDropOffFunction : int
    
    kDropoffLocator : int
    
    kDropoffManip : int
    
    kDummy : int
    
    kDummyConnectable : int
    
    kDynAirManip : int
    
    kDynArrayAttrsData : int
    
    kDynAttenuationManip : int
    
    kDynBase : int
    
    kDynBaseFieldManip : int
    
    kDynEmitterManip : int
    
    kDynFieldsManip : int
    
    kDynGlobals : int
    
    kDynNewtonManip : int
    
    kDynParticleSetComponent : int
    
    kDynSpreadManip : int
    
    kDynSweptGeometryData : int
    
    kDynTurbulenceManip : int
    
    kDynamicConstraint : int
    
    kDynamicsController : int
    
    kEdgeComponent : int
    
    kEditCurve : int
    
    kEditCurveManip : int
    
    kEditMetadata : int
    
    kEditsManager : int
    
    kEmitter : int
    
    kEnableManip : int
    
    kEnumAttribute : int
    
    kEnvBall : int
    
    kEnvChrome : int
    
    kEnvCube : int
    
    kEnvFacade : int
    
    kEnvFogMaterial : int
    
    kEnvFogShape : int
    
    kEnvSky : int
    
    kEnvSphere : int
    
    kExplodeNurbsShell : int
    
    kExpression : int
    
    kExtendCurve : int
    
    kExtendCurveDistanceManip : int
    
    kExtendSurface : int
    
    kExtendSurfaceDistanceManip : int
    
    kExtract : int
    
    kExtrude : int
    
    kExtrudeManip : int
    
    kFFD : int
    
    kFFblendSrf : int
    
    kFFfilletSrf : int
    
    kFacade : int
    
    kFfdDualBase : int
    
    kField : int
    
    kFileBackground : int
    
    kFileTexture : int
    
    kFilletCurve : int
    
    kFilter : int
    
    kFilterClosestSample : int
    
    kFilterEuler : int
    
    kFilterSimplify : int
    
    kFitBspline : int
    
    kFixedLineManip : int
    
    kFlexor : int
    
    kFloatAngleAttribute : int
    
    kFloatArrayData : int
    
    kFloatLinearAttribute : int
    
    kFloatMatrixAttribute : int
    
    kFloatVectorArrayData : int
    
    kFlow : int
    
    kFluid : int
    
    kFluidData : int
    
    kFluidEmitter : int
    
    kFluidGeom : int
    
    kFluidTexture2D : int
    
    kFluidTexture3D : int
    
    kFollicle : int
    
    kForceUpdateManip : int
    
    kFosterParent : int
    
    kFourByFourMatrix : int
    
    kFractal : int
    
    kFreePointManip : int
    
    kFreePointTriadManip : int
    
    kGammaCorrect : int
    
    kGenericAttribute : int
    
    kGeoConnectable : int
    
    kGeoConnector : int
    
    kGeomBind : int
    
    kGeometric : int
    
    kGeometryConstraint : int
    
    kGeometryData : int
    
    kGeometryFilt : int
    
    kGeometryOnLineManip : int
    
    kGeometryVarGroup : int
    
    kGlobalCacheControls : int
    
    kGlobalStitch : int
    
    kGranite : int
    
    kGravity : int
    
    kGreasePencilSequence : int
    
    kGreasePlane : int
    
    kGreasePlaneRenderShape : int
    
    kGrid : int
    
    kGroundPlane : int
    
    kGroupId : int
    
    kGroupParts : int
    
    kGuide : int
    
    kGuideLine : int
    
    kHairConstraint : int
    
    kHairSystem : int
    
    kHairTubeShader : int
    
    kHandleRotateManip : int
    
    kHardenPointCurve : int
    
    kHardwareReflectionMap : int
    
    kHardwareRenderGlobals : int
    
    kHardwareRenderingGlobals : int
    
    kHeightField : int
    
    kHikEffector : int
    
    kHikFKJoint : int
    
    kHikFloorContactMarker : int
    
    kHikGroundPlane : int
    
    kHikHandle : int
    
    kHikIKEffector : int
    
    kHikSolver : int
    
    kHistorySwitch : int
    
    kHsvToRgb : int
    
    kHwShaderNode : int
    
    kHyperGraphInfo : int
    
    kHyperLayout : int
    
    kHyperLayoutDG : int
    
    kHyperView : int
    
    kIkEffector : int
    
    kIkHandle : int
    
    kIkRPManip : int
    
    kIkSolver : int
    
    kIkSplineManip : int
    
    kIkSystem : int
    
    kIllustratorCurve : int
    
    kImageAdd : int
    
    kImageBlur : int
    
    kImageColorCorrect : int
    
    kImageData : int
    
    kImageDepth : int
    
    kImageDiff : int
    
    kImageDisplay : int
    
    kImageFilter : int
    
    kImageLoad : int
    
    kImageMotionBlur : int
    
    kImageMultiply : int
    
    kImageNetDest : int
    
    kImageNetSrc : int
    
    kImageOver : int
    
    kImagePlane : int
    
    kImageRender : int
    
    kImageSave : int
    
    kImageSource : int
    
    kImageUnder : int
    
    kImageView : int
    
    kImplicitCone : int
    
    kImplicitSphere : int
    
    kInsertKnotCrv : int
    
    kInsertKnotSrf : int
    
    kInstancer : int
    
    kInt64ArrayData : int
    
    kIntArrayData : int
    
    kIntersectSurface : int
    
    kInvalid : int
    
    kIsoparmComponent : int
    
    kIsoparmManip : int
    
    kItemList : int
    
    kJiggleDeformer : int
    
    kJoint : int
    
    kJointCluster : int
    
    kJointClusterManip : int
    
    kJointTranslateManip : int
    
    kKeyframeDelta : int
    
    kKeyframeDeltaAddRemove : int
    
    kKeyframeDeltaBlockAddRemove : int
    
    kKeyframeDeltaBreakdown : int
    
    kKeyframeDeltaInfType : int
    
    kKeyframeDeltaMove : int
    
    kKeyframeDeltaScale : int
    
    kKeyframeDeltaTangent : int
    
    kKeyframeDeltaWeighted : int
    
    kKeyframeRegionManip : int
    
    kKeyingGroup : int
    
    kLambert : int
    
    kLambertMaterial : int
    
    kLast : int
    
    kLattice : int
    
    kLatticeComponent : int
    
    kLatticeData : int
    
    kLatticeGeom : int
    
    kLayeredShader : int
    
    kLayeredTexture : int
    
    kLeastSquares : int
    
    kLeather : int
    
    kLight : int
    
    kLightDataAttribute : int
    
    kLightFogMaterial : int
    
    kLightInfo : int
    
    kLightLink : int
    
    kLightList : int
    
    kLightManip : int
    
    kLightProjectionGeometry : int
    
    kLightSource : int
    
    kLightSourceMaterial : int
    
    kLimitManip : int
    
    kLineArrowManip : int
    
    kLineManip : int
    
    kLineModifier : int
    
    kLinearLight : int
    
    kLocator : int
    
    kLodGroup : int
    
    kLodThresholds : int
    
    kLookAt : int
    
    kLuminance : int
    
    kMCsolver : int
    
    kMPbirailSrf : int
    
    kMakeGroup : int
    
    kMandelbrot : int
    
    kMandelbrot3D : int
    
    kManip2DContainer : int
    
    kManipContainer : int
    
    kManipulator : int
    
    kManipulator2D : int
    
    kManipulator3D : int
    
    kMarble : int
    
    kMarker : int
    
    kMarkerManip : int
    
    kMaterial : int
    
    kMaterialFacade : int
    
    kMaterialInfo : int
    
    kMatrixAdd : int
    
    kMatrixArrayData : int
    
    kMatrixAttribute : int
    
    kMatrixData : int
    
    kMatrixFloatData : int
    
    kMatrixHold : int
    
    kMatrixMult : int
    
    kMatrixPass : int
    
    kMatrixWtAdd : int
    
    kMembrane : int
    
    kMentalRayTexture : int
    
    kMergeVertsToolManip : int
    
    kMesh : int
    
    kMeshComponent : int
    
    kMeshData : int
    
    kMeshEdgeComponent : int
    
    kMeshFaceVertComponent : int
    
    kMeshFrEdgeComponent : int
    
    kMeshGeom : int
    
    kMeshMapComponent : int
    
    kMeshPolygonComponent : int
    
    kMeshVarGroup : int
    
    kMeshVertComponent : int
    
    kMeshVtxFaceComponent : int
    
    kMessageAttribute : int
    
    kMidModifier : int
    
    kMidModifierWithMatrix : int
    
    kModel : int
    
    kModifyEdgeBaseManip : int
    
    kModifyEdgeCrvManip : int
    
    kModifyEdgeManip : int
    
    kMotionPath : int
    
    kMotionPathManip : int
    
    kMountain : int
    
    kMoveUVShellManip2D : int
    
    kMoveVertexManip : int
    
    kMultDoubleLinear : int
    
    kMultiSubVertexComponent : int
    
    kMultilisterLight : int
    
    kMultiplyDivide : int
    
    kMute : int
    
    kNBase : int
    
    kNCloth : int
    
    kNComponent : int
    
    kNId : int
    
    kNIdData : int
    
    kNLE : int
    
    kNObject : int
    
    kNObjectData : int
    
    kNParticle : int
    
    kNRigid : int
    
    kNamedObject : int
    
    kNearestPointOnCurve : int
    
    kNewton : int
    
    kNodeGraphEditorBookmarkInfo : int
    
    kNodeGraphEditorBookmarks : int
    
    kNodeGraphEditorInfo : int
    
    kNoise : int
    
    kNonAmbientLight : int
    
    kNonDagSelectionItem : int
    
    kNonExtendedLight : int
    
    kNonLinear : int
    
    kNormalConstraint : int
    
    kNucleus : int
    
    kNumericAttribute : int
    
    kNumericData : int
    
    kNurbsBoolean : int
    
    kNurbsCircular2PtArc : int
    
    kNurbsCircular3PtArc : int
    
    kNurbsCube : int
    
    kNurbsCurve : int
    
    kNurbsCurveData : int
    
    kNurbsCurveGeom : int
    
    kNurbsCurveToBezier : int
    
    kNurbsPlane : int
    
    kNurbsSquare : int
    
    kNurbsSurface : int
    
    kNurbsSurfaceData : int
    
    kNurbsSurfaceGeom : int
    
    kNurbsTesselate : int
    
    kNurbsToSubdiv : int
    
    kObjectAttrFilter : int
    
    kObjectBinFilter : int
    
    kObjectFilter : int
    
    kObjectMultiFilter : int
    
    kObjectNameFilter : int
    
    kObjectRenderFilter : int
    
    kObjectScriptFilter : int
    
    kObjectTypeFilter : int
    
    kOcean : int
    
    kOceanDeformer : int
    
    kOceanShader : int
    
    kOffsetCos : int
    
    kOffsetCosManip : int
    
    kOffsetCurve : int
    
    kOffsetCurveManip : int
    
    kOffsetSurface : int
    
    kOffsetSurfaceManip : int
    
    kOldGeometryConstraint : int
    
    kOpticalFX : int
    
    kOrientConstraint : int
    
    kOrientationComponent : int
    
    kOrientationLocator : int
    
    kOrientationMarker : int
    
    kOrthoGrid : int
    
    kPASolver : int
    
    kPairBlend : int
    
    kParamDimension : int
    
    kParentConstraint : int
    
    kParticle : int
    
    kParticleAgeMapper : int
    
    kParticleCloud : int
    
    kParticleColorMapper : int
    
    kParticleIncandecenceMapper : int
    
    kParticleSamplerInfo : int
    
    kParticleTransparencyMapper : int
    
    kPartition : int
    
    kPassContributionMap : int
    
    kPfxGeometry : int
    
    kPfxHair : int
    
    kPfxToon : int
    
    kPhong : int
    
    kPhongExplorer : int
    
    kPhongMaterial : int
    
    kPinToGeometryProx : int
    
    kPinToGeometryUV : int
    
    kPivotComponent : int
    
    kPivotManip2D : int
    
    kPlace2dTexture : int
    
    kPlace3dTexture : int
    
    kPlanarProjectionManip : int
    
    kPlanarTrimSrf : int
    
    kPlane : int
    
    kPlugin : int
    
    kPluginBlendShape : int
    
    kPluginCameraSet : int
    
    kPluginClientDevice : int
    
    kPluginConstraintNode : int
    
    kPluginData : int
    
    kPluginDeformerNode : int
    
    kPluginDependNode : int
    
    kPluginEmitterNode : int
    
    kPluginFieldNode : int
    
    kPluginGeometryData : int
    
    kPluginGeometryFilter : int
    
    kPluginHardwareShader : int
    
    kPluginHwShaderNode : int
    
    kPluginIkSolver : int
    
    kPluginImagePlaneNode : int
    
    kPluginLocatorNode : int
    
    kPluginManipContainer : int
    
    kPluginManipulatorNode : int
    
    kPluginMotionPathNode : int
    
    kPluginObjectSet : int
    
    kPluginParticleAttributeMapperNode : int
    
    kPluginShape : int
    
    kPluginSkinCluster : int
    
    kPluginSpringNode : int
    
    kPluginThreadedDevice : int
    
    kPluginTransformNode : int
    
    kPlusMinusAverage : int
    
    kPointArrayData : int
    
    kPointConstraint : int
    
    kPointLight : int
    
    kPointManip : int
    
    kPointMatrixMult : int
    
    kPointOnCurveInfo : int
    
    kPointOnCurveManip : int
    
    kPointOnLineManip : int
    
    kPointOnPolyConstraint : int
    
    kPointOnSurfaceInfo : int
    
    kPointOnSurfaceManip : int
    
    kPoleVectorConstraint : int
    
    kPolyAppend : int
    
    kPolyAppendVertex : int
    
    kPolyArrow : int
    
    kPolyAutoProj : int
    
    kPolyAutoProjManip : int
    
    kPolyAverageVertex : int
    
    kPolyBevel : int
    
    kPolyBevel2 : int
    
    kPolyBevel3 : int
    
    kPolyBlindData : int
    
    kPolyBoolOp : int
    
    kPolyBridgeEdge : int
    
    kPolyCBoolOp : int
    
    kPolyCaddyManip : int
    
    kPolyChipOff : int
    
    kPolyCircularize : int
    
    kPolyClean : int
    
    kPolyCloseBorder : int
    
    kPolyCollapseEdge : int
    
    kPolyCollapseF : int
    
    kPolyColorDel : int
    
    kPolyColorMod : int
    
    kPolyColorPerVertex : int
    
    kPolyComponentData : int
    
    kPolyCone : int
    
    kPolyConnectComponents : int
    
    kPolyContourProj : int
    
    kPolyCreaseEdge : int
    
    kPolyCreateFacet : int
    
    kPolyCreateToolManip : int
    
    kPolyCreator : int
    
    kPolyCube : int
    
    kPolyCut : int
    
    kPolyCutManip : int
    
    kPolyCutManipContainer : int
    
    kPolyCylProj : int
    
    kPolyCylinder : int
    
    kPolyDelEdge : int
    
    kPolyDelFacet : int
    
    kPolyDelVertex : int
    
    kPolyDuplicateEdge : int
    
    kPolyEdgeToCurve : int
    
    kPolyEditEdgeFlow : int
    
    kPolyExtrudeEdge : int
    
    kPolyExtrudeFacet : int
    
    kPolyExtrudeManip : int
    
    kPolyExtrudeManipContainer : int
    
    kPolyExtrudeVertex : int
    
    kPolyFlipEdge : int
    
    kPolyFlipUV : int
    
    kPolyHelix : int
    
    kPolyHoleFace : int
    
    kPolyLayoutUV : int
    
    kPolyMapCut : int
    
    kPolyMapDel : int
    
    kPolyMapSew : int
    
    kPolyMapSewMove : int
    
    kPolyMappingManip : int
    
    kPolyMergeEdge : int
    
    kPolyMergeFacet : int
    
    kPolyMergeUV : int
    
    kPolyMergeVert : int
    
    kPolyMesh : int
    
    kPolyMirror : int
    
    kPolyMirrorManipContainer : int
    
    kPolyModifierManip : int
    
    kPolyModifierManipContainer : int
    
    kPolyMoveEdge : int
    
    kPolyMoveFacet : int
    
    kPolyMoveFacetUV : int
    
    kPolyMoveUV : int
    
    kPolyMoveUVManip : int
    
    kPolyMoveVertex : int
    
    kPolyMoveVertexManip : int
    
    kPolyMoveVertexUV : int
    
    kPolyNormal : int
    
    kPolyNormalPerVertex : int
    
    kPolyNormalizeUV : int
    
    kPolyPassThru : int
    
    kPolyPinUV : int
    
    kPolyPipe : int
    
    kPolyPlanProj : int
    
    kPolyPlatonicSolid : int
    
    kPolyPoke : int
    
    kPolyPokeManip : int
    
    kPolyPrimitive : int
    
    kPolyPrimitiveMisc : int
    
    kPolyPrism : int
    
    kPolyProj : int
    
    kPolyProjectCurve : int
    
    kPolyProjectionManip : int
    
    kPolyPyramid : int
    
    kPolyQuad : int
    
    kPolyReduce : int
    
    kPolyRemesh : int
    
    kPolySelectEditFeedbackManip : int
    
    kPolySeparate : int
    
    kPolySewEdge : int
    
    kPolySmooth : int
    
    kPolySmoothFacet : int
    
    kPolySmoothProxy : int
    
    kPolySoftEdge : int
    
    kPolySphProj : int
    
    kPolySphere : int
    
    kPolySpinEdge : int
    
    kPolySplit : int
    
    kPolySplitEdge : int
    
    kPolySplitRing : int
    
    kPolySplitToolManip : int
    
    kPolySplitVert : int
    
    kPolyStraightenUVBorder : int
    
    kPolySubdEdge : int
    
    kPolySubdFacet : int
    
    kPolyToSubdiv : int
    
    kPolyToolFeedbackManip : int
    
    kPolyToolFeedbackShape : int
    
    kPolyTorus : int
    
    kPolyTransfer : int
    
    kPolyTriangulate : int
    
    kPolyTweak : int
    
    kPolyTweakUV : int
    
    kPolyUVRectangle : int
    
    kPolyUnite : int
    
    kPolyVertexNormalManip : int
    
    kPolyWedgeFace : int
    
    kPoseInterpolatorManager : int
    
    kPositionMarker : int
    
    kPostProcessList : int
    
    kPrecompExport : int
    
    kPrimitive : int
    
    kProjectCurve : int
    
    kProjectTangent : int
    
    kProjectTangentManip : int
    
    kProjection : int
    
    kProjectionManip : int
    
    kProjectionMultiManip : int
    
    kProjectionUVManip : int
    
    kPropModManip : int
    
    kPropMoveTriadManip : int
    
    kProxWrap : int
    
    kProxy : int
    
    kProxyManager : int
    
    kPsdFileTexture : int
    
    kQuadPtOnLineManip : int
    
    kQuadShadingSwitch : int
    
    kRBFsurface : int
    
    kRPsolver : int
    
    kRadial : int
    
    kRadius : int
    
    kRamp : int
    
    kRampBackground : int
    
    kRampShader : int
    
    kRbfSrfManip : int
    
    kReForm : int
    
    kRebuildCurve : int
    
    kRebuildSurface : int
    
    kRecord : int
    
    kReference : int
    
    kReflect : int
    
    kRemapColor : int
    
    kRemapHsv : int
    
    kRemapValue : int
    
    kRenderBox : int
    
    kRenderCone : int
    
    kRenderGlobals : int
    
    kRenderGlobalsList : int
    
    kRenderLayer : int
    
    kRenderLayerManager : int
    
    kRenderPass : int
    
    kRenderPassSet : int
    
    kRenderQuality : int
    
    kRenderRect : int
    
    kRenderSetup : int
    
    kRenderSphere : int
    
    kRenderTarget : int
    
    kRenderUtilityList : int
    
    kRenderedImageSource : int
    
    kRenderingList : int
    
    kReorderUVSet : int
    
    kResolution : int
    
    kResultCurve : int
    
    kResultCurveTimeToAngular : int
    
    kResultCurveTimeToDistance : int
    
    kResultCurveTimeToTime : int
    
    kResultCurveTimeToUnitless : int
    
    kReverse : int
    
    kReverseCrvManip : int
    
    kReverseCurve : int
    
    kReverseCurveManip : int
    
    kReverseSurface : int
    
    kReverseSurfaceManip : int
    
    kRevolve : int
    
    kRevolveManip : int
    
    kRevolvedPrimitive : int
    
    kRevolvedPrimitiveManip : int
    
    kRgbToHsv : int
    
    kRigid : int
    
    kRigidConstraint : int
    
    kRigidDeform : int
    
    kRigidSolver : int
    
    kRock : int
    
    kRotateBoxManip : int
    
    kRotateLimitsManip : int
    
    kRotateManip : int
    
    kRotateUVManip2D : int
    
    kRoundConstantRadius : int
    
    kRoundConstantRadiusManip : int
    
    kRoundRadiusCrvManip : int
    
    kRoundRadiusManip : int
    
    kSCsolver : int
    
    kSPbirailSrf : int
    
    kSamplerInfo : int
    
    kScaleConstraint : int
    
    kScaleLimitsManip : int
    
    kScaleManip : int
    
    kScalePointManip : int
    
    kScaleUVManip2D : int
    
    kScalingBoxManip : int
    
    kScreenAlignedCircleManip : int
    
    kScript : int
    
    kScriptManip : int
    
    kSculpt : int
    
    kSectionManip : int
    
    kSelectionItem : int
    
    kSelectionList : int
    
    kSelectionListData : int
    
    kSelectionListOperator : int
    
    kSequenceManager : int
    
    kSequencer : int
    
    kSet : int
    
    kSetGroupComponent : int
    
    kSetRange : int
    
    kSfRevolveManip : int
    
    kShaderGlow : int
    
    kShaderList : int
    
    kShadingEngine : int
    
    kShadingMap : int
    
    kShape : int
    
    kShapeEditorManager : int
    
    kShapeFragment : int
    
    kShot : int
    
    kShrinkWrapFilter : int
    
    kSimpleVolumeShader : int
    
    kSingleIndexedComponent : int
    
    kSingleShadingSwitch : int
    
    kSketchPlane : int
    
    kSkin : int
    
    kSkinBinding : int
    
    kSkinClusterFilter : int
    
    kSkinShader : int
    
    kSl60 : int
    
    kSmear : int
    
    kSmoothCurve : int
    
    kSmoothTangentSrf : int
    
    kSnapUVManip2D : int
    
    kSnapshot : int
    
    kSnapshotPath : int
    
    kSnapshotShape : int
    
    kSnow : int
    
    kSoftMod : int
    
    kSoftModFilter : int
    
    kSoftModManip : int
    
    kSolidFractal : int
    
    kSphere : int
    
    kSphereData : int
    
    kSphericalProjectionManip : int
    
    kSplineSolver : int
    
    kSpotCylinderManip : int
    
    kSpotLight : int
    
    kSpotManip : int
    
    kSpring : int
    
    kSprite : int
    
    kSquareSrf : int
    
    kSquareSrfManip : int
    
    kStateManip : int
    
    kStencil : int
    
    kStereoCameraMaster : int
    
    kStitchAsNurbsShell : int
    
    kStitchSrf : int
    
    kStitchSrfManip : int
    
    kStoryBoard : int
    
    kStringArrayData : int
    
    kStringData : int
    
    kStringShadingSwitch : int
    
    kStroke : int
    
    kStrokeGlobals : int
    
    kStucco : int
    
    kStudioClearCoat : int
    
    kStyleCurve : int
    
    kSubCurve : int
    
    kSubSurface : int
    
    kSubVertexComponent : int
    
    kSubdAddTopology : int
    
    kSubdAutoProj : int
    
    kSubdBlindData : int
    
    kSubdBoolean : int
    
    kSubdCleanTopology : int
    
    kSubdCloseBorder : int
    
    kSubdDelFace : int
    
    kSubdExtrudeFace : int
    
    kSubdHierBlind : int
    
    kSubdLayoutUV : int
    
    kSubdMapCut : int
    
    kSubdMapSewMove : int
    
    kSubdMappingManip : int
    
    kSubdMergeVert : int
    
    kSubdModifier : int
    
    kSubdModifyEdge : int
    
    kSubdMoveEdge : int
    
    kSubdMoveFace : int
    
    kSubdMoveVertex : int
    
    kSubdPlanProj : int
    
    kSubdProjectionManip : int
    
    kSubdSplitFace : int
    
    kSubdSubdivideFace : int
    
    kSubdTweak : int
    
    kSubdTweakUV : int
    
    kSubdiv : int
    
    kSubdivCVComponent : int
    
    kSubdivCollapse : int
    
    kSubdivCompId : int
    
    kSubdivData : int
    
    kSubdivEdgeComponent : int
    
    kSubdivFaceComponent : int
    
    kSubdivGeom : int
    
    kSubdivMapComponent : int
    
    kSubdivReverseFaces : int
    
    kSubdivSurfaceVarGroup : int
    
    kSubdivToNurbs : int
    
    kSubdivToPoly : int
    
    kSummaryObject : int
    
    kSuper : int
    
    kSurface : int
    
    kSurfaceCVComponent : int
    
    kSurfaceEPComponent : int
    
    kSurfaceEdManip : int
    
    kSurfaceFaceComponent : int
    
    kSurfaceInfo : int
    
    kSurfaceKnotComponent : int
    
    kSurfaceLuminance : int
    
    kSurfaceRangeComponent : int
    
    kSurfaceShader : int
    
    kSurfaceVarGroup : int
    
    kSymmetryConstraint : int
    
    kSymmetryLocator : int
    
    kSymmetryMapCurve : int
    
    kSymmetryMapVector : int
    
    kTangentConstraint : int
    
    kTension : int
    
    kTexLattice : int
    
    kTexLatticeDeformManip : int
    
    kTexSmoothManip : int
    
    kTexSmudgeUVManip : int
    
    kTextButtonManip : int
    
    kTextCurves : int
    
    kTextManip : int
    
    kTexture2d : int
    
    kTexture3d : int
    
    kTextureBakeSet : int
    
    kTextureDeformer : int
    
    kTextureDeformerHandle : int
    
    kTextureEnv : int
    
    kTextureList : int
    
    kTextureManip3D : int
    
    kThreadedDevice : int
    
    kThreePointArcManip : int
    
    kTime : int
    
    kTimeAttribute : int
    
    kTimeEditor : int
    
    kTimeEditorAnimSource : int
    
    kTimeEditorClip : int
    
    kTimeEditorClipBase : int
    
    kTimeEditorClipEvaluator : int
    
    kTimeEditorInterpolator : int
    
    kTimeEditorTracks : int
    
    kTimeFunction : int
    
    kTimeToUnitConversion : int
    
    kTimeWarp : int
    
    kToggleManip : int
    
    kToggleOnLineManip : int
    
    kToolContext : int
    
    kToonLineAttributes : int
    
    kTorus : int
    
    kTowPointManip : int
    
    kTowPointOnCurveManip : int
    
    kTowPointOnSurfaceManip : int
    
    kTrackInfoManager : int
    
    kTransferAttributes : int
    
    kTransform : int
    
    kTransformBoxManip : int
    
    kTransformGeometry : int
    
    kTranslateBoxManip : int
    
    kTranslateLimitsManip : int
    
    kTranslateManip : int
    
    kTranslateManip2D : int
    
    kTranslateUVManip : int
    
    kTranslateUVManip2D : int
    
    kTriadManip : int
    
    kTrim : int
    
    kTrimLocator : int
    
    kTrimManip : int
    
    kTrimWithBoundaries : int
    
    kTriplanarProjectionManip : int
    
    kTripleIndexedComponent : int
    
    kTripleShadingSwitch : int
    
    kTrsInsertManip : int
    
    kTrsManip : int
    
    kTrsTransManip : int
    
    kTrsXformManip : int
    
    kTurbulence : int
    
    kTweak : int
    
    kTwoPointArcManip : int
    
    kTxSl : int
    
    kTypedAttribute : int
    
    kUInt64ArrayData : int
    
    kUVManip2D : int
    
    kUfeProxyTransform : int
    
    kUint64SingleIndexedComponent : int
    
    kUnderWorld : int
    
    kUniform : int
    
    kUnitAttribute : int
    
    kUnitConversion : int
    
    kUnitToTimeConversion : int
    
    kUnknown : int
    
    kUnknownDag : int
    
    kUnknownTransform : int
    
    kUntrim : int
    
    kUnused1 : int
    
    kUnused2 : int
    
    kUnused3 : int
    
    kUnused4 : int
    
    kUnused5 : int
    
    kUnused6 : int
    
    kUseBackground : int
    
    kUvChooser : int
    
    kVectorArrayData : int
    
    kVectorProduct : int
    
    kVertexBakeSet : int
    
    kVertexWeightSet : int
    
    kViewColorManager : int
    
    kViewManip : int
    
    kVolumeAxis : int
    
    kVolumeBindManip : int
    
    kVolumeFog : int
    
    kVolumeLight : int
    
    kVolumeNoise : int
    
    kVolumeShader : int
    
    kVortex : int
    
    kWater : int
    
    kWeightGeometryFilt : int
    
    kWire : int
    
    kWood : int
    
    kWorld : int
    
    kWrapFilter : int
    
    kWriteToColorBuffer : int
    
    kWriteToDepthBuffer : int
    
    kWriteToFrameBuffer : int
    
    kWriteToLabelBuffer : int
    
    kWriteToVectorBuffer : int
    
    kXformManip : int
    
    kXsectionSubdivEdit : int


class MGlobal(_object):
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def addToModel(*args, **kwargs): ...
    @staticmethod
    def addToModelAt(*args, **kwargs): ...
    @staticmethod
    def animSelectionMask(*args, **kwargs): ...
    @staticmethod
    def apiVersion(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def clearSelectionList(*args, **kwargs): ...
    @staticmethod
    def closeErrorLog(*args, **kwargs): ...
    @staticmethod
    def componentSelectionMask(*args, **kwargs): ...
    @staticmethod
    def currentToolContext(*args, **kwargs): ...
    @staticmethod
    def customVersion(*args, **kwargs): ...
    @staticmethod
    def defaultErrorLogPathName(*args, **kwargs): ...
    @staticmethod
    def deleteNode(*args, **kwargs): ...
    @staticmethod
    def disableStow(*args, **kwargs): ...
    @staticmethod
    def displayError(*args, **kwargs): ...
    @staticmethod
    def displayInfo(*args, **kwargs): ...
    @staticmethod
    def displayWarning(*args, **kwargs): ...
    @staticmethod
    def doErrorLogEntry(*args, **kwargs): ...
    @staticmethod
    def errorLogPathName(*args, **kwargs): ...
    @staticmethod
    def errorLoggingIsOn(*args, **kwargs): ...
    @staticmethod
    def executeCommand(*args, **kwargs): ...
    @staticmethod
    def executeCommandOnIdle(*args, **kwargs): ...
    @staticmethod
    def executeCommandStringResult(*args, **kwargs): ...
    @staticmethod
    def getAbsolutePathToResources(*args, **kwargs): ...
    @staticmethod
    def getActiveSelectionList(*args, **kwargs): ...
    @staticmethod
    def getAssociatedSets(*args, **kwargs): ...
    @staticmethod
    def getFunctionSetList(*args, **kwargs): ...
    @staticmethod
    def getHiliteList(*args, **kwargs): ...
    @staticmethod
    def getLiveList(*args, **kwargs): ...
    @staticmethod
    def getPreselectionHiliteList(*args, **kwargs): ...
    @staticmethod
    def getRichSelection(*args, **kwargs): ...
    @staticmethod
    def getSelectionListByName(*args, **kwargs): ...
    @staticmethod
    def isRedoing(*args, **kwargs): ...
    @staticmethod
    def isSelected(*args, **kwargs): ...
    @staticmethod
    def isUndoing(*args, **kwargs): ...
    @staticmethod
    def isYAxisUp(*args, **kwargs): ...
    @staticmethod
    def isZAxisUp(*args, **kwargs): ...
    @staticmethod
    def mayaState(*args, **kwargs): ...
    @staticmethod
    def mayaVersion(*args, **kwargs): ...
    @staticmethod
    def miscSelectionMask(*args, **kwargs): ...
    @staticmethod
    def objectSelectionMask(*args, **kwargs): ...
    @staticmethod
    def optionVarDoubleValue(*args, **kwargs): ...
    @staticmethod
    def optionVarExists(*args, **kwargs): ...
    @staticmethod
    def optionVarIntValue(*args, **kwargs): ...
    @staticmethod
    def optionVarStringValue(*args, **kwargs): ...
    @staticmethod
    def removeFromModel(*args, **kwargs): ...
    @staticmethod
    def removeOptionVar(*args, **kwargs): ...
    @staticmethod
    def resetToDefaultErrorLogPathName(*args, **kwargs): ...
    @staticmethod
    def select(*args, **kwargs): ...
    @staticmethod
    def selectByName(*args, **kwargs): ...
    @staticmethod
    def selectCommand(*args, **kwargs): ...
    @staticmethod
    def selectFromScreen(*args, **kwargs): ...
    @staticmethod
    def selectionMethod(*args, **kwargs): ...
    @staticmethod
    def selectionMode(*args, **kwargs): ...
    @staticmethod
    def setActiveSelectionList(*args, **kwargs): ...
    @staticmethod
    def setAnimSelectionMask(*args, **kwargs): ...
    @staticmethod
    def setComponentSelectionMask(*args, **kwargs): ...
    @staticmethod
    def setDisableStow(*args, **kwargs): ...
    @staticmethod
    def setDisplayCVs(*args, **kwargs): ...
    @staticmethod
    def setErrorLogPathName(*args, **kwargs): ...
    @staticmethod
    def setHiliteList(*args, **kwargs): ...
    @staticmethod
    def setMiscSelectionMask(*args, **kwargs): ...
    @staticmethod
    def setObjectSelectionMask(*args, **kwargs): ...
    @staticmethod
    def setOptionVarValue(*args, **kwargs): ...
    @staticmethod
    def setPreselectionHiliteList(*args, **kwargs): ...
    @staticmethod
    def setRichSelection(*args, **kwargs): ...
    @staticmethod
    def setSelectionMode(*args, **kwargs): ...
    @staticmethod
    def setTrackSelectionOrderEnabled(*args, **kwargs): ...
    @staticmethod
    def setYAxisUp(*args, **kwargs): ...
    @staticmethod
    def setZAxisUp(*args, **kwargs): ...
    @staticmethod
    def sourceFile(*args, **kwargs): ...
    @staticmethod
    def startErrorLogging(*args, **kwargs): ...
    @staticmethod
    def stopErrorLogging(*args, **kwargs): ...
    @staticmethod
    def trackSelectionOrderEnabled(*args, **kwargs): ...
    @staticmethod
    def unselect(*args, **kwargs): ...
    @staticmethod
    def unselectByName(*args, **kwargs): ...
    @staticmethod
    def upAxis(*args, **kwargs): ...
    @staticmethod
    def viewFrame(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kAddToHeadOfList : int
    
    kAddToList : int
    
    kBaseUIMode : int
    
    kBatch : int
    
    kInteractive : int
    
    kLibraryApp : int
    
    kRemoveFromList : int
    
    kReplaceList : int
    
    kSelectComponentMode : int
    
    kSelectLeafMode : int
    
    kSelectObjectMode : int
    
    kSelectRootMode : int
    
    kSelectTemplateMode : int
    
    kSurfaceSelectMethod : int
    
    kWireframeSelectMethod : int
    
    kXORWithList : int


class MAttributeSpec(_object):
    def __del__(self): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def dimensions(self, *args): ...
    def name(self, *args): ...
    def setDimensions(self, *args): ...
    def setName(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MDGModifier(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addAttribute(self, *args): ...
    def addExtensionAttribute(self, *args): ...
    def commandToExecute(self, *args): ...
    def connect(self, *args): ...
    def createNode(self, *args): ...
    def deleteMetadata(self, *args): ...
    def deleteNode(self, *args): ...
    def disconnect(self, *args): ...
    def doIt(self, *args): ...
    def linkExtensionAttributeToPlugin(self, *args): ...
    def newPlugValue(self, *args): ...
    def newPlugValueBool(self, *args): ...
    def newPlugValueChar(self, *args): ...
    def newPlugValueDouble(self, *args): ...
    def newPlugValueFloat(self, *args): ...
    def newPlugValueInt(self, *args): ...
    def newPlugValueInt64(self, *args): ...
    def newPlugValueMAngle(self, *args): ...
    def newPlugValueMDistance(self, *args): ...
    def newPlugValueMTime(self, *args): ...
    def newPlugValueShort(self, *args): ...
    def newPlugValueString(self, *args): ...
    def pythonCommandToExecute(self, *args): ...
    def removeAttribute(self, *args): ...
    def removeExtensionAttribute(self, *args): ...
    def removeExtensionAttributeIfUnset(self, *args): ...
    def removeMultiInstance(self, *args): ...
    def renameAttribute(self, *args): ...
    def renameNode(self, *args): ...
    def setMetadata(self, *args): ...
    def setNodeLockState(self, *args): ...
    def undoIt(self, *args): ...
    def unlinkExtensionAttributeFromPlugin(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MAngle(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def asAngMinutes(self, *args): ...
    def asAngSeconds(self, *args): ...
    def asDegrees(self, *args): ...
    def asRadians(self, *args): ...
    def asUnits(self, *args): ...
    def assign(self, *args): ...
    def setUnit(self, *args): ...
    def setValue(self, *args): ...
    def unit(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def internalToUI(*args, **kwargs): ...
    @staticmethod
    def internalUnit(*args, **kwargs): ...
    @staticmethod
    def setInternalUnit(*args, **kwargs): ...
    @staticmethod
    def setUIUnit(*args, **kwargs): ...
    @staticmethod
    def uiToInternal(*args, **kwargs): ...
    @staticmethod
    def uiUnit(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kAngMinutes : int
    
    kAngSeconds : int
    
    kDegrees : int
    
    kInvalid : int
    
    kLast : int
    
    kRadians : int


class MProfilingScope(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MItMeshFaceVertex(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def currentItem(self, *args): ...
    def faceId(self, *args): ...
    def faceVertId(self, *args): ...
    def faceVertex(self, *args): ...
    def geomChanged(self, *args): ...
    def getBinormal(self, *args): ...
    def getColor(self, *args): ...
    def getColorIndex(self, *args): ...
    def getNormal(self, *args): ...
    def getTangent(self, *args): ...
    def getUV(self, *args): ...
    def getUVIndex(self, *args): ...
    def hasColor(self, *args): ...
    def hasUVs(self, *args): ...
    def isDone(self, *args): ...
    def next(self, *args): ...
    def normalId(self, *args): ...
    def position(self, *args): ...
    def reset(self, *args): ...
    def setIndex(self, *args): ...
    def tangentId(self, *args): ...
    def updateSurface(self, *args): ...
    def vertId(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MPlug(_object):
    def __del__(self): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __ne__(self, other: Any) -> bool: ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def array(self, *args): ...
    def asBool(self, *args): ...
    def asChar(self, *args): ...
    def asDouble(self, *args): ...
    def asFloat(self, *args): ...
    def asInt(self, *args): ...
    def asInt64(self, *args): ...
    def asMAngle(self, *args): ...
    def asMDataHandle(self, *args): ...
    def asMDistance(self, *args): ...
    def asMObject(self, *args): ...
    def asMTime(self, *args): ...
    def asShort(self, *args): ...
    def asString(self, *args): ...
    def assign(self, *args): ...
    def attribute(self, *args): ...
    def child(self, *args): ...
    def connectedTo(self, *args): ...
    def connectionByPhysicalIndex(self, *args): ...
    def constructHandle(self, *args): ...
    def destinations(self, *args): ...
    def destinationsWithConversions(self, *args): ...
    def destructHandle(self, *args): ...
    def elementByLogicalIndex(self, *args): ...
    def elementByPhysicalIndex(self, *args): ...
    def evaluateNumElements(self, *args): ...
    def getExistingArrayAttributeIndices(self, *args): ...
    def getSetAttrCmds(self, *args): ...
    def info(self, *args): ...
    def isArray(self, *args): ...
    def isCachingFlagSet(self, *args): ...
    def isChannelBoxFlagSet(self, *args): ...
    def isChild(self, *args): ...
    def isCompound(self, *args): ...
    def isConnected(self, *args): ...
    def isDefaultValue(self, *args): ...
    def isDestination(self, *args): ...
    def isDynamic(self, *args): ...
    def isElement(self, *args): ...
    def isFreeToChange(self, *args): ...
    def isFromReferencedFile(self, *args): ...
    def isIgnoredWhenRendering(self, *args): ...
    def isKeyable(self, *args): ...
    def isLocked(self, *args): ...
    def isNetworked(self, *args): ...
    def isNull(self, *args): ...
    def isProcedural(self, *args): ...
    def isSource(self, *args): ...
    def logicalIndex(self, *args): ...
    def name(self, *args): ...
    def node(self, *args): ...
    def numChildren(self, *args): ...
    def numConnectedChildren(self, *args): ...
    def numConnectedElements(self, *args): ...
    def numElements(self, *args): ...
    def parent(self, *args): ...
    def partialName(self, *args): ...
    def selectAncestorLogicalIndex(self, *args): ...
    def setAttribute(self, *args): ...
    def setBool(self, *args): ...
    def setCaching(self, *args): ...
    def setChannelBox(self, *args): ...
    def setChar(self, *args): ...
    def setDouble(self, *args): ...
    def setFloat(self, *args): ...
    def setInt(self, *args): ...
    def setInt64(self, *args): ...
    def setKeyable(self, *args): ...
    def setLocked(self, *args): ...
    def setMAngle(self, *args): ...
    def setMDataHandle(self, *args): ...
    def setMDistance(self, *args): ...
    def setMObject(self, *args): ...
    def setMPxData(self, *args): ...
    def setMTime(self, *args): ...
    def setNumElements(self, *args): ...
    def setShort(self, *args): ...
    def setString(self, *args): ...
    def source(self, *args): ...
    def sourceWithConversion(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kAll : int
    
    kChanged : int
    
    kChildrenNotFreeToChange : int
    
    kFreeToChange : int
    
    kLastAttrSelector : int
    
    kNonDefault : int
    
    kNotFreeToChange : int


class MColorArray(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def get(self, *args): ...
    def insert(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def set(self, *args): ...
    def setLength(self, *args): ...
    def setSizeIncrement(self, *args): ...
    def sizeIncrement(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MCacheConfigRuleRegistry(_object):
    def __getattr__(self, name): ...
    def __init__(self, *args, **kwargs): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def registerFilter(*args, **kwargs): ...
    @staticmethod
    def registeringCallableScript(*args, **kwargs): ...
    @staticmethod
    def setRegisteringCallableScript(*args, **kwargs): ...
    @staticmethod
    def unregisterFilter(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MFloatPoint(_object):
    def __add__(self, *args): ...
    def __call__(self, *args): ...
    def __del__(self): ...
    def __div__(self, *args): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __iadd__(self, *args): ...
    def __imul__(self, *args): ...
    def __init__(self, *args): ...
    def __isub__(self, *args): ...
    def __iter__(self):
        """
        Iterates on all components of a Maya api FloatPoint
        """
        ...
    def __len__(self) -> int:
        """
        Number of components in the Maya api FloatPoint, ie 4
        """
        ...
    def __mul__(self, *args): ...
    def __ne__(self, other: Any) -> bool: ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def __sub__(self, *args): ...
    def __truediv__(self, *args): ...
    def assign(self, *args): ...
    def cartesianize(self, *args): ...
    def distanceTo(self, *args): ...
    def get(self, *args): ...
    def homogenize(self, *args): ...
    def isEquivalent(self, *args): ...
    def rationalize(self, *args): ...
    def setCast(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @property
    def w(self): ...
    @w.setter
    def w(self, value): ...
    @property
    def x(self): ...
    @x.setter
    def x(self, value): ...
    @property
    def y(self): ...
    @y.setter
    def y(self, value): ...
    @property
    def z(self): ...
    @z.setter
    def z(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    origin : MFloatPoint


class MTesselationParams(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def set3DDelta(self, *args): ...
    def setBoundingBoxDiagonal(self, *args): ...
    def setChordHeightRatio(self, *args): ...
    def setEdgeSmoothFactor(self, *args): ...
    def setFitTolerance(self, *args): ...
    def setFormatType(self, *args): ...
    def setMaxEdgeLength(self, *args): ...
    def setMaxNumberPolys(self, *args): ...
    def setMaxSubdivisionLevel(self, *args): ...
    def setMaxUVRectangleSize(self, *args): ...
    def setMinEdgeLength(self, *args): ...
    def setMinScreenSize(self, *args): ...
    def setOutputType(self, *args): ...
    def setRelativeFitTolerance(self, *args): ...
    def setStdChordHeightRatio(self, *args): ...
    def setStdFractionalTolerance(self, *args): ...
    def setStdMinEdgeLength(self, *args): ...
    def setSubdivisionFlag(self, *args): ...
    def setTriangleCount(self, *args): ...
    def setUDistanceFraction(self, *args): ...
    def setUIsoparmType(self, *args): ...
    def setUNumber(self, *args): ...
    def setVDistanceFraction(self, *args): ...
    def setVIsoparmType(self, *args): ...
    def setVNumber(self, *args): ...
    def setWorldspaceToScreenTransform(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @property
    def fsDefaultTesselationParams(self): ...
    @fsDefaultTesselationParams.setter
    def fsDefaultTesselationParams(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kGeneralFormat : int
    
    kLastFlag : int
    
    kQuads : int
    
    kSpanEquiSpaced : int
    
    kStandardFitFormat : int
    
    kSurface3DDistance : int
    
    kSurface3DEquiSpaced : int
    
    kSurfaceEquiSpaced : int
    
    kTriangleCountFormat : int
    
    kTriangles : int
    
    kUseChordHeightRatio : int
    
    kUseEdgeSmooth : int
    
    kUseFractionalTolerance : int
    
    kUseMaxEdgeLength : int
    
    kUseMaxNumberPolys : int
    
    kUseMaxSubdivisionLevel : int
    
    kUseMaxUVRectangleSize : int
    
    kUseMinEdgeLength : int
    
    kUseMinScreenSize : int
    
    kUseRelativeTolerance : int
    
    kUseTriangleEdgeSwapping : int


class MItMeshVertex(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def connectedToEdge(self, *args): ...
    def connectedToFace(self, *args): ...
    def count(self, *args): ...
    def currentItem(self, *args): ...
    def geomChanged(self, *args): ...
    def getColor(self, *args): ...
    def getColorIndices(self, *args): ...
    def getColors(self, *args): ...
    def getConnectedEdges(self, *args): ...
    def getConnectedFaces(self, *args): ...
    def getConnectedVertices(self, *args): ...
    def getNormal(self, *args): ...
    def getNormalIndices(self, *args): ...
    def getNormals(self, *args): ...
    def getOppositeVertex(self, *args): ...
    def getUV(self, *args): ...
    def getUVIndices(self, *args): ...
    def getUVs(self, *args): ...
    def hasColor(self, *args): ...
    def index(self, *args): ...
    def isDone(self, *args): ...
    def next(self, *args): ...
    def numConnectedEdges(self, *args): ...
    def numConnectedFaces(self, *args): ...
    def numUVs(self, *args): ...
    def onBoundary(self, *args): ...
    def position(self, *args): ...
    def reset(self, *args): ...
    def setIndex(self, *args): ...
    def setPosition(self, *args): ...
    def setUV(self, *args): ...
    def setUVs(self, *args): ...
    def translateBy(self, *args): ...
    def updateSurface(self, *args): ...
    def vertex(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MDGContext(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def getTime(self, *args): ...
    def isCurrent(self, *args): ...
    def isNormal(self, *args): ...
    def makeCurrent(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def current(*args, **kwargs): ...
    @property
    def fsNormal(self): ...
    @fsNormal.setter
    def fsNormal(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MEvaluationNodeIterator(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def isDone(self, *args): ...
    def next(self, *args): ...
    def plug(self, *args): ...
    def reset(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MTransformationMatrix(_object):
    def __del__(self): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __iter__(self):
        """
        Iterates on all 4 rows of a Maya api TransformationMatrix
        """
        ...
    def __len__(self) -> int:
        """
        Number of rows in the Maya api Matrix, ie 4.
        Not to be confused with the number of components (16) given by the size method
        """
        ...
    def __ne__(self, other: Any) -> bool: ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addRotation(self, *args): ...
    def addRotationQuaternion(self, *args): ...
    def addScale(self, *args): ...
    def addShear(self, *args): ...
    def addTranslation(self, *args): ...
    def asMatrix(self, *args): ...
    def asMatrixInverse(self, *args): ...
    def asRotateMatrix(self, *args): ...
    def asScaleMatrix(self, *args): ...
    def assign(self, *args): ...
    def eulerRotation(self, *args): ...
    def getRotation(self, *args): ...
    def getRotationQuaternion(self, *args): ...
    def getScale(self, *args): ...
    def getShear(self, *args): ...
    def getTranslation(self, *args): ...
    def isEquivalent(self, *args): ...
    def reorderRotation(self, *args): ...
    def rotateBy(self, *args): ...
    def rotatePivot(self, *args): ...
    def rotatePivotTranslation(self, *args): ...
    def rotateTo(self, *args): ...
    def rotation(self, *args): ...
    def rotationOrder(self, *args): ...
    def rotationOrientation(self, *args): ...
    def scalePivot(self, *args): ...
    def scalePivotTranslation(self, *args): ...
    def setRotatePivot(self, *args): ...
    def setRotatePivotTranslation(self, *args): ...
    def setRotation(self, *args): ...
    def setRotationOrientation(self, *args): ...
    def setRotationQuaternion(self, *args): ...
    def setScale(self, *args): ...
    def setScalePivot(self, *args): ...
    def setScalePivotTranslation(self, *args): ...
    def setShear(self, *args): ...
    def setToRotationAxis(self, *args): ...
    def setTranslation(self, *args): ...
    def translation(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    identity : MTransformationMatrix
    
    kInvalid : int
    
    kLast : int
    
    kXYZ : int
    
    kXZY : int
    
    kYXZ : int
    
    kYZX : int
    
    kZXY : int
    
    kZYX : int


class MMatrixArray(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def insert(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def set(self, *args): ...
    def setLength(self, *args): ...
    def setSizeIncrement(self, *args): ...
    def sizeIncrement(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MAttributeSpecArray(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def insert(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def set(self, *args): ...
    def setLength(self, *args): ...
    def setSizeIncrement(self, *args): ...
    def sizeIncrement(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MItSubdFace(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def index(self, *args): ...
    def isDone(self, *args): ...
    def isValid(self, *args): ...
    def level(self, *args): ...
    def next(self, *args): ...
    def reset(self, *args): ...
    def setLevel(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MFloatVector(_object):
    def __add__(self, *args): ...
    def __call__(self, *args): ...
    def __del__(self): ...
    def __div__(self, *args): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __iadd__(self, *args): ...
    def __idiv__(self, *args): ...
    def __imul__(self, *args): ...
    def __init__(self, *args): ...
    def __isub__(self, *args): ...
    def __iter__(self):
        """
        Iterates on all components of a Maya api FloatVector
        """
        ...
    def __itruediv__(self, *args): ...
    def __len__(self) -> int:
        """
        Number of components in the Maya api FloatVector, ie 3
        """
        ...
    def __mul__(self, *args): ...
    def __ne__(self, other: Any) -> bool: ...
    def __neg__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def __sub__(self, *args): ...
    def __truediv__(self, *args): ...
    def __xor__(self, *args): ...
    def angle(self, *args): ...
    def assign(self, *args): ...
    def get(self, *args): ...
    def isEquivalent(self, *args): ...
    def isParallel(self, *args): ...
    def length(self, *args): ...
    def normal(self, *args): ...
    def normalize(self, *args): ...
    @property
    def x(self): ...
    @x.setter
    def x(self, value): ...
    @property
    def y(self): ...
    @y.setter
    def y(self, value): ...
    @property
    def z(self): ...
    @z.setter
    def z(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    one : MFloatVector
    
    xAxis : MFloatVector
    
    xNegAxis : MFloatVector
    
    yAxis : MFloatVector
    
    yNegAxis : MFloatVector
    
    zAxis : MFloatVector
    
    zNegAxis : MFloatVector
    
    zero : MFloatVector


class MNodeClass(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addExtensionAttribute(self, *args): ...
    def addToClassification(self, *args): ...
    def attribute(self, *args): ...
    def attributeCount(self, *args): ...
    def classification(self, *args): ...
    def getAttributes(self, *args): ...
    def hasAttribute(self, *args): ...
    def pluginName(self, *args): ...
    def removeExtensionAttribute(self, *args): ...
    def removeExtensionAttributeIfUnset(self, *args): ...
    def removeFromClassification(self, *args): ...
    def typeId(self, *args): ...
    def typeName(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class floatPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MArgParser(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def commandArgumentBool(self, *args): ...
    def commandArgumentDouble(self, *args): ...
    def commandArgumentInt(self, *args): ...
    def commandArgumentMAngle(self, *args): ...
    def commandArgumentMDistance(self, *args): ...
    def commandArgumentMTime(self, *args): ...
    def commandArgumentString(self, *args): ...
    def flagArgumentBool(self, *args): ...
    def flagArgumentDouble(self, *args): ...
    def flagArgumentInt(self, *args): ...
    def flagArgumentMAngle(self, *args): ...
    def flagArgumentMDistance(self, *args): ...
    def flagArgumentMTime(self, *args): ...
    def flagArgumentString(self, *args): ...
    def getFlagArgumentList(self, *args): ...
    def getFlagArgumentPosition(self, *args): ...
    def getObjects(self, *args): ...
    def isEdit(self, *args): ...
    def isFlagSet(self, *args): ...
    def isQuery(self, *args): ...
    def numberOfFlagUses(self, *args): ...
    def numberOfFlagsUsed(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MRenderPassDef(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args, **kwargs): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addDoubleParameter(self, *args): ...
    def addFloatParameter(self, *args): ...
    def addIntParameter(self, *args): ...
    def getAttributeType(self, *args): ...
    def getDescription(self, *args): ...
    def getGroup(self, *args): ...
    def getID(self, *args): ...
    def getImplementation(self, *args): ...
    def getName(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MNamespace(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def addNamespace(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def currentNamespace(*args, **kwargs): ...
    @staticmethod
    def getNamespaceFromName(*args, **kwargs): ...
    @staticmethod
    def getNamespaceObjects(*args, **kwargs): ...
    @staticmethod
    def getNamespaces(*args, **kwargs): ...
    @staticmethod
    def makeNamepathAbsolute(*args, **kwargs): ...
    @staticmethod
    def moveNamespace(*args, **kwargs): ...
    @staticmethod
    def namespaceExists(*args, **kwargs): ...
    @staticmethod
    def parentNamespace(*args, **kwargs): ...
    @staticmethod
    def relativeNames(*args, **kwargs): ...
    @staticmethod
    def removeNamespace(*args, **kwargs): ...
    @staticmethod
    def renameNamespace(*args, **kwargs): ...
    @staticmethod
    def rootNamespace(*args, **kwargs): ...
    @staticmethod
    def setCurrentNamespace(*args, **kwargs): ...
    @staticmethod
    def setRelativeNames(*args, **kwargs): ...
    @staticmethod
    def stripNamespaceFromName(*args, **kwargs): ...
    @staticmethod
    def validateName(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class uCharPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MPointOnMesh(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def faceIndex(self, *args): ...
    def getBarycentricCoords(self, *args): ...
    def getNormal(self, *args): ...
    def getPoint(self, *args): ...
    def triangleIndex(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MImageFileInfo(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def channels(self, *args): ...
    def hardwareType(self, *args): ...
    def hasAlpha(self, *args): ...
    def hasMipMaps(self, *args): ...
    def height(self, *args): ...
    def imageType(self, *args): ...
    def numberOfImages(self, *args): ...
    def pixelType(self, *args): ...
    def width(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kHwTexture1D : int
    
    kHwTexture2D : int
    
    kHwTexture3D : int
    
    kHwTextureCubeMap : int
    
    kHwTextureRectangle : int
    
    kHwTextureUnknown : int
    
    kImageTypeBump : int
    
    kImageTypeColor : int
    
    kImageTypeNormal : int
    
    kImageTypeUnknown : int


class MImage(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def convertPixelFormat(self, *args): ...
    def create(self, *args): ...
    def depth(self, *args): ...
    def depthMap(self, *args): ...
    def filter(self, *args): ...
    def floatPixels(self, *args): ...
    def getDepthMapRange(self, *args): ...
    def getDepthMapSize(self, *args): ...
    def getSize(self, *args): ...
    def haveDepth(self, *args): ...
    def isRGBA(self, *args): ...
    def pixelType(self, *args): ...
    def pixels(self, *args): ...
    def readDepthMap(self, *args): ...
    def readFromFile(self, *args): ...
    def readFromTextureNode(self, *args): ...
    def release(self, *args): ...
    def resize(self, *args): ...
    def setDepthMap(self, *args): ...
    def setFloatPixels(self, *args): ...
    def setPixels(self, *args): ...
    def setRGBA(self, *args): ...
    def verticalFlip(self, *args): ...
    def writeToFile(self, *args): ...
    def writeToFileWithDepth(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def filterExists(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kByte : int
    
    kFloat : int
    
    kHeightFieldBumpFormat : int
    
    kNoFormat : int
    
    kNormalMapBumpFormat : int
    
    kUnknown : int
    
    kUnknownFormat : int


class MItSurfaceCV(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def currentItem(self, *args): ...
    def cv(self, *args): ...
    def getIndex(self, *args): ...
    def hasHistoryOnCreate(self, *args): ...
    def index(self, *args): ...
    def isDone(self, *args): ...
    def isRowDone(self, *args): ...
    def next(self, *args): ...
    def nextRow(self, *args): ...
    def position(self, *args): ...
    def reset(self, *args): ...
    def setPosition(self, *args): ...
    def translateBy(self, *args): ...
    def updateSurface(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class array2dFloat(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def get(self, *args): ...
    def getptr(self, *args): ...
    def set(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class boolPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MConnectDisconnectAttrEdit(MEdit):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args, **kwargs): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def dstPlug(self, *args): ...
    def dstPlugName(self, *args): ...
    def editType(self, *args): ...
    def isConnection(self, *args): ...
    def srcPlug(self, *args): ...
    def srcPlugName(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MModelMessage(MMessage):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def addAfterDuplicateCallback(*args, **kwargs): ...
    @staticmethod
    def addBeforeDuplicateCallback(*args, **kwargs): ...
    @staticmethod
    def addCallback(*args, **kwargs): ...
    @staticmethod
    def addNodeAddedToModelCallback(*args, **kwargs): ...
    @staticmethod
    def addNodeRemovedFromModelCallback(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kActiveListModified : int


class MCommandMessage(MMessage):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def addCommandCallback(*args, **kwargs): ...
    @staticmethod
    def addCommandOutputCallback(*args, **kwargs): ...
    @staticmethod
    def addCommandOutputFilterCallback(*args, **kwargs): ...
    @staticmethod
    def addProcCallback(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kDisplay : int
    
    kError : int
    
    kHistory : int
    
    kInfo : int
    
    kMELCommand : int
    
    kMELProc : int
    
    kResult : int
    
    kStackTrace : int
    
    kWarning : int


class MFnData(MFnBase):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kAny : int
    
    kComponentList : int
    
    kDoubleArray : int
    
    kDynArrayAttrs : int
    
    kDynSweptGeometry : int
    
    kFloatArray : int
    
    kIntArray : int
    
    kInvalid : int
    
    kLast : int
    
    kLattice : int
    
    kMatrix : int
    
    kMatrixArray : int
    
    kMesh : int
    
    kNId : int
    
    kNObject : int
    
    kNumeric : int
    
    kNurbsCurve : int
    
    kNurbsSurface : int
    
    kPlugin : int
    
    kPluginGeometry : int
    
    kPointArray : int
    
    kSphere : int
    
    kString : int
    
    kStringArray : int
    
    kSubdSurface : int
    
    kVectorArray : int


class MArgDatabase(MArgParser):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def getCommandArgument(self, *args): ...
    def getFlagArgument(self, *args): ...
    def getObjects(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MCameraMessage(MMessage):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def addBeginManipulationCallback(*args, **kwargs): ...
    @staticmethod
    def addEndManipulationCallback(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MPolyMessage(MMessage):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def addColorSetChangedCallback(*args, **kwargs): ...
    @staticmethod
    def addPolyComponentIdChangedCallback(*args, **kwargs): ...
    @staticmethod
    def addPolyTopologyChangedCallback(*args, **kwargs): ...
    @staticmethod
    def addUVSetChangedCallback(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def deletedId(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kColorSetAdded : int
    
    kColorSetDeleted : int
    
    kCurrentColorSetChanged : int
    
    kCurrentUVSetChanged : int
    
    kEdgeIndex : int
    
    kFaceIndex : int
    
    kLastErrorIndex : int
    
    kUVSetAdded : int
    
    kUVSetDeleted : int
    
    kVertexIndex : int


class MEventMessage(MMessage):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def addEventCallback(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def getEventNames(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MAddRemoveAttrEdit(MEdit):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args, **kwargs): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def attributeName(self, *args): ...
    def editType(self, *args): ...
    def isAttributeAdded(self, *args): ...
    def node(self, *args): ...
    def nodeName(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MDGMessage(MMessage):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def addConnectionCallback(*args, **kwargs): ...
    @staticmethod
    def addDelayedTimeChangeCallback(*args, **kwargs): ...
    @staticmethod
    def addDelayedTimeChangeRunupCallback(*args, **kwargs): ...
    @staticmethod
    def addForceUpdateCallback(*args, **kwargs): ...
    @staticmethod
    def addNodeAddedCallback(*args, **kwargs): ...
    @staticmethod
    def addNodeChangeUuidCheckCallback(*args, **kwargs): ...
    @staticmethod
    def addNodeRemovedCallback(*args, **kwargs): ...
    @staticmethod
    def addPreConnectionCallback(*args, **kwargs): ...
    @staticmethod
    def addTimeChangeCallback(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnDependencyNode(MFnBase):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def absoluteName(self, *args): ...
    def addAttribute(self, *args): ...
    def addExternalContentForFileAttr(self, *args): ...
    def affectsAnimation(self, *args): ...
    def attribute(self, *args): ...
    def attributeClass(self, *args): ...
    def attributeCount(self, *args): ...
    def canBeWritten(self, *args): ...
    def create(self, *args): ...
    def dgCallbackIds(self, *args): ...
    def dgCallbacks(self, *args): ...
    def dgTimer(self, *args): ...
    def dgTimerOff(self, *args): ...
    def dgTimerOn(self, *args): ...
    def dgTimerQueryState(self, *args): ...
    def dgTimerReset(self, *args): ...
    def findAlias(self, *args): ...
    def findPlug(self, *args): ...
    def getAffectedAttributes(self, *args): ...
    def getAffectedByAttributes(self, *args): ...
    def getAliasAttr(self, *args): ...
    def getAliasList(self, *args): ...
    def getConnections(self, *args): ...
    def getExternalContent(self, *args): ...
    def hasAttribute(self, *args): ...
    def hasUniqueName(self, *args): ...
    def icon(self, *args): ...
    def isDefaultNode(self, *args): ...
    def isFlagSet(self, *args): ...
    def isFromReferencedFile(self, *args): ...
    def isLocked(self, *args): ...
    def isNewAttribute(self, *args): ...
    def isShared(self, *args): ...
    def isTrackingEdits(self, *args): ...
    def name(self, *args): ...
    def parentNamespace(self, *args): ...
    def pluginName(self, *args): ...
    def plugsAlias(self, *args): ...
    def removeAttribute(self, *args): ...
    def reorderedAttribute(self, *args): ...
    def setAffectsAnimation(self, *args): ...
    def setAlias(self, *args): ...
    def setDoNotWrite(self, *args): ...
    def setExternalContent(self, *args): ...
    def setExternalContentForFileAttr(self, *args): ...
    def setFlag(self, *args): ...
    def setIcon(self, *args): ...
    def setLocked(self, *args): ...
    def setName(self, *args): ...
    def setUuid(self, *args): ...
    def type(self, *args): ...
    def typeId(self, *args): ...
    def typeName(self, *args): ...
    def userNode(self, *args): ...
    def uuid(self, *args): ...
    @staticmethod
    def allocateFlag(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def classification(*args, **kwargs): ...
    @staticmethod
    def deallocateAllFlags(*args, **kwargs): ...
    @staticmethod
    def deallocateFlag(*args, **kwargs): ...
    @staticmethod
    def enableDGTiming(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kExtensionAttr : int
    
    kInvalidAttr : int
    
    kLocalDynamicAttr : int
    
    kNormalAttr : int
    
    kTimerInvalidState : int
    
    kTimerMetric_callback : int
    
    kTimerMetric_callbackNotViaAPI : int
    
    kTimerMetric_callbackViaAPI : int
    
    kTimerMetric_compute : int
    
    kTimerMetric_computeDuringCallback : int
    
    kTimerMetric_computeNotDuringCallback : int
    
    kTimerMetric_dirty : int
    
    kTimerMetric_draw : int
    
    kTimerMetric_fetch : int
    
    kTimerMetrics : int
    
    kTimerOff : int
    
    kTimerOn : int
    
    kTimerType_count : int
    
    kTimerType_inclusive : int
    
    kTimerType_self : int
    
    kTimerTypes : int
    
    kTimerUninitialized : int


class MFnAttribute(MFnBase):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def accepts(self, *args): ...
    def acceptsAttribute(self, *args): ...
    def addToCategory(self, *args): ...
    def affectsAppearance(self, *args): ...
    def disconnectBehavior(self, *args): ...
    def getAddAttrCmd(self, *args): ...
    def getCategories(self, *args): ...
    def hasCategory(self, *args): ...
    def indexMatters(self, *args): ...
    def internal(self, *args): ...
    def isAffectsWorldSpace(self, *args): ...
    def isArray(self, *args): ...
    def isCached(self, *args): ...
    def isChannelBoxFlagSet(self, *args): ...
    def isConnectable(self, *args): ...
    def isDynamic(self, *args): ...
    def isExtension(self, *args): ...
    def isHidden(self, *args): ...
    def isIndeterminant(self, *args): ...
    def isKeyable(self, *args): ...
    def isProxyAttribute(self, *args): ...
    def isReadable(self, *args): ...
    def isRenderSource(self, *args): ...
    def isStorable(self, *args): ...
    def isUsedAsColor(self, *args): ...
    def isUsedAsFilename(self, *args): ...
    def isWorldSpace(self, *args): ...
    def isWritable(self, *args): ...
    def name(self, *args): ...
    def parent(self, *args): ...
    def removeFromCategory(self, *args): ...
    def setAffectsAppearance(self, *args): ...
    def setAffectsWorldSpace(self, *args): ...
    def setArray(self, *args): ...
    def setCached(self, *args): ...
    def setChannelBox(self, *args): ...
    def setConnectable(self, *args): ...
    def setDisconnectBehavior(self, *args): ...
    def setHidden(self, *args): ...
    def setIndeterminant(self, *args): ...
    def setIndexMatters(self, *args): ...
    def setInternal(self, *args): ...
    def setKeyable(self, *args): ...
    def setNiceNameOverride(self, *args): ...
    def setProxyAttribute(self, *args): ...
    def setReadable(self, *args): ...
    def setRenderSource(self, *args): ...
    def setStorable(self, *args): ...
    def setUsedAsColor(self, *args): ...
    def setUsedAsFilename(self, *args): ...
    def setUsesArrayDataBuilder(self, *args): ...
    def setWorldSpace(self, *args): ...
    def setWritable(self, *args): ...
    def shortName(self, *args): ...
    def type(self, *args): ...
    def usesArrayDataBuilder(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kDelete : int
    
    kNothing : int
    
    kReset : int


class MTimerMessage(MMessage):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def addTimerCallback(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def setSleepCallback(*args, **kwargs): ...
    @staticmethod
    def sleepCallback(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MUserEventMessage(MMessage):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def addUserEventCallback(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def deregisterUserEvent(*args, **kwargs): ...
    @staticmethod
    def isUserEvent(*args, **kwargs): ...
    @staticmethod
    def postUserEvent(*args, **kwargs): ...
    @staticmethod
    def registerUserEvent(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFcurveEdit(MEdit):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args, **kwargs): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def editType(self, *args): ...
    def fcurve(self, *args): ...
    def fcurveName(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MConditionMessage(MMessage):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def addConditionCallback(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def getConditionNames(*args, **kwargs): ...
    @staticmethod
    def getConditionState(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MNodeMessage(MMessage):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def addAttributeAddedOrRemovedCallback(*args, **kwargs): ...
    @staticmethod
    def addAttributeChangedCallback(*args, **kwargs): ...
    @staticmethod
    def addKeyableChangeOverride(*args, **kwargs): ...
    @staticmethod
    def addNameChangedCallback(*args, **kwargs): ...
    @staticmethod
    def addNodeAboutToDeleteCallback(*args, **kwargs): ...
    @staticmethod
    def addNodeDestroyedCallback(*args, **kwargs): ...
    @staticmethod
    def addNodeDirtyCallback(*args, **kwargs): ...
    @staticmethod
    def addNodeDirtyPlugCallback(*args, **kwargs): ...
    @staticmethod
    def addNodePreRemovalCallback(*args, **kwargs): ...
    @staticmethod
    def addUuidChangedCallback(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kAttributeAdded : int
    
    kAttributeArrayAdded : int
    
    kAttributeArrayRemoved : int
    
    kAttributeEval : int
    
    kAttributeKeyable : int
    
    kAttributeLocked : int
    
    kAttributeRemoved : int
    
    kAttributeRenamed : int
    
    kAttributeSet : int
    
    kAttributeUnkeyable : int
    
    kAttributeUnlocked : int
    
    kConnectionBroken : int
    
    kConnectionMade : int
    
    kIncomingDirection : int
    
    kKeyChangeInvalid : int
    
    kKeyChangeLast : int
    
    kLast : int
    
    kMakeKeyable : int
    
    kMakeUnkeyable : int
    
    kOtherPlugSet : int


class MSceneMessage(MMessage):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def addCallback(*args, **kwargs): ...
    @staticmethod
    def addCheckCallback(*args, **kwargs): ...
    @staticmethod
    def addCheckFileCallback(*args, **kwargs): ...
    @staticmethod
    def addCheckReferenceCallback(*args, **kwargs): ...
    @staticmethod
    def addConnectionFailedCallback(*args, **kwargs): ...
    @staticmethod
    def addNamespaceRenamedCallback(*args, **kwargs): ...
    @staticmethod
    def addReferenceCallback(*args, **kwargs): ...
    @staticmethod
    def addStringArrayCallback(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kAfterCreateReference : int
    
    kAfterCreateReferenceAndRecordEdits : int
    
    kAfterExport : int
    
    kAfterExportReference : int
    
    kAfterFileRead : int
    
    kAfterImport : int
    
    kAfterImportReference : int
    
    kAfterLoadReference : int
    
    kAfterLoadReferenceAndRecordEdits : int
    
    kAfterNew : int
    
    kAfterOpen : int
    
    kAfterPluginLoad : int
    
    kAfterPluginUnload : int
    
    kAfterReference : int
    
    kAfterRemoveReference : int
    
    kAfterSave : int
    
    kAfterSceneReadAndRecordEdits : int
    
    kAfterSoftwareFrameRender : int
    
    kAfterSoftwareRender : int
    
    kAfterUnloadReference : int
    
    kBeforeCreateReference : int
    
    kBeforeCreateReferenceAndRecordEdits : int
    
    kBeforeCreateReferenceCheck : int
    
    kBeforeExport : int
    
    kBeforeExportCheck : int
    
    kBeforeExportReference : int
    
    kBeforeFileRead : int
    
    kBeforeImport : int
    
    kBeforeImportCheck : int
    
    kBeforeImportReference : int
    
    kBeforeLoadReference : int
    
    kBeforeLoadReferenceAndRecordEdits : int
    
    kBeforeLoadReferenceCheck : int
    
    kBeforeNew : int
    
    kBeforeNewCheck : int
    
    kBeforeOpen : int
    
    kBeforeOpenCheck : int
    
    kBeforePluginLoad : int
    
    kBeforePluginUnload : int
    
    kBeforeReference : int
    
    kBeforeReferenceCheck : int
    
    kBeforeRemoveReference : int
    
    kBeforeSave : int
    
    kBeforeSaveCheck : int
    
    kBeforeSoftwareFrameRender : int
    
    kBeforeSoftwareRender : int
    
    kBeforeUnloadReference : int
    
    kExportStarted : int
    
    kLast : int
    
    kMayaExiting : int
    
    kMayaInitialized : int
    
    kSceneUpdate : int
    
    kSoftwareRenderInterrupted : int


class MDagMessage(MMessage):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def addAllDagChangesCallback(*args, **kwargs): ...
    @staticmethod
    def addAllDagChangesDagPathCallback(*args, **kwargs): ...
    @staticmethod
    def addChildAddedCallback(*args, **kwargs): ...
    @staticmethod
    def addChildAddedDagPathCallback(*args, **kwargs): ...
    @staticmethod
    def addChildRemovedCallback(*args, **kwargs): ...
    @staticmethod
    def addChildRemovedDagPathCallback(*args, **kwargs): ...
    @staticmethod
    def addChildReorderedCallback(*args, **kwargs): ...
    @staticmethod
    def addChildReorderedDagPathCallback(*args, **kwargs): ...
    @staticmethod
    def addDagCallback(*args, **kwargs): ...
    @staticmethod
    def addDagDagPathCallback(*args, **kwargs): ...
    @staticmethod
    def addInstanceAddedCallback(*args, **kwargs): ...
    @staticmethod
    def addInstanceAddedDagPathCallback(*args, **kwargs): ...
    @staticmethod
    def addInstanceRemovedCallback(*args, **kwargs): ...
    @staticmethod
    def addInstanceRemovedDagPathCallback(*args, **kwargs): ...
    @staticmethod
    def addParentAddedCallback(*args, **kwargs): ...
    @staticmethod
    def addParentAddedDagPathCallback(*args, **kwargs): ...
    @staticmethod
    def addParentRemovedCallback(*args, **kwargs): ...
    @staticmethod
    def addParentRemovedDagPathCallback(*args, **kwargs): ...
    @staticmethod
    def addWorldMatrixModifiedCallback(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kAll : int
    
    kChildAdded : int
    
    kChildRemoved : int
    
    kChildReordered : int
    
    kInstanceAdded : int
    
    kInstanceRemoved : int
    
    kInvalidMsg : int
    
    kLast : int
    
    kParentAdded : int
    
    kParentRemoved : int
    
    kRotateOrder : int
    
    kRotateOrient : int
    
    kRotateOrientX : int
    
    kRotateOrientY : int
    
    kRotateOrientZ : int
    
    kRotatePivot : int
    
    kRotatePivotTrans : int
    
    kRotatePivotX : int
    
    kRotatePivotY : int
    
    kRotatePivotZ : int
    
    kRotateTransX : int
    
    kRotateTransY : int
    
    kRotateTransZ : int
    
    kRotateX : int
    
    kRotateY : int
    
    kRotateZ : int
    
    kRotation : int
    
    kScale : int
    
    kScalePivot : int
    
    kScalePivotTrans : int
    
    kScalePivotX : int
    
    kScalePivotY : int
    
    kScalePivotZ : int
    
    kScaleTransX : int
    
    kScaleTransY : int
    
    kScaleTransZ : int
    
    kScaleX : int
    
    kScaleY : int
    
    kScaleZ : int
    
    kShear : int
    
    kShearXY : int
    
    kShearXZ : int
    
    kShearYZ : int
    
    kTranslateX : int
    
    kTranslateY : int
    
    kTranslateZ : int
    
    kTranslation : int


class MDagModifier(MDGModifier):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def createNode(self, *args): ...
    def reparentNode(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MParentingEdit(MEdit):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args, **kwargs): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def editType(self, *args): ...
    def parent(self, *args): ...
    def parentName(self, *args): ...
    def parentedObject(self, *args): ...
    def parentedObjectName(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MContainerMessage(MMessage):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def addBoundAttrCallback(*args, **kwargs): ...
    @staticmethod
    def addPublishAttrCallback(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MObjectSetMessage(MMessage):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def addSetMembersModifiedCallback(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnComponent(MFnBase):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def componentType(self, *args): ...
    def elementCount(self, *args): ...
    def hasWeights(self, *args): ...
    def isComplete(self, *args): ...
    def isEmpty(self, *args): ...
    def isEqual(self, *args): ...
    def setComplete(self, *args): ...
    def setWeight(self, *args): ...
    def setWeights(self, *args): ...
    def type(self, *args): ...
    def weight(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MSetAttrEdit(MEdit):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args, **kwargs): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def editType(self, *args): ...
    def plug(self, *args): ...
    def plugName(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MLockMessage(MMessage):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def setNodeLockDAGQueryCallback(*args, **kwargs): ...
    @staticmethod
    def setNodeLockQueryCallback(*args, **kwargs): ...
    @staticmethod
    def setPlugLockQueryCallback(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kAddAttr : int
    
    kChildReorder : int
    
    kCreateChildInstance : int
    
    kCreateNodeInstance : int
    
    kCreateParentInstance : int
    
    kDelete : int
    
    kGroup : int
    
    kInvalid : int
    
    kInvalidDAG : int
    
    kInvalidPlug : int
    
    kLast : int
    
    kLastDAG : int
    
    kLastPlug : int
    
    kLockAttr : int
    
    kLockNode : int
    
    kPlugAttrValChange : int
    
    kPlugConnect : int
    
    kPlugDisconnect : int
    
    kPlugLockAttr : int
    
    kPlugRemoveAttr : int
    
    kPlugRenameAttr : int
    
    kPlugUnlockAttr : int
    
    kRemoveAttr : int
    
    kRename : int
    
    kRenameAttr : int
    
    kReparent : int
    
    kUnGroup : int
    
    kUnlockAttr : int
    
    kUnlockNode : int


class MCameraSetMessage(MMessage):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def addCameraChangedCallback(*args, **kwargs): ...
    @staticmethod
    def addCameraLayerCallback(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnStringData(MFnData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def set(self, *args): ...
    def string(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnPhongEShader(MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def highlightSize(self, *args): ...
    def roughness(self, *args): ...
    def setHighlightSize(self, *args): ...
    def setRoughness(self, *args): ...
    def setWhiteness(self, *args): ...
    def type(self, *args): ...
    def whiteness(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnLambertShader(MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def ambientColor(self, *args): ...
    def color(self, *args): ...
    def create(self, *args): ...
    def diffuseCoeff(self, *args): ...
    def glowIntensity(self, *args): ...
    def hideSource(self, *args): ...
    def incandescence(self, *args): ...
    def refractedRayDepthLimit(self, *args): ...
    def refractiveIndex(self, *args): ...
    def rtRefractedColor(self, *args): ...
    def setAmbientColor(self, *args): ...
    def setColor(self, *args): ...
    def setDiffuseCoeff(self, *args): ...
    def setGlowIntensity(self, *args): ...
    def setHideSource(self, *args): ...
    def setIncandescence(self, *args): ...
    def setRefractedRayDepthLimit(self, *args): ...
    def setRefractiveIndex(self, *args): ...
    def setRtRefractedColor(self, *args): ...
    def setTranslucenceCoeff(self, *args): ...
    def setTransparency(self, *args): ...
    def translucenceCoeff(self, *args): ...
    def transparency(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnDoubleIndexedComponent(MFnComponent):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addElement(self, *args): ...
    def addElements(self, *args): ...
    def create(self, *args): ...
    def getCompleteData(self, *args): ...
    def getElement(self, *args): ...
    def getElements(self, *args): ...
    def setCompleteData(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnLightDataAttribute(MFnAttribute):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def child(self, *args): ...
    def create(self, *args): ...
    def getDefault(self, *args): ...
    def setDefault(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnMatrixAttribute(MFnAttribute):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def getDefault(self, *args): ...
    def setDefault(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kDouble : int
    
    kFloat : int


class MFnTypedAttribute(MFnAttribute):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def attrType(self, *args): ...
    def create(self, *args): ...
    def getDefault(self, *args): ...
    def setDefault(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnVectorArrayData(MFnData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def array(self, *args): ...
    def copyTo(self, *args): ...
    def create(self, *args): ...
    def length(self, *args): ...
    def set(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnDoubleArrayData(MFnData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def array(self, *args): ...
    def copyTo(self, *args): ...
    def create(self, *args): ...
    def length(self, *args): ...
    def set(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnCompoundAttribute(MFnAttribute):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addChild(self, *args): ...
    def child(self, *args): ...
    def create(self, *args): ...
    def getAddAttrCmds(self, *args): ...
    def numChildren(self, *args): ...
    def removeChild(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnContainerNode(MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def clear(self, *args): ...
    def getMembers(self, *args): ...
    def getParentContainer(self, *args): ...
    def getPublishedNames(self, *args): ...
    def getPublishedNodes(self, *args): ...
    def getPublishedPlugs(self, *args): ...
    def getRootTransform(self, *args): ...
    def getSubcontainers(self, *args): ...
    def isCurrent(self, *args): ...
    def makeCurrent(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def getCurrentAsMObject(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kChildAnchor : int
    
    kGeneric : int
    
    kParentAnchor : int


class MFnPointArrayData(MFnData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def array(self, *args): ...
    def copyTo(self, *args): ...
    def create(self, *args): ...
    def length(self, *args): ...
    def set(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnExpression(MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def evaluate(self, *args): ...
    def expression(self, *args): ...
    def getDefaultObject(self, *args): ...
    def isAnimated(self, *args): ...
    def setAnimated(self, *args): ...
    def setDefaultObject(self, *args): ...
    def setExpression(self, *args): ...
    def setUnitConversion(self, *args): ...
    def type(self, *args): ...
    def unitConversion(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kAll : int
    
    kAngularOnly : int
    
    kNone : int


class MFnMatrixData(MFnData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def isTransformation(self, *args): ...
    def matrix(self, *args): ...
    def set(self, *args): ...
    def transformation(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnGenericAttribute(MFnAttribute):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addAccept(self, *args): ...
    def addDataAccept(self, *args): ...
    def addNumericDataAccept(self, *args): ...
    def create(self, *args): ...
    def removeAccept(self, *args): ...
    def removeDataAccept(self, *args): ...
    def removeNumericDataAccept(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnUInt64ArrayData(MFnData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def array(self, *args): ...
    def copyTo(self, *args): ...
    def create(self, *args): ...
    def length(self, *args): ...
    def set(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnSet(MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addMember(self, *args): ...
    def addMembers(self, *args): ...
    def annotation(self, *args): ...
    def clear(self, *args): ...
    def create(self, *args): ...
    def getIntersection(self, *args): ...
    def getMembers(self, *args): ...
    def getUnion(self, *args): ...
    def hasRestrictions(self, *args): ...
    def intersectsWith(self, *args): ...
    def isMember(self, *args): ...
    def removeMember(self, *args): ...
    def removeMembers(self, *args): ...
    def restriction(self, *args): ...
    def setAnnotation(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kEdgesOnly : int
    
    kEditPointsOnly : int
    
    kFacetsOnly : int
    
    kNone : int
    
    kRenderableOnly : int
    
    kVerticesOnly : int


class MFnNumericData(MFnData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def getData2Double(self, *args): ...
    def getData2Float(self, *args): ...
    def getData2Int(self, *args): ...
    def getData2Short(self, *args): ...
    def getData3Double(self, *args): ...
    def getData3Float(self, *args): ...
    def getData3Int(self, *args): ...
    def getData3Short(self, *args): ...
    def getData4Double(self, *args): ...
    def numericType(self, *args): ...
    def setData2Double(self, *args): ...
    def setData2Float(self, *args): ...
    def setData2Int(self, *args): ...
    def setData2Short(self, *args): ...
    def setData3Double(self, *args): ...
    def setData3Float(self, *args): ...
    def setData3Int(self, *args): ...
    def setData3Short(self, *args): ...
    def setData4Double(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    k2Double : int
    
    k2Float : int
    
    k2Int : int
    
    k2Long : int
    
    k2Short : int
    
    k3Double : int
    
    k3Float : int
    
    k3Int : int
    
    k3Long : int
    
    k3Short : int
    
    k4Double : int
    
    kAddr : int
    
    kBoolean : int
    
    kByte : int
    
    kChar : int
    
    kDouble : int
    
    kFloat : int
    
    kInt : int
    
    kInt64 : int
    
    kInvalid : int
    
    kLast : int
    
    kLong : int
    
    kShort : int


class MFnMatrixArrayData(MFnData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def array(self, *args): ...
    def copyTo(self, *args): ...
    def create(self, *args): ...
    def length(self, *args): ...
    def set(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnPluginData(MFnData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def constData(self, *args): ...
    def create(self, *args): ...
    def data(self, *args): ...
    def type(self, *args): ...
    def typeId(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnEnumAttribute(MFnAttribute):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addField(self, *args): ...
    def create(self, *args): ...
    def defaultValue(self, *args): ...
    def fieldIndex(self, *args): ...
    def fieldName(self, *args): ...
    def getDefault(self, *args): ...
    def getMax(self, *args): ...
    def getMin(self, *args): ...
    def setDefault(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnPartition(MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addMember(self, *args): ...
    def create(self, *args): ...
    def isRenderPartition(self, *args): ...
    def removeMember(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kEdgesOnly : int
    
    kEditPointsOnly : int
    
    kFacetsOnly : int
    
    kNone : int
    
    kRenderableOnly : int
    
    kVerticesOnly : int


class MFnNumericAttribute(MFnAttribute):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def child(self, *args): ...
    def create(self, *args): ...
    def createAddr(self, *args): ...
    def createColor(self, *args): ...
    def createPoint(self, *args): ...
    def getDefault(self, *args): ...
    def getMax(self, *args): ...
    def getMin(self, *args): ...
    def getSoftMax(self, *args): ...
    def getSoftMin(self, *args): ...
    def hasMax(self, *args): ...
    def hasMin(self, *args): ...
    def hasSoftMax(self, *args): ...
    def hasSoftMin(self, *args): ...
    def setDefault(self, *args): ...
    def setMax(self, *args): ...
    def setMin(self, *args): ...
    def setSoftMax(self, *args): ...
    def setSoftMin(self, *args): ...
    def type(self, *args): ...
    def unitType(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnFloatArrayData(MFnData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def array(self, *args): ...
    def copyTo(self, *args): ...
    def create(self, *args): ...
    def length(self, *args): ...
    def set(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnDagNode(MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def activeColor(self, *args): ...
    def addChild(self, *args): ...
    def boundingBox(self, *args): ...
    def child(self, *args): ...
    def childCount(self, *args): ...
    def create(self, *args): ...
    def dagPath(self, *args): ...
    def dagRoot(self, *args): ...
    def dormantColor(self, *args): ...
    def drawOverrideColor(self, *args): ...
    def drawOverrideEnabled(self, *args): ...
    def drawOverrideIsReference(self, *args): ...
    def drawOverrideIsTemplate(self, *args): ...
    def duplicate(self, *args): ...
    def fullPathName(self, *args): ...
    def getAllPaths(self, *args): ...
    def getConnectedSetsAndMembers(self, *args): ...
    def getPath(self, *args): ...
    def hasChild(self, *args): ...
    def hasParent(self, *args): ...
    def hiliteColor(self, *args): ...
    def inModel(self, *args): ...
    def inUnderWorld(self, *args): ...
    def instanceCount(self, *args): ...
    def isChildOf(self, *args): ...
    def isInstanceable(self, *args): ...
    def isInstanced(self, *args): ...
    def isInstancedAttribute(self, *args): ...
    def isIntermediateObject(self, *args): ...
    def isParentOf(self, *args): ...
    def model(self, *args): ...
    def objectColor(self, *args): ...
    def objectColorIndex(self, *args): ...
    def objectColorRGB(self, *args): ...
    def objectColorType(self, *args): ...
    def objectGroupComponent(self, *args): ...
    def parent(self, *args): ...
    def parentCount(self, *args): ...
    def partialPathName(self, *args): ...
    def removeChild(self, *args): ...
    def removeChildAt(self, *args): ...
    def setInstanceable(self, *args): ...
    def setIntermediateObject(self, *args): ...
    def setObject(self, *args): ...
    def setObjectColor(self, *args): ...
    def setObjectColorType(self, *args): ...
    def setUseObjectColor(self, *args): ...
    def transformationMatrix(self, *args): ...
    def type(self, *args): ...
    def usingHiliteColor(self, *args): ...
    def usingObjectColor(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kNextPos : int
    
    kUseDefaultColor : int
    
    kUseIndexColor : int
    
    kUseRGBColor : int


class MFnMessageAttribute(MFnAttribute):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnLayeredShader(MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def color(self, *args): ...
    def compositingFlag(self, *args): ...
    def create(self, *args): ...
    def glowColor(self, *args): ...
    def hardwareColor(self, *args): ...
    def hardwareShader(self, *args): ...
    def setColor(self, *args): ...
    def setCompositingFlag(self, *args): ...
    def setGlowColor(self, *args): ...
    def setHardwareColor(self, *args): ...
    def setHardwareShader(self, *args): ...
    def setTransparency(self, *args): ...
    def transparency(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnComponentListData(MFnData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def add(self, *args): ...
    def clear(self, *args): ...
    def create(self, *args): ...
    def has(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnSingleIndexedComponent(MFnComponent):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addElement(self, *args): ...
    def addElements(self, *args): ...
    def create(self, *args): ...
    def element(self, *args): ...
    def elementMax(self, *args): ...
    def getCompleteData(self, *args): ...
    def getElements(self, *args): ...
    def setCompleteData(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnIntArrayData(MFnData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def array(self, *args): ...
    def copyTo(self, *args): ...
    def create(self, *args): ...
    def length(self, *args): ...
    def set(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnTripleIndexedComponent(MFnComponent):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addElement(self, *args): ...
    def addElements(self, *args): ...
    def create(self, *args): ...
    def getCompleteData(self, *args): ...
    def getElement(self, *args): ...
    def getElements(self, *args): ...
    def setCompleteData(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnGeometryData(MFnData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addObjectGroup(self, *args): ...
    def addObjectGroupComponent(self, *args): ...
    def changeObjectGroupId(self, *args): ...
    def copyObjectGroups(self, *args): ...
    def getMatrix(self, *args): ...
    def hasObjectGroup(self, *args): ...
    def matrixIsIdentity(self, *args): ...
    def matrixIsNotIdentity(self, *args): ...
    def objectGroup(self, *args): ...
    def objectGroupComponent(self, *args): ...
    def objectGroupCount(self, *args): ...
    def objectGroupType(self, *args): ...
    def removeObjectGroup(self, *args): ...
    def removeObjectGroupComponent(self, *args): ...
    def setMatrix(self, *args): ...
    def setObjectGroupComponent(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnAnisotropyShader(MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def anisotropicReflectivity(self, *args): ...
    def correlationX(self, *args): ...
    def correlationY(self, *args): ...
    def create(self, *args): ...
    def refractiveIndex(self, *args): ...
    def rotateAngle(self, *args): ...
    def roughness(self, *args): ...
    def setAnisotropicReflectivity(self, *args): ...
    def setCorrelationX(self, *args): ...
    def setCorrelationY(self, *args): ...
    def setRefractiveIndex(self, *args): ...
    def setRotateAngle(self, *args): ...
    def setRoughness(self, *args): ...
    def setTangentUCamera(self, *args): ...
    def setTangentVCamera(self, *args): ...
    def tangentUCamera(self, *args): ...
    def tangentVCamera(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnCameraSet(MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def appendLayer(self, *args): ...
    def clear(self, *args): ...
    def create(self, *args): ...
    def deleteLayer(self, *args): ...
    def getLayerCamera(self, *args): ...
    def getLayerClearDepthValue(self, *args): ...
    def getLayerOrder(self, *args): ...
    def getLayerSceneData(self, *args): ...
    def getNumLayers(self, *args): ...
    def getSortedIndices(self, *args): ...
    def insertLayer(self, *args): ...
    def isLayerActive(self, *args): ...
    def setLayerActive(self, *args): ...
    def setLayerCamera(self, *args): ...
    def setLayerClearDepthValue(self, *args): ...
    def setLayerOrder(self, *args): ...
    def setLayerSceneData(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnSphereData(MFnData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def radius(self, *args): ...
    def setRadius(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnUint64SingleIndexedComponent(MFnComponent):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addElement(self, *args): ...
    def addElements(self, *args): ...
    def create(self, *args): ...
    def element(self, *args): ...
    def getCompleteData(self, *args): ...
    def getElements(self, *args): ...
    def setCompleteData(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnArrayAttrsData(MFnData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def checkArrayExist(self, *args): ...
    def clear(self, *args): ...
    def count(self, *args): ...
    def create(self, *args): ...
    def doubleArray(self, *args): ...
    def getDoubleData(self, *args): ...
    def getIntData(self, *args): ...
    def getStringData(self, *args): ...
    def getVectorData(self, *args): ...
    def intArray(self, *args): ...
    def list(self, *args): ...
    def stringArray(self, *args): ...
    def type(self, *args): ...
    def vectorArray(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kDoubleArray : int
    
    kIntArray : int
    
    kInvalid : int
    
    kLast : int
    
    kStringArray : int
    
    kVectorArray : int


class MFnReference(MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def associatedNamespace(self, *args): ...
    def containsNode(self, *args): ...
    def containsNodeExactly(self, *args): ...
    def fileName(self, *args): ...
    def isExportEditsFile(self, *args): ...
    def isLoaded(self, *args): ...
    def isLocked(self, *args): ...
    def nodes(self, *args): ...
    def parentAssembly(self, *args): ...
    def parentFileName(self, *args): ...
    def parentReference(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def ignoreReferenceEdits(*args, **kwargs): ...
    @staticmethod
    def setIgnoreReferenceEdits(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnStringArrayData(MFnData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def array(self, *args): ...
    def copyTo(self, *args): ...
    def create(self, *args): ...
    def length(self, *args): ...
    def set(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnUnitAttribute(MFnAttribute):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def getDefault(self, *args): ...
    def getMax(self, *args): ...
    def getMin(self, *args): ...
    def getSoftMax(self, *args): ...
    def getSoftMin(self, *args): ...
    def hasMax(self, *args): ...
    def hasMin(self, *args): ...
    def hasSoftMax(self, *args): ...
    def hasSoftMin(self, *args): ...
    def setDefault(self, *args): ...
    def setMax(self, *args): ...
    def setMin(self, *args): ...
    def setSoftMax(self, *args): ...
    def setSoftMin(self, *args): ...
    def type(self, *args): ...
    def unitType(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kAngle : int
    
    kDistance : int
    
    kInvalid : int
    
    kLast : int
    
    kTime : int


class MFnAssembly(MFnDagNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def activate(self, *args): ...
    def activateNonRecursive(self, *args): ...
    def canActivate(self, *args): ...
    def canRepApplyEdits(self, *args): ...
    def createRepresentation(self, *args): ...
    def deleteAllRepresentations(self, *args): ...
    def deleteRepresentation(self, *args): ...
    def getAbsoluteRepNamespace(self, *args): ...
    def getActive(self, *args): ...
    def getInitialRep(self, *args): ...
    def getParentAssembly(self, *args): ...
    def getRepLabel(self, *args): ...
    def getRepNamespace(self, *args): ...
    def getRepType(self, *args): ...
    def getRepresentations(self, *args): ...
    def getSubAssemblies(self, *args): ...
    def handlesAddEdits(self, *args): ...
    def importFile(self, *args): ...
    def isActive(self, *args): ...
    def isTopLevel(self, *args): ...
    def postLoad(self, *args): ...
    def repTypes(self, *args): ...
    def setRepLabel(self, *args): ...
    def setRepName(self, *args): ...
    def supportsEdits(self, *args): ...
    def supportsMemberChanges(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def getTopLevelAssemblies(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnSubd(MFnDagNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def collapse(self, *args): ...
    def convertToNurbs(self, *args): ...
    def copy(self, *args): ...
    def creasesClearAll(self, *args): ...
    def creasesGetAll(self, *args): ...
    def creasesSetAll(self, *args): ...
    def createBaseMesh(self, *args): ...
    def edgeAdjacentPolygon(self, *args): ...
    def edgeBetween(self, *args): ...
    def edgeChildren(self, *args): ...
    def edgeCount(self, *args): ...
    def edgeCreaseRelevant(self, *args): ...
    def edgeIsBoundary(self, *args): ...
    def edgeIsCreased(self, *args): ...
    def edgeIsValid(self, *args): ...
    def edgeSetCrease(self, *args): ...
    def edgeVertices(self, *args): ...
    def editsPending(self, *args): ...
    def editsUpdateAll(self, *args): ...
    def evaluateNormal(self, *args): ...
    def evaluatePosition(self, *args): ...
    def evaluatePositionAndNormal(self, *args): ...
    def getConnectedShaders(self, *args): ...
    def getCubicSpline(self, *args): ...
    def levelFullySubdivideTo(self, *args): ...
    def levelMaxAllowed(self, *args): ...
    def levelMaxCurrent(self, *args): ...
    def polygonBaseMeshAdd(self, *args): ...
    def polygonBaseMeshAddWithUVs(self, *args): ...
    def polygonChildren(self, *args): ...
    def polygonCount(self, *args): ...
    def polygonCountMaxWithGivenBaseMesh(self, *args): ...
    def polygonEdgeCount(self, *args): ...
    def polygonEdges(self, *args): ...
    def polygonGetCenterUV(self, *args): ...
    def polygonGetVertexUVs(self, *args): ...
    def polygonHasChildren(self, *args): ...
    def polygonHasVertexUVs(self, *args): ...
    def polygonIsValid(self, *args): ...
    def polygonSetUseUVs(self, *args): ...
    def polygonSetVertexUVs(self, *args): ...
    def polygonSubdivide(self, *args): ...
    def polygonVertexCount(self, *args): ...
    def polygonVertices(self, *args): ...
    def tesselate(self, *args): ...
    def tessellateViaNurbs(self, *args): ...
    def type(self, *args): ...
    def updateAllEditsAndCreases(self, *args): ...
    def updateSubdSurface(self, *args): ...
    def vertexAdjacentVertices(self, *args): ...
    def vertexBaseIndexFromVertexId(self, *args): ...
    def vertexBaseMeshAdd(self, *args): ...
    def vertexBaseMeshAddWithIndex(self, *args): ...
    def vertexBaseMeshGet(self, *args): ...
    def vertexBaseMeshGetWithId(self, *args): ...
    def vertexBaseMeshSet(self, *args): ...
    def vertexBaseMeshSetWithId(self, *args): ...
    def vertexChildren(self, *args): ...
    def vertexCount(self, *args): ...
    def vertexCreaseRelevant(self, *args): ...
    def vertexEditGet(self, *args): ...
    def vertexEditSet(self, *args): ...
    def vertexEditsClearAllNonBase(self, *args): ...
    def vertexEditsGetAllNonBase(self, *args): ...
    def vertexEditsSetAllNonBase(self, *args): ...
    def vertexIdFromBaseVertexIndex(self, *args): ...
    def vertexIncidentEdges(self, *args): ...
    def vertexIncidentPolygons(self, *args): ...
    def vertexIsBoundary(self, *args): ...
    def vertexIsCreased(self, *args): ...
    def vertexIsValid(self, *args): ...
    def vertexNormal(self, *args): ...
    def vertexPositionGet(self, *args): ...
    def vertexPositionGetNoEdit(self, *args): ...
    def vertexPositionSet(self, *args): ...
    def vertexSetCrease(self, *args): ...
    def vertexValence(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnLight(MFnDagNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def centerOfIllumination(self, *args): ...
    def color(self, *args): ...
    def intensity(self, *args): ...
    def lightAmbient(self, *args): ...
    def lightDiffuse(self, *args): ...
    def lightDirection(self, *args): ...
    def lightIntensity(self, *args): ...
    def lightSpecular(self, *args): ...
    def numShadowSamples(self, *args): ...
    def opticalFXvisibility(self, *args): ...
    def rayDepthLimit(self, *args): ...
    def setCenterOfIllumination(self, *args): ...
    def setColor(self, *args): ...
    def setIntensity(self, *args): ...
    def setNumShadowSamples(self, *args): ...
    def setOpticalFXvisibility(self, *args): ...
    def setRayDepthLimit(self, *args): ...
    def setShadowColor(self, *args): ...
    def setUseRayTraceShadows(self, *args): ...
    def shadowColor(self, *args): ...
    def type(self, *args): ...
    def useRayTraceShadows(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnNurbsCurveData(MFnGeometryData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnSubdData(MFnGeometryData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnMeshData(MFnGeometryData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnTransform(MFnDagNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def clearRestPosition(self, *args): ...
    def create(self, *args): ...
    def enableLimit(self, *args): ...
    def getRotation(self, *args): ...
    def getRotationQuaternion(self, *args): ...
    def getScale(self, *args): ...
    def getShear(self, *args): ...
    def getTranslation(self, *args): ...
    def isLimited(self, *args): ...
    def limitValue(self, *args): ...
    def resetFromRestPosition(self, *args): ...
    def restPosition(self, *args): ...
    def rotateBy(self, *args): ...
    def rotateByQuaternion(self, *args): ...
    def rotateOrientation(self, *args): ...
    def rotatePivot(self, *args): ...
    def rotatePivotTranslation(self, *args): ...
    def rotationOrder(self, *args): ...
    def scaleBy(self, *args): ...
    def scalePivot(self, *args): ...
    def scalePivotTranslation(self, *args): ...
    def set(self, *args): ...
    def setLimit(self, *args): ...
    def setRestPosition(self, *args): ...
    def setRotateOrientation(self, *args): ...
    def setRotatePivot(self, *args): ...
    def setRotatePivotTranslation(self, *args): ...
    def setRotation(self, *args): ...
    def setRotationOrder(self, *args): ...
    def setRotationQuaternion(self, *args): ...
    def setScale(self, *args): ...
    def setScalePivot(self, *args): ...
    def setScalePivotTranslation(self, *args): ...
    def setShear(self, *args): ...
    def setTranslation(self, *args): ...
    def shearBy(self, *args): ...
    def transformation(self, *args): ...
    def translateBy(self, *args): ...
    def translation(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kRotateMaxX : int
    
    kRotateMaxY : int
    
    kRotateMaxZ : int
    
    kRotateMinX : int
    
    kRotateMinY : int
    
    kRotateMinZ : int
    
    kScaleMaxX : int
    
    kScaleMaxY : int
    
    kScaleMaxZ : int
    
    kScaleMinX : int
    
    kScaleMinY : int
    
    kScaleMinZ : int
    
    kShearMaxXY : int
    
    kShearMaxXZ : int
    
    kShearMaxYZ : int
    
    kShearMinXY : int
    
    kShearMinXZ : int
    
    kShearMinYZ : int
    
    kTranslateMaxX : int
    
    kTranslateMaxY : int
    
    kTranslateMaxZ : int
    
    kTranslateMinX : int
    
    kTranslateMinY : int
    
    kTranslateMinZ : int


class MFnNurbsSurfaceData(MFnGeometryData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnCamera(MFnDagNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def aspectRatio(self, *args): ...
    def cameraScale(self, *args): ...
    def centerOfInterest(self, *args): ...
    def centerOfInterestPoint(self, *args): ...
    def computeDepthOfField(self, *args): ...
    def copyViewFrom(self, *args): ...
    def create(self, *args): ...
    def eyePoint(self, *args): ...
    def fStop(self, *args): ...
    def farClippingPlane(self, *args): ...
    def farFocusDistance(self, *args): ...
    def filmFit(self, *args): ...
    def filmFitOffset(self, *args): ...
    def filmRollOrder(self, *args): ...
    def filmRollValue(self, *args): ...
    def filmTranslateH(self, *args): ...
    def filmTranslateV(self, *args): ...
    def focalLength(self, *args): ...
    def focusDistance(self, *args): ...
    def getAspectRatioLimits(self, *args): ...
    def getFilmApertureLimits(self, *args): ...
    def getFilmFrustum(self, *args): ...
    def getFocalLengthLimits(self, *args): ...
    def getPortFieldOfView(self, *args): ...
    def getRenderingFrustum(self, *args): ...
    def getViewParameters(self, *args): ...
    def getViewingFrustum(self, *args): ...
    def hasSamePerspective(self, *args): ...
    def horizontalFieldOfView(self, *args): ...
    def horizontalFilmAperture(self, *args): ...
    def horizontalFilmOffset(self, *args): ...
    def horizontalPan(self, *args): ...
    def horizontalRollPivot(self, *args): ...
    def horizontalShake(self, *args): ...
    def isClippingPlanes(self, *args): ...
    def isDepthOfField(self, *args): ...
    def isDisplayFilmGate(self, *args): ...
    def isDisplayGateMask(self, *args): ...
    def isMotionBlur(self, *args): ...
    def isOrtho(self, *args): ...
    def isVerticalLock(self, *args): ...
    def lensSqueezeRatio(self, *args): ...
    def nearClippingPlane(self, *args): ...
    def nearFocusDistance(self, *args): ...
    def orthoWidth(self, *args): ...
    def overscan(self, *args): ...
    def panZoomEnabled(self, *args): ...
    def postProjectionMatrix(self, *args): ...
    def postScale(self, *args): ...
    def preScale(self, *args): ...
    def projectionMatrix(self, *args): ...
    def renderPanZoom(self, *args): ...
    def rightDirection(self, *args): ...
    def set(self, *args): ...
    def setAspectRatio(self, *args): ...
    def setCameraScale(self, *args): ...
    def setCenterOfInterest(self, *args): ...
    def setCenterOfInterestPoint(self, *args): ...
    def setClippingPlanes(self, *args): ...
    def setDepthOfField(self, *args): ...
    def setDisplayFilmGate(self, *args): ...
    def setDisplayGateMask(self, *args): ...
    def setEyePoint(self, *args): ...
    def setFStop(self, *args): ...
    def setFarClippingPlane(self, *args): ...
    def setFarFocusDistance(self, *args): ...
    def setFilmFit(self, *args): ...
    def setFilmFitOffset(self, *args): ...
    def setFilmRollOrder(self, *args): ...
    def setFilmRollValue(self, *args): ...
    def setFilmTranslateH(self, *args): ...
    def setFilmTranslateV(self, *args): ...
    def setFocalLength(self, *args): ...
    def setFocusDistance(self, *args): ...
    def setHorizontalFieldOfView(self, *args): ...
    def setHorizontalFilmAperture(self, *args): ...
    def setHorizontalFilmOffset(self, *args): ...
    def setHorizontalPan(self, *args): ...
    def setHorizontalRollPivot(self, *args): ...
    def setHorizontalShake(self, *args): ...
    def setIsOrtho(self, *args): ...
    def setLensSqueezeRatio(self, *args): ...
    def setMotionBlur(self, *args): ...
    def setNearClippingPlane(self, *args): ...
    def setNearFarClippingPlanes(self, *args): ...
    def setNearFocusDistance(self, *args): ...
    def setOrthoWidth(self, *args): ...
    def setOverscan(self, *args): ...
    def setPanZoomEnabled(self, *args): ...
    def setPostScale(self, *args): ...
    def setPreScale(self, *args): ...
    def setRenderPanZoom(self, *args): ...
    def setShakeEnabled(self, *args): ...
    def setShakeOverscan(self, *args): ...
    def setShakeOverscanEnabled(self, *args): ...
    def setShutterAngle(self, *args): ...
    def setStereoHIT(self, *args): ...
    def setStereoHITEnabled(self, *args): ...
    def setTumblePivot(self, *args): ...
    def setUsePivotAsLocalSpace(self, *args): ...
    def setVerticalFieldOfView(self, *args): ...
    def setVerticalFilmAperture(self, *args): ...
    def setVerticalFilmOffset(self, *args): ...
    def setVerticalLock(self, *args): ...
    def setVerticalPan(self, *args): ...
    def setVerticalRollPivot(self, *args): ...
    def setVerticalShake(self, *args): ...
    def setZoom(self, *args): ...
    def shakeEnabled(self, *args): ...
    def shakeOverscan(self, *args): ...
    def shakeOverscanEnabled(self, *args): ...
    def shutterAngle(self, *args): ...
    def stereoHIT(self, *args): ...
    def stereoHITEnabled(self, *args): ...
    def tumblePivot(self, *args): ...
    def type(self, *args): ...
    def unnormalizedFarClippingPlane(self, *args): ...
    def unnormalizedNearClippingPlane(self, *args): ...
    def upDirection(self, *args): ...
    def usePivotAsLocalSpace(self, *args): ...
    def verticalFieldOfView(self, *args): ...
    def verticalFilmAperture(self, *args): ...
    def verticalFilmOffset(self, *args): ...
    def verticalPan(self, *args): ...
    def verticalRollPivot(self, *args): ...
    def verticalShake(self, *args): ...
    def viewDirection(self, *args): ...
    def zoom(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kFillFilmFit : int
    
    kHorizontalFilmFit : int
    
    kInvalid : int
    
    kOverscanFilmFit : int
    
    kRotateTranslate : int
    
    kTranslateRotate : int
    
    kVerticalFilmFit : int


class MFnNurbsSurface(MFnDagNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def area(self, *args): ...
    def assignUV(self, *args): ...
    def assignUVs(self, *args): ...
    def boundaryType(self, *args): ...
    def clearUVs(self, *args): ...
    def closestPoint(self, *args): ...
    def copy(self, *args): ...
    def create(self, *args): ...
    def cv(self, *args): ...
    def cvsInU(self, *args): ...
    def cvsInV(self, *args): ...
    def degreeU(self, *args): ...
    def degreeV(self, *args): ...
    def distanceToPoint(self, *args): ...
    def edge(self, *args): ...
    def formInU(self, *args): ...
    def formInV(self, *args): ...
    def getAssignedUVs(self, *args): ...
    def getCV(self, *args): ...
    def getCVs(self, *args): ...
    def getConnectedShaders(self, *args): ...
    def getDataObject(self, *args): ...
    def getDerivativesAtParm(self, *args): ...
    def getKnotDomain(self, *args): ...
    def getKnotsInU(self, *args): ...
    def getKnotsInV(self, *args): ...
    def getParamAtPoint(self, *args): ...
    def getPatchUV(self, *args): ...
    def getPatchUVid(self, *args): ...
    def getPatchUVs(self, *args): ...
    def getPointAtParam(self, *args): ...
    def getTangents(self, *args): ...
    def getTrimBoundaries(self, *args): ...
    def getUV(self, *args): ...
    def getUVs(self, *args): ...
    def hasHistoryOnCreate(self, *args): ...
    def intersect(self, *args): ...
    def isBezier(self, *args): ...
    def isFlipNorm(self, *args): ...
    def isFoldedOnBispan(self, *args): ...
    def isKnotU(self, *args): ...
    def isKnotV(self, *args): ...
    def isParamOnSurface(self, *args): ...
    def isPointInTrimmedRegion(self, *args): ...
    def isPointOnSurface(self, *args): ...
    def isTrimmedSurface(self, *args): ...
    def isUniform(self, *args): ...
    def knotInU(self, *args): ...
    def knotInV(self, *args): ...
    def normal(self, *args): ...
    def numBoundaries(self, *args): ...
    def numCVsInU(self, *args): ...
    def numCVsInV(self, *args): ...
    def numEdges(self, *args): ...
    def numKnotsInU(self, *args): ...
    def numKnotsInV(self, *args): ...
    def numNonZeroSpansInU(self, *args): ...
    def numNonZeroSpansInV(self, *args): ...
    def numPatches(self, *args): ...
    def numPatchesInU(self, *args): ...
    def numPatchesInV(self, *args): ...
    def numRegions(self, *args): ...
    def numSpansInU(self, *args): ...
    def numSpansInV(self, *args): ...
    def numUVs(self, *args): ...
    def projectCurve(self, *args): ...
    def removeKnotInU(self, *args): ...
    def removeKnotInV(self, *args): ...
    def removeOneKnotInU(self, *args): ...
    def removeOneKnotInV(self, *args): ...
    def setCV(self, *args): ...
    def setCVs(self, *args): ...
    def setKnotInU(self, *args): ...
    def setKnotInV(self, *args): ...
    def setKnotsInU(self, *args): ...
    def setKnotsInV(self, *args): ...
    def setUV(self, *args): ...
    def setUVs(self, *args): ...
    def tesselate(self, *args): ...
    def trim(self, *args): ...
    def trimWithBoundaries(self, *args): ...
    def type(self, *args): ...
    def updateSurface(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kClosed : int
    
    kClosedSegment : int
    
    kInner : int
    
    kInvalid : int
    
    kInvalidBoundary : int
    
    kLast : int
    
    kOpen : int
    
    kOuter : int
    
    kPeriodic : int
    
    kSegment : int


class MFnMesh(MFnDagNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addHoles(self, *args): ...
    def addPolygon(self, *args): ...
    def allIntersections(self, *args): ...
    def anyIntersection(self, *args): ...
    def assignColor(self, *args): ...
    def assignColors(self, *args): ...
    def assignUV(self, *args): ...
    def assignUVs(self, *args): ...
    def binaryBlindDataComponentId(self, *args): ...
    def booleanOp(self, *args): ...
    def booleanOps(self, *args): ...
    def cachedIntersectionAcceleratorInfo(self, *args): ...
    def cleanupEdgeSmoothing(self, *args): ...
    def clearBlindData(self, *args): ...
    def clearColors(self, *args): ...
    def clearUVs(self, *args): ...
    def closestIntersection(self, *args): ...
    def collapseEdges(self, *args): ...
    def collapseFaces(self, *args): ...
    def copy(self, *args): ...
    def copyInPlace(self, *args): ...
    def copyUVSetWithName(self, *args): ...
    def create(self, *args): ...
    def createBlindDataType(self, *args): ...
    def createColorSetDataMesh(self, *args): ...
    def createColorSetWithName(self, *args): ...
    def createColorSetWithNameDataMesh(self, *args): ...
    def createInPlace(self, *args): ...
    def createUVSetDataMeshWithName(self, *args): ...
    def createUVSetWithName(self, *args): ...
    def currentColorSetName(self, *args): ...
    def currentUVSetName(self, *args): ...
    def deleteColorSet(self, *args): ...
    def deleteEdge(self, *args): ...
    def deleteFace(self, *args): ...
    def deleteUVSet(self, *args): ...
    def deleteVertex(self, *args): ...
    def displayColors(self, *args): ...
    def duplicateFaces(self, *args): ...
    def extractFaces(self, *args): ...
    def extrudeEdges(self, *args): ...
    def extrudeFaces(self, *args): ...
    def freeCachedIntersectionAccelerator(self, *args): ...
    def generateSmoothMesh(self, *args): ...
    def getAssignedUVs(self, *args): ...
    def getAssociatedColorSetInstances(self, *args): ...
    def getAssociatedUVSetInstances(self, *args): ...
    def getAssociatedUVSetTextures(self, *args): ...
    def getAxisAtPoint(self, *args): ...
    def getBinaryBlindData(self, *args): ...
    def getBinormals(self, *args): ...
    def getBlindDataAttrNames(self, *args): ...
    def getBlindDataFaceVertexIndices(self, *args): ...
    def getBlindDataTypes(self, *args): ...
    def getBoolBlindData(self, *args): ...
    def getCheckSamePointTwice(self, *args): ...
    def getClosestNormal(self, *args): ...
    def getClosestPoint(self, *args): ...
    def getClosestPointAndNormal(self, *args): ...
    def getClosestUVs(self, *args): ...
    def getColor(self, *args): ...
    def getColorIndex(self, *args): ...
    def getColorRepresentation(self, *args): ...
    def getColorSetFamilyNames(self, *args): ...
    def getColorSetNames(self, *args): ...
    def getColorSetsInFamily(self, *args): ...
    def getColors(self, *args): ...
    def getConnectedShaders(self, *args): ...
    def getCreaseEdges(self, *args): ...
    def getCreaseVertices(self, *args): ...
    def getDoubleBlindData(self, *args): ...
    def getEdgeVertices(self, *args): ...
    def getFaceNormalIds(self, *args): ...
    def getFaceUVSetNames(self, *args): ...
    def getFaceVertexBinormal(self, *args): ...
    def getFaceVertexBinormals(self, *args): ...
    def getFaceVertexBlindDataIndex(self, *args): ...
    def getFaceVertexColorIndex(self, *args): ...
    def getFaceVertexColors(self, *args): ...
    def getFaceVertexNormal(self, *args): ...
    def getFaceVertexNormals(self, *args): ...
    def getFaceVertexTangent(self, *args): ...
    def getFaceVertexTangents(self, *args): ...
    def getFloatBlindData(self, *args): ...
    def getHoles(self, *args): ...
    def getIntBlindData(self, *args): ...
    def getInvisibleFaces(self, *args): ...
    def getNormalIds(self, *args): ...
    def getNormals(self, *args): ...
    def getPinUVs(self, *args): ...
    def getPoint(self, *args): ...
    def getPointAtUV(self, *args): ...
    def getPoints(self, *args): ...
    def getPointsAtUV(self, *args): ...
    def getPolygonNormal(self, *args): ...
    def getPolygonTriangleVertices(self, *args): ...
    def getPolygonUV(self, *args): ...
    def getPolygonUVid(self, *args): ...
    def getPolygonVertices(self, *args): ...
    def getRawDoublePoints(self, *args): ...
    def getRawNormals(self, *args): ...
    def getRawPoints(self, *args): ...
    def getSmoothMeshDisplayOptions(self, *args): ...
    def getStringBlindData(self, *args): ...
    def getTangentId(self, *args): ...
    def getTangents(self, *args): ...
    def getTriangleOffsets(self, *args): ...
    def getTriangles(self, *args): ...
    def getUV(self, *args): ...
    def getUVAtPoint(self, *args): ...
    def getUVSetFamilyNames(self, *args): ...
    def getUVSetNames(self, *args): ...
    def getUVSetsInFamily(self, *args): ...
    def getUVs(self, *args): ...
    def getUvShellsIds(self, *args): ...
    def getVertexColors(self, *args): ...
    def getVertexNormal(self, *args): ...
    def getVertexNormals(self, *args): ...
    def getVertices(self, *args): ...
    def hasAlphaChannels(self, *args): ...
    def hasBlindData(self, *args): ...
    def hasBlindDataComponentId(self, *args): ...
    def hasColorChannels(self, *args): ...
    def intersect(self, *args): ...
    def intersectFaceAtUV(self, *args): ...
    def isBlindDataTypeUsed(self, *args): ...
    def isColorClamped(self, *args): ...
    def isColorSetPerInstance(self, *args): ...
    def isEdgeSmooth(self, *args): ...
    def isNormalLocked(self, *args): ...
    def isPolygonConvex(self, *args): ...
    def isPolygonUVReversed(self, *args): ...
    def isRightHandedTangent(self, *args): ...
    def isUVSetPerInstance(self, *args): ...
    def lockFaceVertexNormals(self, *args): ...
    def lockVertexNormals(self, *args): ...
    def numColorSets(self, *args): ...
    def numColors(self, *args): ...
    def numEdges(self, *args): ...
    def numFaceVertices(self, *args): ...
    def numNormals(self, *args): ...
    def numPolygons(self, *args): ...
    def numUVSets(self, *args): ...
    def numUVs(self, *args): ...
    def numVertices(self, *args): ...
    def onBoundary(self, *args): ...
    def polygonVertexCount(self, *args): ...
    def removeFaceColors(self, *args): ...
    def removeFaceVertexColors(self, *args): ...
    def removeVertexColors(self, *args): ...
    def renameUVSet(self, *args): ...
    def setBinaryBlindData(self, *args): ...
    def setBoolBlindData(self, *args): ...
    def setCheckSamePointTwice(self, *args): ...
    def setColor(self, *args): ...
    def setColors(self, *args): ...
    def setCreaseEdges(self, *args): ...
    def setCreaseVertices(self, *args): ...
    def setCurrentColorSetName(self, *args): ...
    def setCurrentUVSetName(self, *args): ...
    def setDisplayColors(self, *args): ...
    def setDoubleBlindData(self, *args): ...
    def setEdgeSmoothing(self, *args): ...
    def setEdgeSmoothings(self, *args): ...
    def setFaceColor(self, *args): ...
    def setFaceColors(self, *args): ...
    def setFaceVertexColor(self, *args): ...
    def setFaceVertexColors(self, *args): ...
    def setFaceVertexNormal(self, *args): ...
    def setFaceVertexNormals(self, *args): ...
    def setFloatBlindData(self, *args): ...
    def setIntBlindData(self, *args): ...
    def setInvisibleFaces(self, *args): ...
    def setIsColorClamped(self, *args): ...
    def setNormals(self, *args): ...
    def setPinUVs(self, *args): ...
    def setPoint(self, *args): ...
    def setPoints(self, *args): ...
    def setSmoothMeshDisplayOptions(self, *args): ...
    def setSomeColors(self, *args): ...
    def setSomeUVs(self, *args): ...
    def setStringBlindData(self, *args): ...
    def setUV(self, *args): ...
    def setUVs(self, *args): ...
    def setVertexColor(self, *args): ...
    def setVertexColors(self, *args): ...
    def setVertexNormal(self, *args): ...
    def setVertexNormals(self, *args): ...
    def sortIntersectionFaceTriIds(self, *args): ...
    def split(self, *args): ...
    def stringBlindDataComponentId(self, *args): ...
    def subdivideEdges(self, *args): ...
    def subdivideFaces(self, *args): ...
    def syncObject(self, *args): ...
    def type(self, *args): ...
    def unlockFaceVertexNormals(self, *args): ...
    def unlockVertexNormals(self, *args): ...
    def updateSurface(self, *args): ...
    @staticmethod
    def autoUniformGridParams(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def clearGlobalIntersectionAcceleratorInfo(*args, **kwargs): ...
    @staticmethod
    def componentTypeFromName(*args, **kwargs): ...
    @staticmethod
    def componentTypeName(*args, **kwargs): ...
    @staticmethod
    def globalIntersectionAcceleratorsInfo(*args, **kwargs): ...
    @staticmethod
    def polyTriangulate(*args, **kwargs): ...
    @staticmethod
    def uniformGridParams(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kAlpha : int
    
    kDifference : int
    
    kInternalPoint : int
    
    kIntersection : int
    
    kInvalid : int
    
    kOnEdge : int
    
    kRGB : int
    
    kRGBA : int
    
    kUnion : int


class MFnReflectShader(MFnLambertShader):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def reflectedColor(self, *args): ...
    def reflectedRayDepthLimit(self, *args): ...
    def reflectivity(self, *args): ...
    def setReflectedColor(self, *args): ...
    def setReflectedRayDepthLimit(self, *args): ...
    def setReflectivity(self, *args): ...
    def setSpecularColor(self, *args): ...
    def specularColor(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnNurbsCurve(MFnDagNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def area(self, *args): ...
    def closestPoint(self, *args): ...
    def copy(self, *args): ...
    def create(self, *args): ...
    def createWithEditPoints(self, *args): ...
    def cv(self, *args): ...
    def cvs(self, *args): ...
    def degree(self, *args): ...
    def distanceToPoint(self, *args): ...
    def findLengthFromParam(self, *args): ...
    def findParamFromLength(self, *args): ...
    def form(self, *args): ...
    def getCV(self, *args): ...
    def getCVs(self, *args): ...
    def getDerivativesAtParm(self, *args): ...
    def getKnotDomain(self, *args): ...
    def getKnots(self, *args): ...
    def getParamAtPoint(self, *args): ...
    def getPointAtParam(self, *args): ...
    def hasHistoryOnCreate(self, *args): ...
    def isParamOnCurve(self, *args): ...
    def isPlanar(self, *args): ...
    def isPointOnCurve(self, *args): ...
    def knot(self, *args): ...
    def length(self, *args): ...
    def makeMultipleEndKnots(self, *args): ...
    def normal(self, *args): ...
    def numCVs(self, *args): ...
    def numKnots(self, *args): ...
    def numSpans(self, *args): ...
    def rebuild(self, *args): ...
    def removeKnot(self, *args): ...
    def reverse(self, *args): ...
    def setCV(self, *args): ...
    def setCVs(self, *args): ...
    def setKnot(self, *args): ...
    def setKnots(self, *args): ...
    def tangent(self, *args): ...
    def type(self, *args): ...
    def updateCurve(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kClosed : int
    
    kInvalid : int
    
    kLast : int
    
    kOpen : int
    
    kPeriodic : int


class MFnLatticeData(MFnGeometryData):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def lattice(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnNonAmbientLight(MFnLight):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def decayRate(self, *args): ...
    def setDecayRate(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnPhongShader(MFnReflectShader):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def cosPower(self, *args): ...
    def create(self, *args): ...
    def setCosPower(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnBlinnShader(MFnReflectShader):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def eccentricity(self, *args): ...
    def setEccentricity(self, *args): ...
    def setSpecularRollOff(self, *args): ...
    def specularRollOff(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnAmbientLight(MFnLight):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def ambientShade(self, *args): ...
    def castSoftShadows(self, *args): ...
    def create(self, *args): ...
    def setAmbientShade(self, *args): ...
    def setCastSoftShadows(self, *args): ...
    def setShadowRadius(self, *args): ...
    def shadowRadius(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnNonExtendedLight(MFnNonAmbientLight):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def castSoftShadows(self, *args): ...
    def depthMapBias(self, *args): ...
    def depthMapFilterSize(self, *args): ...
    def depthMapFocus(self, *args): ...
    def depthMapResolution(self, *args): ...
    def depthMapWidthFocus(self, *args): ...
    def setCastSoftShadows(self, *args): ...
    def setDepthMapBias(self, *args): ...
    def setDepthMapFilterSize(self, *args): ...
    def setDepthMapFocus(self, *args): ...
    def setDepthMapResolution(self, *args): ...
    def setDepthMapWidthFocus(self, *args): ...
    def setShadowRadius(self, *args): ...
    def setUseDepthMapAutoFocus(self, *args): ...
    def setUseDepthMapShadows(self, *args): ...
    def shadowRadius(self, *args): ...
    def type(self, *args): ...
    def useDepthMapAutoFocus(self, *args): ...
    def useDepthMapShadows(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnPointLight(MFnNonExtendedLight):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnDirectionalLight(MFnNonExtendedLight):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def setShadowAngle(self, *args): ...
    def setUseLightPosition(self, *args): ...
    def shadowAngle(self, *args): ...
    def type(self, *args): ...
    def useLightPosition(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnSpotLight(MFnNonExtendedLight):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def barnDoorAngle(self, *args): ...
    def barnDoors(self, *args): ...
    def coneAngle(self, *args): ...
    def create(self, *args): ...
    def dropOff(self, *args): ...
    def endDistance(self, *args): ...
    def penumbraAngle(self, *args): ...
    def setBarnDoorAngle(self, *args): ...
    def setBarnDoors(self, *args): ...
    def setConeAngle(self, *args): ...
    def setDropOff(self, *args): ...
    def setEndDistance(self, *args): ...
    def setPenumbraAngle(self, *args): ...
    def setStartDistance(self, *args): ...
    def setUseDecayRegions(self, *args): ...
    def startDistance(self, *args): ...
    def type(self, *args): ...
    def useDecayRegions(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kBottom : int
    
    kFirst : int
    
    kLeft : int
    
    kRight : int
    
    kSecond : int
    
    kThird : int
    
    kTop : int


class MFnAreaLight(MFnNonExtendedLight):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnVolumeLight(MFnPointLight):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def arc(self, *args): ...
    def colorRamp(self, *args): ...
    def coneEndRadius(self, *args): ...
    def create(self, *args): ...
    def emitAmbient(self, *args): ...
    def lightShape(self, *args): ...
    def penumbraRamp(self, *args): ...
    def setArc(self, *args): ...
    def setConeEndRadius(self, *args): ...
    def setEmitAmbient(self, *args): ...
    def setLightShape(self, *args): ...
    def setShadowAngle(self, *args): ...
    def setVolumeLightDirection(self, *args): ...
    def shadowAngle(self, *args): ...
    def type(self, *args): ...
    def volumeLightDirection(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kBoxVolume : int
    
    kConeVolume : int
    
    kCylinderVolume : int
    
    kDownAxis : int
    
    kInward : int
    
    kOutward : int
    
    kSphereVolume : int




def MItMeshFaceVertex_swigregister(*args, **kwargs): ...
def MInt64Array_className(*args, **kwargs): ...
def MObjectHandle_objectHashCode(*args, **kwargs): ...
def MProfiler_setRecordingActive(*args, **kwargs): ...
def MFnSpotLight_swigregister(*args, **kwargs): ...
def MFnComponentListData_className(*args, **kwargs): ...
def MFnBlinnShader_swigregister(*args, **kwargs): ...
def MScriptUtil_getShort(*args, **kwargs): ...
def MGlobal_animSelectionMask(*args, **kwargs): ...
def MIffFile_className(*args, **kwargs): ...
def MSceneMessage_addConnectionFailedCallback(*args, **kwargs): ...
def MScriptUtil_setUintArray(*args, **kwargs): ...
def MScriptUtil_setCharArray(*args, **kwargs): ...
def MMeshIntersector_className(*args, **kwargs): ...
def MNodeMessage_addNodePreRemovalCallback(*args, **kwargs): ...
def MScriptUtil_getIntArrayItem(*args, **kwargs): ...
def MGlobal_addToModel(*args, **kwargs): ...
def MRenderPassRegistry_className(*args, **kwargs): ...
def MIteratorType_swigregister(*args, **kwargs): ...
def MTimeArray_swigregister(*args, **kwargs): ...
def MFnPointLight_swigregister(*args, **kwargs): ...
def MAngle_internalToUI(*args, **kwargs): ...
def MFnLightDataAttribute_swigregister(*args, **kwargs): ...
def MFnMatrixAttribute_className(*args, **kwargs): ...
def MSelectionList_className(*args, **kwargs): ...
def MPlug_className(*args, **kwargs): ...
def MGlobal_setObjectSelectionMask(*args, **kwargs): ...
def MAttributePattern_attrPattern(*args, **kwargs): ...
def MStreamUtils_readDouble(*args, **kwargs): ...
def MFileIO_importFile(*args, **kwargs): ...
def MGlobal_optionVarDoubleValue(*args, **kwargs): ...
def MArgParser_swigregister(*args, **kwargs): ...
def MTime_ticksPerSecond(*args, **kwargs): ...
def MGlobal_currentToolContext(*args, **kwargs): ...
def MItSelectionList_className(*args, **kwargs): ...
def MNamespace_relativeNames(*args, **kwargs): ...
def MFnSubdNames_baseFaceId(*args, **kwargs): ...
def array4dDouble_swigregister(*args, **kwargs): ...
def MTimerMessage_swigregister(*args, **kwargs): ...
def MDataBlock_swigregister(*args, **kwargs): ...
def MFnSubdNames_level(*args, **kwargs): ...
def MProfilingContextManager(*args, **kwds):
    """
    Context manager that defines a profiling scope around a block of code.
    
    Parameters
    ----------
    categoryId : int
            The index of the category which the event belongs to.
    colorIndex : MProfiler.ProfilingColor
            The color to draw the profiling result in Profiler Window.
    eventName : string
            The name of the event.
    description : string (optional)
            Description of the event.
    associatedNode : MObject (optional)
            The dependency node associated with the event.
    
    Example
    -------
    >>> import maya.OpenMaya as OM
    >>> categoryIndex = OM.MProfiler.addCategory("Python Scripts")
    >>> def Factorial(number):
    ...     # Instrument the following block of code:
    ...     with OM.MProfilingContextManager(categoryIndex, OM.MProfiler.kColorE_L1, "Factorial", "FactorialDesc"):
    ...             result = 1
    ...             for i in xrange(2, number+1):
    ...                     result *= i
    ...     return result
    ...
    >>>
    """
    ...
def MFileIO_isWritingFile(*args, **kwargs): ...
def MGlobal_className(*args, **kwargs): ...
def MFcurveEdit_swigregister(*args, **kwargs): ...
def MFnDependencyNode_allocateFlag(*args, **kwargs): ...
def MGlobal_optionVarExists(*args, **kwargs): ...
def MObjectHandle_swigregister(*args, **kwargs): ...
def MGlobal_mayaState(*args, **kwargs): ...
def MDagMessage_addDagDagPathCallback(*args, **kwargs): ...
def MGlobal_setAnimSelectionMask(*args, **kwargs): ...
def MGlobal_executeCommand(*args, **kwargs): ...
def MGlobal_setRichSelection(*args, **kwargs): ...
def MDAGDrawOverrideInfo_swigregister(*args, **kwargs): ...
def MDGMessage_addTimeChangeCallback(*args, **kwargs): ...
def floatPtr_swigregister(*args, **kwargs): ...
def MFnDoubleArrayData_swigregister(*args, **kwargs): ...
def MFnReflectShader_className(*args, **kwargs): ...
def MFileIO_beforeExportUserFileTranslator(*args, **kwargs): ...
def MUserEventMessage_addUserEventCallback(*args, **kwargs): ...
def MAngle_setUIUnit(*args, **kwargs): ...
def MSceneMessage_addCheckReferenceCallback(*args, **kwargs): ...
def MFnAmbientLight_className(*args, **kwargs): ...
def MFnAreaLight_className(*args, **kwargs): ...
def MProfiler_getCategoryName(*args, **kwargs): ...
def MProfiler_getThreadId(*args, **kwargs): ...
def MProfiler_isDataFromFile(*args, **kwargs): ...
def MPolyMessage_addColorSetChangedCallback(*args, **kwargs): ...
def MPolyMessage_deletedId(*args, **kwargs): ...
def MScriptUtil_setUcharArray(*args, **kwargs): ...
def MFileIO_isReferencingFile(*args, **kwargs): ...
def MAttributePattern_attrPatternCount(*args, **kwargs): ...
def MFnDependencyNode_swigregister(*args, **kwargs): ...
def MScriptUtil_createIntArrayFromList(*args, **kwargs): ...
def MScriptUtil_setUshortArray(*args, **kwargs): ...
def MContainerMessage_swigregister(*args, **kwargs): ...
def MDGMessage_addDelayedTimeChangeCallback(*args, **kwargs): ...
def MModelMessage_className(*args, **kwargs): ...
def MNurbsIntersector_swigregister(*args, **kwargs): ...
def MProfiler_eventEnd(*args, **kwargs): ...
def MFnDirectionalLight_swigregister(*args, **kwargs): ...
def MScriptUtil_getShort4ArrayItem(*args, **kwargs): ...
def MFileIO_mustRenameToSaveMsg(*args, **kwargs): ...
def MRampAttribute_createCurveRamp(*args, **kwargs): ...
def MGlobal_optionVarIntValue(*args, **kwargs): ...
def MArgParser_className(*args, **kwargs): ...
def MTime_className(*args, **kwargs): ...
def MTransformationMatrix_swigregister(*args, **kwargs): ...
def MMessage_setRegisteringCallableScript(*args, **kwargs): ...
def MFnNurbsCurve_swigregister(*args, **kwargs): ...
def MNamespace_rootNamespace(*args, **kwargs): ...
def MFnSphereData_swigregister(*args, **kwargs): ...
def MDagPathArray_swigregister(*args, **kwargs): ...
def MFnMatrixData_swigregister(*args, **kwargs): ...
def MDataBlock_className(*args, **kwargs): ...
def MScriptUtil_setDouble3ArrayItem(*args, **kwargs): ...
def MDistance_swigregister(*args, **kwargs): ...
def uIntPtr_frompointer(*args, **kwargs): ...
def MGlobal_isRedoing(*args, **kwargs): ...
def MImage_className(*args, **kwargs): ...
def MAttributeIndex_swigregister(*args, **kwargs): ...
def MTimerMessage_sleepCallback(*args, **kwargs): ...
def MColorArray_swigregister(*args, **kwargs): ...
def MCommandMessage_swigregister(*args, **kwargs): ...
def MFnSubd_swigregister(*args, **kwargs): ...
def MFnSubdNames_levelOneFaceId(*args, **kwargs): ...
def MFnPointLight_className(*args, **kwargs): ...
def MUserEventMessage_className(*args, **kwargs): ...
def MDGContextGuard_swigregister(*args, **kwargs): ...
def MFnSubdNames_parentFaceId(*args, **kwargs): ...
def MNamespace_validateName(*args, **kwargs): ...
def MScriptUtil_setUchar(*args, **kwargs): ...
def MImage_swigregister(*args, **kwargs): ...
def MFileIO_setMustRenameToSaveMsg(*args, **kwargs): ...
def MAngle_uiUnit(*args, **kwargs): ...
def MIntArray_className(*args, **kwargs): ...
def uIntRefValue(ptr): ...
def MAttributeSpecArray_swigregister(*args, **kwargs): ...
def MGlobal_setOptionVarValue(*args, **kwargs): ...
def MGlobal_getSelectionListByName(*args, **kwargs): ...
def MGlobal_unselect(*args, **kwargs): ...
def MFnPartition_className(*args, **kwargs): ...
def MFnStringData_className(*args, **kwargs): ...
def MGlobal_disableStow(*args, **kwargs): ...
def MFnEnumAttribute_className(*args, **kwargs): ...
def MFnVectorArrayData_swigregister(*args, **kwargs): ...
def MUserEventMessage_isUserEvent(*args, **kwargs): ...
def MFileIO_isImportingFile(*args, **kwargs): ...
def MFnBase_className(*args, **kwargs): ...
def MScriptUtil_setDouble4ArrayItem(*args, **kwargs): ...
def MTime_setUIUnit(*args, **kwargs): ...
def MItMeshEdge_swigregister(*args, **kwargs): ...
def weakref_proxy(*args, **kwargs):
    """
    proxy(object[, callback]) -- create a proxy object that weakly
    references 'object'.  'callback', if given, is called with a
    reference to the proxy when 'object' is about to be finalized.
    """
    ...
def boolRefValue(ptr): ...
def MModelMessage_addNodeRemovedFromModelCallback(*args, **kwargs): ...
def MFileIO_getFiles(*args, **kwargs): ...
def MNurbsIntersector_className(*args, **kwargs): ...
def MProfiler_getColor(*args, **kwargs): ...
def MDagModifier_swigregister(*args, **kwargs): ...
def MProfiler_addCategory(*args, **kwargs): ...
def MScriptUtil_setChar(*args, **kwargs): ...
def MFileIO_save(*args, **kwargs): ...
def MEventMessage_swigregister(*args, **kwargs): ...
def MScriptUtil_setInt(*args, **kwargs): ...
def MScriptUtil_getBool(*args, **kwargs): ...
def MScriptUtil_getShortArrayItem(*args, **kwargs): ...
def MCallbackIdArray_swigregister(*args, **kwargs): ...
def MScriptUtil_getInt2ArrayItem(*args, **kwargs): ...
def MMessage_nodeCallbacks(*args, **kwargs): ...
def MScriptUtil_setFloat2ArrayItem(*args, **kwargs): ...
def MScriptUtil_setShort2ArrayItem(*args, **kwargs): ...
def MLockMessage_swigregister(*args, **kwargs): ...
def MScriptUtil_getUint3ArrayItem(*args, **kwargs): ...
def MNamespace_moveNamespace(*args, **kwargs): ...
def MFnCamera_className(*args, **kwargs): ...
def MDagPathArray_className(*args, **kwargs): ...
def MPlug_swigregister(*args, **kwargs): ...
def MScriptUtil_getCharArrayItem(*args, **kwargs): ...
def MFnSubdNames_base(*args, **kwargs): ...
def MFileIO_removeReference(*args, **kwargs): ...
def MFnPartition_swigregister(*args, **kwargs): ...
def MFcurveEdit_className(*args, **kwargs): ...
def MAttributeIndex_className(*args, **kwargs): ...
def MFnDependencyNode_classification(*args, **kwargs): ...
def MFnGeometryData_swigregister(*args, **kwargs): ...
def MScriptUtil_getShort2ArrayItem(*args, **kwargs): ...
def MColorArray_className(*args, **kwargs): ...
def MDagMessage_addChildReorderedDagPathCallback(*args, **kwargs): ...
def MFnSpotLight_className(*args, **kwargs): ...
def MFnComponent_swigregister(*args, **kwargs): ...
def MItMeshVertex_className(*args, **kwargs): ...
def MDoubleArray_className(*args, **kwargs): ...
def MEvaluationManager_swigregister(*args, **kwargs): ...
def MFileIO_beforeImportUserFileTranslator(*args, **kwargs): ...
def MURI_swigregister(*args, **kwargs): ...
def MFileIO_beforeImportFilename(*args, **kwargs): ...
def MProfiler_getEventCount(*args, **kwargs): ...
def MAttributeSpecArray_className(*args, **kwargs): ...
def MFnNumericAttribute_className(*args, **kwargs): ...
def MNodeMessage_addNameChangedCallback(*args, **kwargs): ...
def intRefValue(ptr): ...
def MCameraSetMessage_className(*args, **kwargs): ...
def MPolyMessage_addUVSetChangedCallback(*args, **kwargs): ...
def MScriptUtil_setBoolArray(*args, **kwargs): ...
def MFileIO_fileCurrentlyLoading(*args, **kwargs): ...
def MFloatArray_swigregister(*args, **kwargs): ...
def MFnVectorArrayData_className(*args, **kwargs): ...
def MTime_uiUnit(*args, **kwargs): ...
def MCacheFormatDescription_swigregister(*args, **kwargs): ...
def MGlobal_getLiveList(*args, **kwargs): ...
def MGlobal_selectionMode(*args, **kwargs): ...
def MDataHandle_swigregister(*args, **kwargs): ...
def MDagMessage_addChildRemovedDagPathCallback(*args, **kwargs): ...
def MDagModifier_className(*args, **kwargs): ...
def MGlobal_optionVarStringValue(*args, **kwargs): ...
def MGlobal_isUndoing(*args, **kwargs): ...
def MFileIO_open(*args, **kwargs): ...
def MGlobal_setDisableStow(*args, **kwargs): ...
def floatRefValue(ptr): ...
def MFileIO_currentFile(*args, **kwargs): ...
def MCallbackIdArray_className(*args, **kwargs): ...
def MNodeMessage_addNodeDestroyedCallback(*args, **kwargs): ...
def MMessage_currentCallbackId(*args, **kwargs): ...
def MUserData_swigregister(*args, **kwargs): ...
def MFnAttribute_className(*args, **kwargs): ...
def MNamespace_getNamespaceObjects(*args, **kwargs): ...
def array3dInt_swigregister(*args, **kwargs): ...
def MDistance_className(*args, **kwargs): ...
def MFileIO_reference(*args, **kwargs): ...
def MGlobal_doErrorLogEntry(*args, **kwargs): ...
def MScriptUtil_setDouble(*args, **kwargs): ...
def MParentingEdit_swigregister(*args, **kwargs): ...
def MTimerMessage_className(*args, **kwargs): ...
def MScriptUtil_getUintArrayItem(*args, **kwargs): ...
def MTrimBoundaryArray_className(*args, **kwargs): ...
def MScriptUtil_setInt3ArrayItem(*args, **kwargs): ...
def MFnMesh_polyTriangulate(*args, **kwargs): ...
def MDagMessage_addChildReorderedCallback(*args, **kwargs): ...
def MWeight_className(*args, **kwargs): ...
def MScriptUtil_setUint4ArrayItem(*args, **kwargs): ...
def setRefValue(refObject, value): ...
def MFnSubdNames_baseFaceIdFromLong(*args, **kwargs): ...
def MEvaluationManager_className(*args, **kwargs): ...
def MGlobal_objectSelectionMask(*args, **kwargs): ...
def MRampAttribute_swigregister(*args, **kwargs): ...
def MScriptUtil_getInt4ArrayItem(*args, **kwargs): ...
def MBoundingBox_swigregister(*args, **kwargs): ...
def MFnPhongShader_className(*args, **kwargs): ...
def MStreamUtils_readInt(*args, **kwargs): ...
def MFnIntArrayData_className(*args, **kwargs): ...
def MFnLight_swigregister(*args, **kwargs): ...
def MSceneMessage_addCallback(*args, **kwargs): ...
def MFnNonExtendedLight_swigregister(*args, **kwargs): ...
def MScriptUtil_setFloat4ArrayItem(*args, **kwargs): ...
def MFnCompoundAttribute_className(*args, **kwargs): ...
def charPtr_frompointer(*args, **kwargs): ...
def MPolyMessage_addPolyTopologyChangedCallback(*args, **kwargs): ...
def MItSelectionList_swigregister(*args, **kwargs): ...
def MFileIO_saveReference(*args, **kwargs): ...
def MItSubdEdge_className(*args, **kwargs): ...
def MProfiler_eventBegin(*args, **kwargs): ...
def MGlobal_clearSelectionList(*args, **kwargs): ...
def MContainerMessage_className(*args, **kwargs): ...
def MGlobal_addToModelAt(*args, **kwargs): ...
def MFnSubdNames_path(*args, **kwargs): ...
def MScriptUtil_setFloat3ArrayItem(*args, **kwargs): ...
def MFnSubdNames_baseFaceIdFromIndex(*args, **kwargs): ...
def MFnComponent_className(*args, **kwargs): ...
def MFnSubd_className(*args, **kwargs): ...
def MFnExpression_className(*args, **kwargs): ...
def MGlobal_displayError(*args, **kwargs): ...
def MCommandResult_className(*args, **kwargs): ...
def MTrimBoundaryArray_swigregister(*args, **kwargs): ...
def boolPtr_swigregister(*args, **kwargs): ...
def MGlobal_mayaVersion(*args, **kwargs): ...
def createCharRef(): ...
def MGlobal_setActiveSelectionList(*args, **kwargs): ...
def MFloatArray_className(*args, **kwargs): ...
def MNamespace_renameNamespace(*args, **kwargs): ...
def MGlobal_isZAxisUp(*args, **kwargs): ...
def MDistance_uiToInternal(*args, **kwargs): ...
def MFnFloatArrayData_className(*args, **kwargs): ...
def MFileIO_getReferenceConnectionsBroken(*args, **kwargs): ...
def MFnNumericData_swigregister(*args, **kwargs): ...
def MScriptUtil_swigregister(*args, **kwargs): ...
def MItDependencyGraph_className(*args, **kwargs): ...
def MTimerMessage_addTimerCallback(*args, **kwargs): ...
def MNodeMessage_addNodeAboutToDeleteCallback(*args, **kwargs): ...
def array2dDouble_swigregister(*args, **kwargs): ...
def MCommandMessage_addProcCallback(*args, **kwargs): ...
def MWeight_swigregister(*args, **kwargs): ...
def MProfiler_getEventDuration(*args, **kwargs): ...
def MProfiler_resetRecording(*args, **kwargs): ...
def MInt64Array_swigregister(*args, **kwargs): ...
def MDGContext_swigregister(*args, **kwargs): ...
def MFnNumericData_className(*args, **kwargs): ...
def MFnSubdNames_levelOneFaceIdFromIndex(*args, **kwargs): ...
def MEvaluationManager_evaluationInExecution(*args, **kwargs): ...
def MFileIO_beforeReferenceFilename(*args, **kwargs): ...
def MArgList_swigregister(*args, **kwargs): ...
def MDagMessage_addInstanceRemovedCallback(*args, **kwargs): ...
def MScriptUtil_setDoubleArray(*args, **kwargs): ...
def MCacheConfigRuleRegistry_swigregister(*args, **kwargs): ...
def MMessageNode_swigregister(*args, **kwargs): ...
def MScriptUtil_setShort4ArrayItem(*args, **kwargs): ...
def MMessage_swigregister(*args, **kwargs): ...
def MScriptUtil_setDouble2ArrayItem(*args, **kwargs): ...
def MFnNurbsSurface_swigregister(*args, **kwargs): ...
def MScriptUtil_getDoubleArrayItem(*args, **kwargs): ...
def MFnStringArrayData_swigregister(*args, **kwargs): ...
def MCameraSetMessage_addCameraLayerCallback(*args, **kwargs): ...
def MFnDoubleIndexedComponent_swigregister(*args, **kwargs): ...
def MEvaluationNode_swigregister(*args, **kwargs): ...
def MMessage_registeringCallableScriptNewAPI(*args, **kwargs): ...
def MFileIO_cleanReference(*args, **kwargs): ...
def MFnFloatArrayData_swigregister(*args, **kwargs): ...
def MFnMesh_autoUniformGridParams(*args, **kwargs): ...
def MRenderPassRegistry_registerRenderPassDefinition(*args, **kwargs): ...
def MFnAssembly_getTopLevelAssemblies(*args, **kwargs): ...
def MFnLatticeData_swigregister(*args, **kwargs): ...
def MContainerMessage_addBoundAttrCallback(*args, **kwargs): ...
def MSceneMessage_addStringArrayCallback(*args, **kwargs): ...
def MModelMessage_addBeforeDuplicateCallback(*args, **kwargs): ...
def MDataHandle_className(*args, **kwargs): ...
def MFnSingleIndexedComponent_className(*args, **kwargs): ...
def MSelectionMask_getSelectionTypePriority(*args, **kwargs): ...
def MEdit_swigregister(*args, **kwargs): ...
def MFileIO_newFile(*args, **kwargs): ...
def MProfiler_setCategoryRecording(*args, **kwargs): ...
def MFnMessageAttribute_className(*args, **kwargs): ...
def MArrayDataHandle_swigregister(*args, **kwargs): ...
def MCacheConfigRuleRegistry_className(*args, **kwargs): ...
def MMessage_removeCallback(*args, **kwargs): ...
def doublePtr_swigregister(*args, **kwargs): ...
def MGlobal_executeCommandStringResult(*args, **kwargs): ...
def MLockMessage_className(*args, **kwargs): ...
def MNamespace_removeNamespace(*args, **kwargs): ...
def MFnReference_swigregister(*args, **kwargs): ...
def MFnSubdNames_nonBaseFaceEdges(*args, **kwargs): ...
def MDistance_internalToUI(*args, **kwargs): ...
def MFileIO_getReferenceConnectionsMade(*args, **kwargs): ...
def MGlobal_stopErrorLogging(*args, **kwargs): ...
def createShortRef(): ...
def MTimer_swigregister(*args, **kwargs): ...
def MCommandMessage_className(*args, **kwargs): ...
def MDagMessage_addChildRemovedCallback(*args, **kwargs): ...
def MGlobal_selectCommand(*args, **kwargs): ...
def shortPtr_frompointer(*args, **kwargs): ...
def MGlobal_executeCommandOnIdle(*args, **kwargs): ...
def MProfiler_categoryRecording(*args, **kwargs): ...
def MEvaluationManager_evaluationManagerActive(*args, **kwargs): ...
def MFileIO_beforeExportFilename(*args, **kwargs): ...
def MUuid_className(*args, **kwargs): ...
def MArgList_className(*args, **kwargs): ...
def MUserEventMessage_swigregister(*args, **kwargs): ...
def MStreamUtils_readChar(*args, **kwargs): ...
def MFileIO_saveAs(*args, **kwargs): ...
def MCacheConfigRuleRegistry_registeringCallableScript(*args, **kwargs): ...
def MFnMessageAttribute_swigregister(*args, **kwargs): ...
def MDagMessage_swigregister(*args, **kwargs): ...
def MNodeMessage_addAttributeAddedOrRemovedCallback(*args, **kwargs): ...
def MProfiler_loadRecording(*args, **kwargs): ...
def MDGMessage_swigregister(*args, **kwargs): ...
def MProfilingScope_swigregister(*args, **kwargs): ...
def MEvaluationNode_className(*args, **kwargs): ...
def MFileIO_getReferenceFileByNode(*args, **kwargs): ...
def MFnMesh_uniformGridParams(*args, **kwargs): ...
def MScriptUtil_createFloatMatrixFromList(*args, **kwargs): ...
def MContainerMessage_addPublishAttrCallback(*args, **kwargs): ...
def MFnArrayAttrsData_className(*args, **kwargs): ...
def MScriptUtil_getDouble4ArrayItem(*args, **kwargs): ...
def MDGContext_className(*args, **kwargs): ...
def MItMeshEdge_className(*args, **kwargs): ...
def MFileIO_getFileTypes(*args, **kwargs): ...
def MDagMessage_addWorldMatrixModifiedCallback(*args, **kwargs): ...
def MGlobal_displayWarning(*args, **kwargs): ...
def MGlobal_getAbsolutePathToResources(*args, **kwargs): ...
def MDagMessage_className(*args, **kwargs): ...
def _swig_repr(self): ...
def MFnLayeredShader_className(*args, **kwargs): ...
def MFnArrayAttrsData_swigregister(*args, **kwargs): ...
def MNamespace_parentNamespace(*args, **kwargs): ...
def MFnReference_setIgnoreReferenceEdits(*args, **kwargs): ...
def MSelectionList_swigregister(*args, **kwargs): ...
def MDistance_internalUnit(*args, **kwargs): ...
def MStreamUtils_stdErrorStream(*args, **kwargs): ...
def MEulerRotation_decompose(*args, **kwargs): ...
def MFileIO_getReferenceNodes(*args, **kwargs): ...
def MGlobal_errorLoggingIsOn(*args, **kwargs): ...
def MConnectDisconnectAttrEdit_swigregister(*args, **kwargs): ...
def MFloatVectorArray_swigregister(*args, **kwargs): ...
def uCharPtr_swigregister(*args, **kwargs): ...
def MFnTransform_className(*args, **kwargs): ...
def MCommandMessage_addCommandOutputFilterCallback(*args, **kwargs): ...
def MDagMessage_addChildAddedDagPathCallback(*args, **kwargs): ...
def MStreamUtils_readFloat(*args, **kwargs): ...
def MModelMessage_addNodeAddedToModelCallback(*args, **kwargs): ...
def MFnSubdNames_levelOneFaceIndexFromId(*args, **kwargs): ...
def MEvaluationManager_graphConstructionActive(*args, **kwargs): ...
def MFileIO_beforeSaveFilename(*args, **kwargs): ...
def MNamespace_currentNamespace(*args, **kwargs): ...
def MFloatPointArray_swigregister(*args, **kwargs): ...
def MStreamUtils_writeDouble(*args, **kwargs): ...
def MFileIO_beforeReferenceUserFileTranslator(*args, **kwargs): ...
def MGlobal_setErrorLogPathName(*args, **kwargs): ...
def MObjectSetMessage_className(*args, **kwargs): ...
def MGlobal_getAssociatedSets(*args, **kwargs): ...
def MItSubdFace_swigregister(*args, **kwargs): ...
def MMatrix_swigregister(*args, **kwargs): ...
def MGlobal_setMiscSelectionMask(*args, **kwargs): ...
def MFnComponentListData_swigregister(*args, **kwargs): ...
def MProfilingScope_className(*args, **kwargs): ...
def MScriptUtil_setFloatArray(*args, **kwargs): ...
def MFileIO_unloadReferenceByNode(*args, **kwargs): ...
def MRenderPassRegistry_getRenderPassDefinition(*args, **kwargs): ...
def MIntArray_swigregister(*args, **kwargs): ...
def MAttributeSpec_swigregister(*args, **kwargs): ...
def MNodeMessage_addNodeDirtyCallback(*args, **kwargs): ...
def MFnAssembly_className(*args, **kwargs): ...
def MConditionMessage_swigregister(*args, **kwargs): ...
def MPointOnMesh_swigregister(*args, **kwargs): ...
def MMatrixArray_swigregister(*args, **kwargs): ...
def MCacheConfigRuleRegistry_setRegisteringCallableScript(*args, **kwargs): ...
def MProfiler_className(*args, **kwargs): ...
def MFnSubdData_swigregister(*args, **kwargs): ...
def MPolyMessage_className(*args, **kwargs): ...
def MFnEnumAttribute_swigregister(*args, **kwargs): ...
def MFnAmbientLight_swigregister(*args, **kwargs): ...
def MFileIO_fileType(*args, **kwargs): ...
def MGlobal_displayInfo(*args, **kwargs): ...
def MAngle_internalUnit(*args, **kwargs): ...
def MScriptUtil_createFloatArrayFromList(*args, **kwargs): ...
def MMessage_registeringCallableScript(*args, **kwargs): ...
def MScriptUtil_getFloat2ArrayItem(*args, **kwargs): ...
def MLockMessage_setNodeLockDAGQueryCallback(*args, **kwargs): ...
def MScriptUtil_setUint2ArrayItem(*args, **kwargs): ...
def MFnLambertShader_className(*args, **kwargs): ...
def MFnPhongShader_swigregister(*args, **kwargs): ...
def MFnExpression_swigregister(*args, **kwargs): ...
def MGlobal_getFunctionSetList(*args, **kwargs): ...
def MGlobal_startErrorLogging(*args, **kwargs): ...
def MConnectDisconnectAttrEdit_className(*args, **kwargs): ...
def MFnPhongEShader_swigregister(*args, **kwargs): ...
def MFloatVectorArray_className(*args, **kwargs): ...
def uCharPtr_frompointer(*args, **kwargs): ...
def MFnIntArrayData_swigregister(*args, **kwargs): ...
def MCommandMessage_addCommandOutputCallback(*args, **kwargs): ...
def MDagMessage_addChildAddedCallback(*args, **kwargs): ...
def MFnMatrixAttribute_swigregister(*args, **kwargs): ...
def MDGContext_current(*args, **kwargs): ...
def MItMeshPolygon_className(*args, **kwargs): ...
def MProfiler_getCategoryIndex(*args, **kwargs): ...
def MFnLayeredShader_swigregister(*args, **kwargs): ...
def MGlobal_miscSelectionMask(*args, **kwargs): ...
def MMessage_setRegisteringCallableScriptNewAPI(*args, **kwargs): ...
def MFloatPointArray_className(*args, **kwargs): ...
def MStreamUtils_writeFloat(*args, **kwargs): ...
def MProfiler_getEventCategory(*args, **kwargs): ...
def MItSubdFace_className(*args, **kwargs): ...
def MMatrix_className(*args, **kwargs): ...
def MRenderPassDef_swigregister(*args, **kwargs): ...
def MNodeClass_swigregister(*args, **kwargs): ...
def charRefValue(ptr): ...
def MSceneMessage_addNamespaceRenamedCallback(*args, **kwargs): ...
def MScriptUtil_setShortArray(*args, **kwargs): ...
def MGlobal_getPreselectionHiliteList(*args, **kwargs): ...
def MNodeMessage_className(*args, **kwargs): ...
def MFloatVector_swigregister(*args, **kwargs): ...
def MColor_swigregister(*args, **kwargs): ...
def MGlobal_getRichSelection(*args, **kwargs): ...
def MGlobal_selectionMethod(*args, **kwargs): ...
def MGlobal_trackSelectionOrderEnabled(*args, **kwargs): ...
def MDGModifier_swigregister(*args, **kwargs): ...
def MGlobal_deleteNode(*args, **kwargs): ...
def MFnReflectShader_swigregister(*args, **kwargs): ...
def MScriptUtil_getUcharArrayItem(*args, **kwargs): ...
def MArrayDataBuilder_swigregister(*args, **kwargs): ...
def MGlobal_upAxis(*args, **kwargs): ...
def MUserEventMessage_postUserEvent(*args, **kwargs): ...
def uIntPtr_swigregister(*args, **kwargs): ...
def MArrayDataHandle_className(*args, **kwargs): ...
def MNodeMessage_addAttributeChangedCallback(*args, **kwargs): ...
def MPointArray_swigregister(*args, **kwargs): ...
def MFileIO_exportSelectedAnimFromReference(*args, **kwargs): ...
def MLockMessage_setNodeLockQueryCallback(*args, **kwargs): ...
def MNamespace_getNamespaces(*args, **kwargs): ...
def MVectorArray_className(*args, **kwargs): ...
def MProfiler_getBufferSize(*args, **kwargs): ...
def MPolyMessage_swigregister(*args, **kwargs): ...
def MFileIO_getReferences(*args, **kwargs): ...
def MGlobal_errorLogPathName(*args, **kwargs): ...
def MFloatMatrix_className(*args, **kwargs): ...
def MScriptUtil_setFloat(*args, **kwargs): ...
def MItDependencyGraph_swigregister(*args, **kwargs): ...
def MScriptUtil_getInt3ArrayItem(*args, **kwargs): ...
def MCommandMessage_addCommandCallback(*args, **kwargs): ...
def MDagMessage_addParentRemovedDagPathCallback(*args, **kwargs): ...
def MFnNurbsSurface_className(*args, **kwargs): ...
def MScriptUtil_getUint4ArrayItem(*args, **kwargs): ...
def MNamespace_swigregister(*args, **kwargs): ...
def MFnDoubleArrayData_className(*args, **kwargs): ...
def MFileIO_beforeOpenFilename(*args, **kwargs): ...
def MRampAttribute_className(*args, **kwargs): ...
def MStreamUtils_writeInt(*args, **kwargs): ...
def MCacheConfigRuleRegistry_unregisterFilter(*args, **kwargs): ...
def MFnLatticeData_className(*args, **kwargs): ...
def MFileIO_resetError(*args, **kwargs): ...
def MRichSelection_swigregister(*args, **kwargs): ...
def MFnSingleIndexedComponent_swigregister(*args, **kwargs): ...
def intPtr_frompointer(*args, **kwargs): ...
def MSceneMessage_addReferenceCallback(*args, **kwargs): ...
def MFnMatrixData_className(*args, **kwargs): ...
def MDGMessage_addNodeChangeUuidCheckCallback(*args, **kwargs): ...
def MScriptUtil_getDouble2ArrayItem(*args, **kwargs): ...
def MFnTripleIndexedComponent_className(*args, **kwargs): ...
def MUuid_swigregister(*args, **kwargs): ...
def MFileIO_loadReferenceByNode(*args, **kwargs): ...
def MRenderPassDef_className(*args, **kwargs): ...
def MSyntax_className(*args, **kwargs): ...
def MArrayDataBuilder_className(*args, **kwargs): ...
def array4dFloat_swigregister(*args, **kwargs): ...
def MGlobal_setPreselectionHiliteList(*args, **kwargs): ...
def MFnSubdNames_levelOneFaceIdFromLong(*args, **kwargs): ...
def MFnData_swigregister(*args, **kwargs): ...
def createUIntRef(): ...
def MFnPhongEShader_className(*args, **kwargs): ...
def MSpace_swigregister(*args, **kwargs): ...
def MFnDirectionalLight_className(*args, **kwargs): ...
def MFnUint64SingleIndexedComponent_swigregister(*args, **kwargs): ...
def MDistance_uiUnit(*args, **kwargs): ...
def MEdit_className(*args, **kwargs): ...
def MFloatPoint_className(*args, **kwargs): ...
def MAttributePattern_swigregister(*args, **kwargs): ...
def MGlobal_removeOptionVar(*args, **kwargs): ...
def MFnVolumeLight_swigregister(*args, **kwargs): ...
def MAngle_setInternalUnit(*args, **kwargs): ...
def intPtr_swigregister(*args, **kwargs): ...
def MItSurfaceCV_swigregister(*args, **kwargs): ...
def MNamespace_setCurrentNamespace(*args, **kwargs): ...
def MFnNonExtendedLight_className(*args, **kwargs): ...
def MGlobal_isYAxisUp(*args, **kwargs): ...
def floatPtr_frompointer(*args, **kwargs): ...
def MFnUint64SingleIndexedComponent_className(*args, **kwargs): ...
def MFileIO_exportAsReference(*args, **kwargs): ...
def MUserEventMessage_deregisterUserEvent(*args, **kwargs): ...
def MFnMesh_className(*args, **kwargs): ...
def MArgDatabase_swigregister(*args, **kwargs): ...
def MAttributePatternArray_swigregister(*args, **kwargs): ...
def MFnAssembly_swigregister(*args, **kwargs): ...
def MFnMesh_componentTypeName(*args, **kwargs): ...
def MDagMessage_addParentRemovedCallback(*args, **kwargs): ...
def MTransformationMatrix_className(*args, **kwargs): ...
def MProfiler_getEventTime(*args, **kwargs): ...
def MProfiler_eventDataAvailable(*args, **kwargs): ...
def MFnSubdNames_baseFaceIndexFromId(*args, **kwargs): ...
def MFnGenericAttribute_className(*args, **kwargs): ...
def MGlobal_select(*args, **kwargs): ...
def MFnNurbsCurveData_className(*args, **kwargs): ...
def MRampAttribute_createRamp(*args, **kwargs): ...
def MScriptUtil_setBool(*args, **kwargs): ...
def MStreamUtils_writeCharBuffer(*args, **kwargs): ...
def MCacheConfigRuleRegistry_registerFilter(*args, **kwargs): ...
def MScriptUtil_setInt4ArrayItem(*args, **kwargs): ...
def MDistance_setUIUnit(*args, **kwargs): ...
def MItGeometry_swigregister(*args, **kwargs): ...
def MObjectSetMessage_swigregister(*args, **kwargs): ...
def MDGMessage_addPreConnectionCallback(*args, **kwargs): ...
def MProfiler_swigregister(*args, **kwargs): ...
def MNodeMessage_addUuidChangedCallback(*args, **kwargs): ...
def MScriptUtil_getUchar(*args, **kwargs): ...
def MFileIO_loadReference(*args, **kwargs): ...
def MItDag_className(*args, **kwargs): ...
def MItEdits_swigregister(*args, **kwargs): ...
def MFnDagNode_swigregister(*args, **kwargs): ...
def MConditionMessage_className(*args, **kwargs): ...
def MSceneMessage_addCheckFileCallback(*args, **kwargs): ...
def MNodeMessage_swigregister(*args, **kwargs): ...
def createDoubleRef(): ...
def MPlugArray_swigregister(*args, **kwargs): ...
def MFnSubdData_className(*args, **kwargs): ...
def MCameraMessage_swigregister(*args, **kwargs): ...
def MScriptUtil_getBoolArrayItem(*args, **kwargs): ...
def doublePtr_frompointer(*args, **kwargs): ...
def MAttributePattern_className(*args, **kwargs): ...
def MGlobal_setTrackSelectionOrderEnabled(*args, **kwargs): ...
def MItSurfaceCV_className(*args, **kwargs): ...
def MFnContainerNode_className(*args, **kwargs): ...
def MFnAttribute_swigregister(*args, **kwargs): ...
def MPointOnNurbs_swigregister(*args, **kwargs): ...
def MFnSubdNames_nonBaseFaceVertices(*args, **kwargs): ...
def MFnSphereData_className(*args, **kwargs): ...
def MDagPath_getAllPathsTo(*args, **kwargs): ...
def MProfiler_removeCategory(*args, **kwargs): ...
def MFnTypedAttribute_swigregister(*args, **kwargs): ...
def MFnNonAmbientLight_swigregister(*args, **kwargs): ...
def MFileIO_exportSelectedAnim(*args, **kwargs): ...
def MArgDatabase_className(*args, **kwargs): ...
def MAttributePatternArray_className(*args, **kwargs): ...
def MFnLight_className(*args, **kwargs): ...
def MDagMessage_addParentAddedDagPathCallback(*args, **kwargs): ...
def MGlobal_setDisplayCVs(*args, **kwargs): ...
def MGlobal_setComponentSelectionMask(*args, **kwargs): ...
def MNodeClass_className(*args, **kwargs): ...
def MGlobal_sourceFile(*args, **kwargs): ...
def MPlane_swigregister(*args, **kwargs): ...
def MFnSubdNames_baseFaceIndex(*args, **kwargs): ...
def MURI_className(*args, **kwargs): ...
def MEventMessage_className(*args, **kwargs): ...
def MUserEventMessage_registerUserEvent(*args, **kwargs): ...
def MGlobal_unselectByName(*args, **kwargs): ...
def MFnReference_ignoreReferenceEdits(*args, **kwargs): ...
def array4dInt_swigregister(*args, **kwargs): ...
def MItDependencyNodes_swigregister(*args, **kwargs): ...
def MTypeId_swigregister(*args, **kwargs): ...
def MNodeMessage_addKeyableChangeOverride(*args, **kwargs): ...
def MCommandResult_swigregister(*args, **kwargs): ...
def MDagMessage_addInstanceRemovedDagPathCallback(*args, **kwargs): ...
def MFileIO_unloadReference(*args, **kwargs): ...
def MProfiler_getDescription(*args, **kwargs): ...
def MFnMatrixArrayData_swigregister(*args, **kwargs): ...
def MProfiler_saveRecording(*args, **kwargs): ...
def MDGMessage_addConnectionCallback(*args, **kwargs): ...
def MItCurveCV_swigregister(*args, **kwargs): ...
def MProfiler_getAllCategories(*args, **kwargs): ...
def MScriptUtil_getChar(*args, **kwargs): ...
def MFileIO_setError(*args, **kwargs): ...
def MFnNurbsCurveData_swigregister(*args, **kwargs): ...
def MAngle_swigregister(*args, **kwargs): ...
def MSceneMessage_swigregister(*args, **kwargs): ...
def MFloatMatrix_swigregister(*args, **kwargs): ...
def MScriptUtil_createMatrixFromList(*args, **kwargs): ...
def MMessage_removeCallbacks(*args, **kwargs): ...
def MScriptUtil_getShort3ArrayItem(*args, **kwargs): ...
def MFnData_className(*args, **kwargs): ...
def MScriptUtil_getFloat3ArrayItem(*args, **kwargs): ...
def MFnSet_swigregister(*args, **kwargs): ...
def MUintArray_swigregister(*args, **kwargs): ...
def MLockMessage_setPlugLockQueryCallback(*args, **kwargs): ...
def MScriptUtil_getUshortArrayItem(*args, **kwargs): ...
def MFnBase_swigregister(*args, **kwargs): ...
def MGlobal_setZAxisUp(*args, **kwargs): ...
def MRenderPassRegistry_swigregister(*args, **kwargs): ...
def MAttributeSpec_className(*args, **kwargs): ...
def createUCharRef(): ...
def MGlobal_getActiveSelectionList(*args, **kwargs): ...
def MQuaternion_swigregister(*args, **kwargs): ...
def createIntRef(): ...
def MURI_isValidURI(*args, **kwargs): ...
def MModelMessage_addCallback(*args, **kwargs): ...
def MCameraSetMessage_addCameraChangedCallback(*args, **kwargs): ...
def MDagPath_swigregister(*args, **kwargs): ...
def MPoint_swigregister(*args, **kwargs): ...
def MSetAttrEdit_swigregister(*args, **kwargs): ...
def MFileIO_exportAnim(*args, **kwargs): ...
def MGlobal_defaultErrorLogPathName(*args, **kwargs): ...
def MSelectionMask_swigregister(*args, **kwargs): ...
def MTesselationParams_className(*args, **kwargs): ...
def MDoubleArray_swigregister(*args, **kwargs): ...
def MDagMessage_addParentAddedCallback(*args, **kwargs): ...
def createFloatRef(): ...
def MFnNurbsSurfaceData_swigregister(*args, **kwargs): ...
def MProfiler_setBufferSize(*args, **kwargs): ...
def MFnPointArrayData_className(*args, **kwargs): ...
def MFnSubdNames_toSelectionIndices(*args, **kwargs): ...
def MModelMessage_addAfterDuplicateCallback(*args, **kwargs): ...
def MNamespace_namespaceExists(*args, **kwargs): ...
def MFnCameraSet_swigregister(*args, **kwargs): ...
def MFnUInt64ArrayData_className(*args, **kwargs): ...
def MEventMessage_getEventNames(*args, **kwargs): ...
def MFileIO_setMustRenameToSave(*args, **kwargs): ...
def MFnTripleIndexedComponent_swigregister(*args, **kwargs): ...
def MStreamUtils_stdOutStream(*args, **kwargs): ...
def MItDependencyNodes_className(*args, **kwargs): ...
def MObjectArray_swigregister(*args, **kwargs): ...
def MTypeId_className(*args, **kwargs): ...
def MMeshIsectAccelParams_swigregister(*args, **kwargs): ...
def MSetAttrEdit_className(*args, **kwargs): ...
def MGlobal_closeErrorLog(*args, **kwargs): ...
def MItDag_swigregister(*args, **kwargs): ...
def MFnSet_className(*args, **kwargs): ...
def MDGMessage_addNodeRemovedCallback(*args, **kwargs): ...
def MFnSubdNames_swigregister(*args, **kwargs): ...
def MUserData_className(*args, **kwargs): ...
def MFnUnitAttribute_swigregister(*args, **kwargs): ...
def MFnMatrixArrayData_className(*args, **kwargs): ...
def MMessage_stopRegisteringCallableScript(*args, **kwargs): ...
def MTimeArray_className(*args, **kwargs): ...
def doubleRefValue(ptr): ...
def MUint64Array_className(*args, **kwargs): ...
def MConditionMessage_getConditionNames(*args, **kwargs): ...
def MFnGenericAttribute_swigregister(*args, **kwargs): ...
def MItSubdVertex_swigregister(*args, **kwargs): ...
def MProfiler_getCategoryInfo(*args, **kwargs): ...
def MProfiler_getCPUId(*args, **kwargs): ...
def MProfiler_getNumberOfCPUs(*args, **kwargs): ...
def MFnCompoundAttribute_swigregister(*args, **kwargs): ...
def MEvaluationNodeIterator_swigregister(*args, **kwargs): ...
def MGlobal_setYAxisUp(*args, **kwargs): ...
def MFnNurbsCurve_className(*args, **kwargs): ...
def MScriptUtil_getDouble(*args, **kwargs): ...
def MSyntax_swigregister(*args, **kwargs): ...
def MFnAnisotropyShader_swigregister(*args, **kwargs): ...
def MScriptUtil_setIntArray(*args, **kwargs): ...
def MScriptUtil_getInt(*args, **kwargs): ...
def MScriptUtil_getUint2ArrayItem(*args, **kwargs): ...
def MNamespace_addNamespace(*args, **kwargs): ...
def MDistance_setInternalUnit(*args, **kwargs): ...
def MGlobal_setHiliteList(*args, **kwargs): ...
def MDagPath_getAPathTo(*args, **kwargs): ...
def MPoint_className(*args, **kwargs): ...
def MFnUInt64ArrayData_swigregister(*args, **kwargs): ...
def MRampAttribute_createColorRamp(*args, **kwargs): ...
def MFnMeshData_swigregister(*args, **kwargs): ...
def MItMeshFaceVertex_className(*args, **kwargs): ...
def MIffTag_swigregister(*args, **kwargs): ...
def MFnPluginData_className(*args, **kwargs): ...
def MFnDependencyNode_enableDGTiming(*args, **kwargs): ...
def MMessage_className(*args, **kwargs): ...
def MCurveAttribute_swigregister(*args, **kwargs): ...
def MScriptUtil_getFloat4ArrayItem(*args, **kwargs): ...
def MNamespace_makeNamepathAbsolute(*args, **kwargs): ...
def MPlane_className(*args, **kwargs): ...
def MFnSubdNames_toMUint64(*args, **kwargs): ...
def MStreamUtils_writeChar(*args, **kwargs): ...
def MEventMessage_addEventCallback(*args, **kwargs): ...
def MFileIO_mustRenameToSave(*args, **kwargs): ...
def MFileObject_swigregister(*args, **kwargs): ...
def MTesselationParams_swigregister(*args, **kwargs): ...
def MDagMessage_addInstanceAddedDagPathCallback(*args, **kwargs): ...
def MFnSubdNames_levelOneFaceAsLong(*args, **kwargs): ...
def MConditionMessage_getConditionState(*args, **kwargs): ...
def MFnStringArrayData_className(*args, **kwargs): ...
def MDGMessage_addNodeAddedCallback(*args, **kwargs): ...
def MFnSubdNames_className(*args, **kwargs): ...
def MScriptUtil_getUint(*args, **kwargs): ...
def MFileIO_getErrorStatus(*args, **kwargs): ...
def MAngle_className(*args, **kwargs): ...
def MTimerMessage_setSleepCallback(*args, **kwargs): ...
def MNamespace_className(*args, **kwargs): ...
def MUint64Array_swigregister(*args, **kwargs): ...
def MConditionMessage_addConditionCallback(*args, **kwargs): ...
def MItSubdVertex_className(*args, **kwargs): ...
def MGlobal_selectFromScreen(*args, **kwargs): ...
def MUintArray_className(*args, **kwargs): ...
def MGlobal_isSelected(*args, **kwargs): ...
def shortPtr_swigregister(*args, **kwargs): ...
def MGlobal_removeFromModel(*args, **kwargs): ...
def MFnStringData_swigregister(*args, **kwargs): ...
def MCameraMessage_className(*args, **kwargs): ...
def MFnTypedAttribute_className(*args, **kwargs): ...
def MEvaluationNodeIterator_className(*args, **kwargs): ...
def MFileIO_swigregister(*args, **kwargs): ...
def MFnMesh_clearGlobalIntersectionAcceleratorInfo(*args, **kwargs): ...
def array2dFloat_swigregister(*args, **kwargs): ...
def array3dDouble_swigregister(*args, **kwargs): ...
def MAddRemoveAttrEdit_className(*args, **kwargs): ...
def MPointArray_className(*args, **kwargs): ...
def MFnNumericAttribute_swigregister(*args, **kwargs): ...
def MModelMessage_swigregister(*args, **kwargs): ...
def MProfiler_getThreadDuration(*args, **kwargs): ...
def MCameraSetMessage_swigregister(*args, **kwargs): ...
def MDagPath_className(*args, **kwargs): ...
def MProfiler_getEventName(*args, **kwargs): ...
def MFileIO_exportAnimFromReference(*args, **kwargs): ...
def MFn_swigregister(*args, **kwargs): ...
def MFnCamera_swigregister(*args, **kwargs): ...
def MScriptUtil_setShort(*args, **kwargs): ...
def MSelectionMask_deregisterSelectionType(*args, **kwargs): ...
def MScriptUtil_setInt2ArrayItem(*args, **kwargs): ...
def MFnContainerNode_swigregister(*args, **kwargs): ...
def MCurveAttribute_className(*args, **kwargs): ...
def MObjectArray_className(*args, **kwargs): ...
def MNamespace_stripNamespaceFromName(*args, **kwargs): ...
def MMeshSmoothOptions_className(*args, **kwargs): ...
def shortRefValue(ptr): ...
def MFnSubdNames_fromMUint64(*args, **kwargs): ...
def MEulerRotation_swigregister(*args, **kwargs): ...
def MDagMessage_addDagCallback(*args, **kwargs): ...
def MFileIO_isSavingReference(*args, **kwargs): ...
def MFileObject_getResolvedFullName(*args, **kwargs): ...
def MItEdits_className(*args, **kwargs): ...
def MItInstancer_swigregister(*args, **kwargs): ...
def MRichSelection_className(*args, **kwargs): ...
def MDagMessage_addInstanceAddedCallback(*args, **kwargs): ...
def MFnLightDataAttribute_className(*args, **kwargs): ...
def _swig_getattr(self, class_type, name): ...
def MItMeshPolygon_swigregister(*args, **kwargs): ...
def MGlobal_selectByName(*args, **kwargs): ...
def MObjectSetMessage_addSetMembersModifiedCallback(*args, **kwargs): ...
def MFileIO_isReadingFile(*args, **kwargs): ...
def MDGMessage_addForceUpdateCallback(*args, **kwargs): ...
def MItMeshVertex_swigregister(*args, **kwargs): ...
def MFnDoubleIndexedComponent_className(*args, **kwargs): ...
def MFnGeometryData_className(*args, **kwargs): ...
def MScriptUtil_setUint3ArrayItem(*args, **kwargs): ...
def MFileIO_getLastTempFile(*args, **kwargs): ...
def MAngle_uiToInternal(*args, **kwargs): ...
def MSceneMessage_className(*args, **kwargs): ...
def _swig_setattr(self, class_type, name, value): ...
def MComputation_swigregister(*args, **kwargs): ...
def MProfiler_isSignalEvent(*args, **kwargs): ...
def MFnAreaLight_swigregister(*args, **kwargs): ...
def MFnSubdNames_first(*args, **kwargs): ...
def MCameraMessage_addEndManipulationCallback(*args, **kwargs): ...
def MObject_swigregister(*args, **kwargs): ...
def MFnNonAmbientLight_className(*args, **kwargs): ...
def MScriptUtil_getFloatArrayItem(*args, **kwargs): ...
def MFileIO_className(*args, **kwargs): ...
def MFnMesh_globalIntersectionAcceleratorsInfo(*args, **kwargs): ...
def MFnDependencyNode_className(*args, **kwargs): ...
def MFnDagNode_className(*args, **kwargs): ...
def MFileIO_beforeOpenUserFileTranslator(*args, **kwargs): ...
def MFnTransform_swigregister(*args, **kwargs): ...
def MGlobal_getHiliteList(*args, **kwargs): ...
def MPlugArray_className(*args, **kwargs): ...
def MGlobal_setSelectionMode(*args, **kwargs): ...
def MDGModifier_className(*args, **kwargs): ...
def MFnCameraSet_className(*args, **kwargs): ...
def MFileIO_exportAll(*args, **kwargs): ...
def _swig_setattr_nondynamic(self, class_type, name, value, static='1'): ...
def MItGeometry_className(*args, **kwargs): ...
def MSelectionMask_registerSelectionType(*args, **kwargs): ...
def MFnUnitAttribute_className(*args, **kwargs): ...
def MNodeMessage_addNodeDirtyPlugCallback(*args, **kwargs): ...
def MFnContainerNode_getCurrentAsMObject(*args, **kwargs): ...
def MCurveAttribute_createCurve(*args, **kwargs): ...
def MFileIO_beforeSaveUserFileTranslator(*args, **kwargs): ...
def MFnNurbsSurfaceData_className(*args, **kwargs): ...
def MNamespace_getNamespaceFromName(*args, **kwargs): ...
def MPolyMessage_addPolyComponentIdChangedCallback(*args, **kwargs): ...
def MFnPluginData_swigregister(*args, **kwargs): ...
def MProfiler_recordingActive(*args, **kwargs): ...
def MFnSubdNames_corner(*args, **kwargs): ...
def MMeshSmoothOptions_swigregister(*args, **kwargs): ...
def MFileIO_isNewingFile(*args, **kwargs): ...
def MFileObject_isAbsolutePath(*args, **kwargs): ...
def MScriptUtil_setUint(*args, **kwargs): ...
def MItCurveCV_className(*args, **kwargs): ...
def MFnDependencyNode_deallocateAllFlags(*args, **kwargs): ...
def MItInstancer_className(*args, **kwargs): ...
def MFnMesh_swigregister(*args, **kwargs): ...
def MDagMessage_addAllDagChangesDagPathCallback(*args, **kwargs): ...
def MFloatPoint_swigregister(*args, **kwargs): ...
def MFnLambertShader_swigregister(*args, **kwargs): ...
def MFnPointArrayData_swigregister(*args, **kwargs): ...
def MFileIO_currentlyReadingFileVersion(*args, **kwargs): ...
def MFnSubdNames_fromSelectionIndices(*args, **kwargs): ...
def MScriptUtil_getFloat(*args, **kwargs): ...
def uCharRefValue(ptr): ...
def MFileIO_exportType(*args, **kwargs): ...
def MIffFile_swigregister(*args, **kwargs): ...
def MGlobal_customVersion(*args, **kwargs): ...
def MStreamUtils_swigregister(*args, **kwargs): ...
def array3dFloat_swigregister(*args, **kwargs): ...
def MVector_swigregister(*args, **kwargs): ...
def MComputation_className(*args, **kwargs): ...
def MSceneMessage_addCheckCallback(*args, **kwargs): ...
def MMeshIntersector_swigregister(*args, **kwargs): ...
def MFnMesh_componentTypeFromName(*args, **kwargs): ...
def MFnBlinnShader_className(*args, **kwargs): ...
def MCameraMessage_addBeginManipulationCallback(*args, **kwargs): ...
def charPtr_swigregister(*args, **kwargs): ...
def MStreamUtils_readCharBuffer(*args, **kwargs): ...
def MFnVolumeLight_className(*args, **kwargs): ...
def MFileIO_latestMayaFileVersion(*args, **kwargs): ...
def MItSubdEdge_swigregister(*args, **kwargs): ...
def MImageFileInfo_swigregister(*args, **kwargs): ...
def MVectorArray_swigregister(*args, **kwargs): ...
def MFileIO_setCurrentFile(*args, **kwargs): ...
def MScriptUtil_setShort3ArrayItem(*args, **kwargs): ...
def createBoolRef(): ...
def MMatrixArray_className(*args, **kwargs): ...
def MFnAnisotropyShader_className(*args, **kwargs): ...
def MCacheFormatDescription_className(*args, **kwargs): ...
def MFileIO_exportSelected(*args, **kwargs): ...
def MFnMeshData_className(*args, **kwargs): ...
def MAddRemoveAttrEdit_swigregister(*args, **kwargs): ...
def MParentingEdit_className(*args, **kwargs): ...
def MDGMessage_addDelayedTimeChangeRunupCallback(*args, **kwargs): ...
def MTime_swigregister(*args, **kwargs): ...
def MGlobal_resetToDefaultErrorLogPathName(*args, **kwargs): ...
def MGlobal_apiVersion(*args, **kwargs): ...
def MCurveAttribute_createCurveAttr(*args, **kwargs): ...
def MGlobal_componentSelectionMask(*args, **kwargs): ...
def MNamespace_setRelativeNames(*args, **kwargs): ...
def MGlobal_viewFrame(*args, **kwargs): ...
def MAttributePattern_findPattern(*args, **kwargs): ...
def MGlobal_swigregister(*args, **kwargs): ...
def MFileIO_isOpeningFile(*args, **kwargs): ...
def boolPtr_frompointer(*args, **kwargs): ...
def MFnReference_className(*args, **kwargs): ...
def MProfiler_signalEvent(*args, **kwargs): ...
def MScriptUtil_getDouble3ArrayItem(*args, **kwargs): ...
def MFnDependencyNode_deallocateFlag(*args, **kwargs): ...
def MImage_filterExists(*args, **kwargs): ...
def MDagMessage_addAllDagChangesCallback(*args, **kwargs): ...


MAYA_API_VERSION : int
MAYA_APP_VERSION : int
kMFnSubdPointTolerance : float
MVector_kTol : float
MPoint_kTol : float
cvar
kMFnNurbsEpsilon : float
kMFnSubdTolerance : float
kMFnMeshInstanceUnspecified : int
kUnknownParameter : str
kMFnMeshTolerance : float
MTransformationMatrix_kTol : float
MMatrix_kTol : float
kDefaultNodeType : str
MFloatPoint_kTol : float
MFloatMatrix_kTol : float
STRICT : int
kEulerRotationEpsilon : float
MFloatVector_kTol : float
MAYA_CUSTOM_VERSION_CLIENT : str
kMFnMeshPointTolerance : float
MAYA_CUSTOM_VERSION_MAJOR : int
kQuaternionEpsilon : float
MAYA_CUSTOM_VERSION : int

