from typing import Any, Container, Dict, Generic, Iterable, Iterator, List, Optional, Set, Tuple, TypeVar, Union
import maya.mel as mel
import maya.app.renderSetup.common.utils as commonUtils
import maya.cmds as cmds
import maya.api.OpenMaya as OpenMaya
import collections
from . import item as itemModel


if False:
    from typing import Dict, List, Tuple, Union, Optional

def pluginLights(): ...
def getAllAttributes(): ...
def isValidLightShapeObject(mayaObj): ...
def isValidLightTransformObject(mayaObj): ...
def _getAttributesFromViewTemplate(nodeType, viewName): ...
def isLight(mayaObj): ...
def lights(): ...
def excludeFromUI(nodeType): ...
def findLightShapeObject(transformObj): ...
def _getDataTypeFromTemplateType(typeName): ...
def isLightEditorItem(mayaObj): ...
def getIcon(lightType): ...
def getAttributesForLightType(lightType): ...
def mayaLights(): ...
def getCreateCmd(lightType): ...
def _isPluginLight(nodeType): ...
def rebuild(): ...
def findAllLightTransforms(): ...
def findLightTransformObject(shapeObj): ...


mayaLightTypes : list
pluginLightTypes : list
uiExcludedLightTypes : list
lightTypes : list
attributesForLightType : dict
allLightAttributes : collections.OrderedDict
lightConstructionData : dict
dataTypeConversionTable : dict

