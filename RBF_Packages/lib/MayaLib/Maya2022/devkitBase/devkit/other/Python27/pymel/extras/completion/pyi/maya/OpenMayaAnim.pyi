from typing import Any, Container, Dict, Generic, Iterable, Iterator, List, Optional, Set, Tuple, TypeVar, Union
import weakref
from . import _OpenMayaAnim
from . import OpenMaya


from __builtin__ import object as _object
from __builtin__ import property as _swig_property


if False:
    from typing import Dict, List, Tuple, Union, Optional

class MAnimMessage(OpenMaya.MMessage):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def addAnimCurveEditedCallback(*args, **kwargs): ...
    @staticmethod
    def addAnimKeyframeEditCheckCallback(*args, **kwargs): ...
    @staticmethod
    def addAnimKeyframeEditedCallback(*args, **kwargs): ...
    @staticmethod
    def addDisableImplicitControlCallback(*args, **kwargs): ...
    @staticmethod
    def addNodeAnimKeyframeEditedCallback(*args, **kwargs): ...
    @staticmethod
    def addPostBakeResultsCallback(*args, **kwargs): ...
    @staticmethod
    def addPreBakeResultsCallback(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def flushAnimKeyframeEditedCallbacks(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnIkJoint(OpenMaya.MFnTransform):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def getDegreesOfFreedom(self, *args): ...
    def getOrientation(self, *args): ...
    def getPreferedAngle(self, *args): ...
    def getPreferredAngle(self, *args): ...
    def getScaleOrientation(self, *args): ...
    def getSegmentScale(self, *args): ...
    def getStiffness(self, *args): ...
    def hikJointName(self, *args): ...
    def maxRotateDampXRange(self, *args): ...
    def maxRotateDampXStrength(self, *args): ...
    def maxRotateDampYRange(self, *args): ...
    def maxRotateDampYStrength(self, *args): ...
    def maxRotateDampZRange(self, *args): ...
    def maxRotateDampZStrength(self, *args): ...
    def minRotateDampXRange(self, *args): ...
    def minRotateDampXStrength(self, *args): ...
    def minRotateDampYRange(self, *args): ...
    def minRotateDampYStrength(self, *args): ...
    def minRotateDampZRange(self, *args): ...
    def minRotateDampZStrength(self, *args): ...
    def setDegreesOfFreedom(self, *args): ...
    def setMaxRotateDampXRange(self, *args): ...
    def setMaxRotateDampXStrength(self, *args): ...
    def setMaxRotateDampYRange(self, *args): ...
    def setMaxRotateDampYStrength(self, *args): ...
    def setMaxRotateDampZRange(self, *args): ...
    def setMaxRotateDampZStrength(self, *args): ...
    def setMinRotateDampXRange(self, *args): ...
    def setMinRotateDampXStrength(self, *args): ...
    def setMinRotateDampYRange(self, *args): ...
    def setMinRotateDampYStrength(self, *args): ...
    def setMinRotateDampZRange(self, *args): ...
    def setMinRotateDampZStrength(self, *args): ...
    def setOrientation(self, *args): ...
    def setPreferedAngle(self, *args): ...
    def setPreferredAngle(self, *args): ...
    def setScaleOrientation(self, *args): ...
    def setSegmentScale(self, *args): ...
    def setStiffness(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kNone : int
    
    kXAxis : int
    
    kYAxis : int
    
    kZAxis : int


class shortPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MIkHandleGroup(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def checkEffectorAtGoal(self, *args): ...
    def dofCount(self, *args): ...
    def handle(self, *args): ...
    def handleCount(self, *args): ...
    def priority(self, *args): ...
    def setPriority(self, *args): ...
    def setSolverID(self, *args): ...
    def solve(self, *args): ...
    def solverID(self, *args): ...
    def solverPriority(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class uCharPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MAnimCurveChange(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def isInteractive(self, *args): ...
    def redoIt(self, *args): ...
    def setInteractive(self, *args): ...
    def undoIt(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MFnIkHandle(OpenMaya.MFnTransform):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def getEffector(self, *args): ...
    def getStartJoint(self, *args): ...
    def poWeight(self, *args): ...
    def priority(self, *args): ...
    def setEffector(self, *args): ...
    def setPOWeight(self, *args): ...
    def setPriority(self, *args): ...
    def setSolver(self, *args): ...
    def setStartJoint(self, *args): ...
    def setStartJointAndEffector(self, *args): ...
    def setStickiness(self, *args): ...
    def setWeight(self, *args): ...
    def solver(self, *args): ...
    def stickiness(self, *args): ...
    def type(self, *args): ...
    def weight(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kStickyOff : int
    
    kStickyOn : int
    
    kSuperSticky : int


class MFnIkEffector(OpenMaya.MFnTransform):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnLatticeDeformer(OpenMaya.MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addGeometry(self, *args): ...
    def baseLattice(self, *args): ...
    def create(self, *args): ...
    def deformLattice(self, *args): ...
    def getAffectedGeometry(self, *args): ...
    def getDivisions(self, *args): ...
    def removeGeometry(self, *args): ...
    def resetLattice(self, *args): ...
    def setDivisions(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MAnimControl(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def animationEndTime(*args, **kwargs): ...
    @staticmethod
    def animationStartTime(*args, **kwargs): ...
    @staticmethod
    def autoKeyMode(*args, **kwargs): ...
    @staticmethod
    def currentTime(*args, **kwargs): ...
    @staticmethod
    def globalInTangentType(*args, **kwargs): ...
    @staticmethod
    def globalOutTangentType(*args, **kwargs): ...
    @staticmethod
    def isPlaying(*args, **kwargs): ...
    @staticmethod
    def isScrubbing(*args, **kwargs): ...
    @staticmethod
    def maxTime(*args, **kwargs): ...
    @staticmethod
    def minTime(*args, **kwargs): ...
    @staticmethod
    def playBackward(*args, **kwargs): ...
    @staticmethod
    def playForward(*args, **kwargs): ...
    @staticmethod
    def playbackBy(*args, **kwargs): ...
    @staticmethod
    def playbackMode(*args, **kwargs): ...
    @staticmethod
    def playbackSpeed(*args, **kwargs): ...
    @staticmethod
    def setAnimationEndTime(*args, **kwargs): ...
    @staticmethod
    def setAnimationStartEndTime(*args, **kwargs): ...
    @staticmethod
    def setAnimationStartTime(*args, **kwargs): ...
    @staticmethod
    def setAutoKeyMode(*args, **kwargs): ...
    @staticmethod
    def setCurrentTime(*args, **kwargs): ...
    @staticmethod
    def setGlobalInTangentType(*args, **kwargs): ...
    @staticmethod
    def setGlobalOutTangentType(*args, **kwargs): ...
    @staticmethod
    def setMaxTime(*args, **kwargs): ...
    @staticmethod
    def setMinMaxTime(*args, **kwargs): ...
    @staticmethod
    def setMinTime(*args, **kwargs): ...
    @staticmethod
    def setPlaybackBy(*args, **kwargs): ...
    @staticmethod
    def setPlaybackMode(*args, **kwargs): ...
    @staticmethod
    def setPlaybackSpeed(*args, **kwargs): ...
    @staticmethod
    def setViewMode(*args, **kwargs): ...
    @staticmethod
    def setWeightedTangents(*args, **kwargs): ...
    @staticmethod
    def stop(*args, **kwargs): ...
    @staticmethod
    def viewMode(*args, **kwargs): ...
    @staticmethod
    def weightedTangents(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kPlaybackLoop : int
    
    kPlaybackOnce : int
    
    kPlaybackOscillate : int
    
    kPlaybackViewActive : int
    
    kPlaybackViewAll : int


class MFnBlendShapeDeformer(OpenMaya.MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addBaseObject(self, *args): ...
    def addTarget(self, *args): ...
    def create(self, *args): ...
    def envelope(self, *args): ...
    def getBaseObjects(self, *args): ...
    def getTargets(self, *args): ...
    def historyLocation(self, *args): ...
    def numWeights(self, *args): ...
    def origin(self, *args): ...
    def removeTarget(self, *args): ...
    def setEnvelope(self, *args): ...
    def setOrigin(self, *args): ...
    def setWeight(self, *args): ...
    def targetItemIndexList(self, *args): ...
    def type(self, *args): ...
    def weight(self, *args): ...
    def weightIndexList(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kFrontOfChain : int
    
    kLocalOrigin : int
    
    kNormal : int
    
    kObject : int
    
    kOther : int
    
    kPost : int
    
    kTangent : int
    
    kWorldOrigin : int


class charPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MItKeyframe(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def getTangentIn(self, *args): ...
    def getTangentOut(self, *args): ...
    def inTangentType(self, *args): ...
    def isDone(self, *args): ...
    def next(self, *args): ...
    def outTangentType(self, *args): ...
    def reset(self, *args): ...
    def setInTangentType(self, *args): ...
    def setOutTangentType(self, *args): ...
    def setTangentsLocked(self, *args): ...
    def setTime(self, *args): ...
    def setValue(self, *args): ...
    def tangentsLocked(self, *args): ...
    def time(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kTangentAuto : int
    
    kTangentClamped : int
    
    kTangentFast : int
    
    kTangentFixed : int
    
    kTangentFlat : int
    
    kTangentGlobal : int
    
    kTangentLinear : int
    
    kTangentPlateau : int
    
    kTangentSlow : int
    
    kTangentSmooth : int
    
    kTangentStep : int
    
    kTangentStepNext : int


class uIntPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MFnAnimCurve(OpenMaya.MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addKey(self, *args): ...
    def addKeyframe(self, *args): ...
    def addKeys(self, *args): ...
    def addKeysWithTangents(self, *args): ...
    def animCurveType(self, *args): ...
    def create(self, *args): ...
    def evaluate(self, *args): ...
    def find(self, *args): ...
    def findClosest(self, *args): ...
    def getTangent(self, *args): ...
    def inTangentType(self, *args): ...
    def insertKey(self, *args): ...
    def isBreakdown(self, *args): ...
    def isStatic(self, *args): ...
    def isTimeInput(self, *args): ...
    def isUnitlessInput(self, *args): ...
    def isWeighted(self, *args): ...
    def numKeyframes(self, *args): ...
    def numKeys(self, *args): ...
    def outTangentType(self, *args): ...
    def postInfinityType(self, *args): ...
    def preInfinityType(self, *args): ...
    def remove(self, *args): ...
    def setAngle(self, *args): ...
    def setInTangentType(self, *args): ...
    def setIsBreakdown(self, *args): ...
    def setIsWeighted(self, *args): ...
    def setOutTangentType(self, *args): ...
    def setPostInfinityType(self, *args): ...
    def setPreInfinityType(self, *args): ...
    def setTangent(self, *args): ...
    def setTangentTypes(self, *args): ...
    def setTangentsLocked(self, *args): ...
    def setTime(self, *args): ...
    def setUnitlessInput(self, *args): ...
    def setValue(self, *args): ...
    def setWeight(self, *args): ...
    def setWeightsLocked(self, *args): ...
    def tangentsLocked(self, *args): ...
    def time(self, *args): ...
    def timedAnimCurveTypeForPlug(self, *args): ...
    def type(self, *args): ...
    def unitlessAnimCurveTypeForPlug(self, *args): ...
    def unitlessInput(self, *args): ...
    def value(self, *args): ...
    def weightsLocked(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kAnimCurveTA : int
    
    kAnimCurveTL : int
    
    kAnimCurveTT : int
    
    kAnimCurveTU : int
    
    kAnimCurveUA : int
    
    kAnimCurveUL : int
    
    kAnimCurveUT : int
    
    kAnimCurveUU : int
    
    kAnimCurveUnknown : int
    
    kConstant : int
    
    kCycle : int
    
    kCycleRelative : int
    
    kLinear : int
    
    kOscillate : int
    
    kTangentAuto : int
    
    kTangentClamped : int
    
    kTangentCustomEnd : int
    
    kTangentCustomStart : int
    
    kTangentFast : int
    
    kTangentFixed : int
    
    kTangentFlat : int
    
    kTangentGlobal : int
    
    kTangentLinear : int
    
    kTangentPlateau : int
    
    kTangentShared1 : int
    
    kTangentShared2 : int
    
    kTangentShared3 : int
    
    kTangentShared4 : int
    
    kTangentShared5 : int
    
    kTangentShared6 : int
    
    kTangentShared7 : int
    
    kTangentShared8 : int
    
    kTangentSlow : int
    
    kTangentSmooth : int
    
    kTangentStep : int
    
    kTangentStepNext : int
    
    kTangentTypeCount : int


class boolPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MIkSystem(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def findSolver(*args, **kwargs): ...
    @staticmethod
    def getSolvers(*args, **kwargs): ...
    @staticmethod
    def isGlobalSnap(*args, **kwargs): ...
    @staticmethod
    def isGlobalSolve(*args, **kwargs): ...
    @staticmethod
    def setGlobalSnap(*args, **kwargs): ...
    @staticmethod
    def setGlobalSolve(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MAnimUtil(_object):
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def findAnimatablePlugs(*args, **kwargs): ...
    @staticmethod
    def findAnimatedPlugs(*args, **kwargs): ...
    @staticmethod
    def findAnimation(*args, **kwargs): ...
    @staticmethod
    def findAnimationLayers(*args, **kwargs): ...
    @staticmethod
    def findConstraint(*args, **kwargs): ...
    @staticmethod
    def findSetDrivenKeyAnimation(*args, **kwargs): ...
    @staticmethod
    def isAnimated(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MFnGeometryFilter(OpenMaya.MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def deformerSet(self, *args): ...
    def envelope(self, *args): ...
    def getInputGeometry(self, *args): ...
    def getOutputGeometry(self, *args): ...
    def getPathAtIndex(self, *args): ...
    def groupIdAtIndex(self, *args): ...
    def indexForGroupId(self, *args): ...
    def indexForOutputConnection(self, *args): ...
    def indexForOutputShape(self, *args): ...
    def inputShapeAtIndex(self, *args): ...
    def numOutputConnections(self, *args): ...
    def outputShapeAtIndex(self, *args): ...
    def setEnvelope(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnIkSolver(OpenMaya.MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def maxIterations(self, *args): ...
    def setMaxIterations(self, *args): ...
    def setTolerance(self, *args): ...
    def tolerance(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnKeyframeDelta(OpenMaya.MFnBase):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def keyIndex(self, *args): ...
    def paramCurve(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnClip(OpenMaya.MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def createInstancedClip(self, *args): ...
    def createSourceClip(self, *args): ...
    def getAbsolute(self, *args): ...
    def getAbsoluteChannelSettings(self, *args): ...
    def getCycle(self, *args): ...
    def getEnabled(self, *args): ...
    def getMemberAnimCurves(self, *args): ...
    def getPostCycle(self, *args): ...
    def getPreCycle(self, *args): ...
    def getScale(self, *args): ...
    def getSourceDuration(self, *args): ...
    def getSourceStart(self, *args): ...
    def getStartFrame(self, *args): ...
    def getTrack(self, *args): ...
    def getWeight(self, *args): ...
    def isInstancedClip(self, *args): ...
    def isPose(self, *args): ...
    def setAbsolute(self, *args): ...
    def setAbsoluteChannelSettings(self, *args): ...
    def setCycle(self, *args): ...
    def setEnabled(self, *args): ...
    def setPoseClip(self, *args): ...
    def setPostCycle(self, *args): ...
    def setPreCycle(self, *args): ...
    def setScale(self, *args): ...
    def setSourceData(self, *args): ...
    def setStartFrame(self, *args): ...
    def setTrack(self, *args): ...
    def setWeight(self, *args): ...
    def sourceClip(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MAnimCurveClipboardItem(_object):
    def __del__(self): ...
    def __eq__(self, other: Any) -> bool: ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def animCurve(self, *args): ...
    def animCurveType(self, *args): ...
    def assign(self, *args): ...
    def fullAttributeName(self, *args): ...
    def getAddressingInfo(self, *args): ...
    def leafAttributeName(self, *args): ...
    def nodeName(self, *args): ...
    def setAddressingInfo(self, *args): ...
    def setAnimCurve(self, *args): ...
    def setNameInfo(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MAnimCurveClipboard(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def clear(self, *args): ...
    def clipboardItems(self, *args): ...
    def endTime(self, *args): ...
    def endUnitlessInput(self, *args): ...
    def isEmpty(self, *args): ...
    def set(self, *args): ...
    def startTime(self, *args): ...
    def startUnitlessInput(self, *args): ...
    @staticmethod
    def theAPIClipboard(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MFnLattice(OpenMaya.MFnDagNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def getDivisions(self, *args): ...
    def point(self, *args): ...
    def reset(self, *args): ...
    def setDivisions(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnWireDeformer(OpenMaya.MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addGeometry(self, *args): ...
    def addWire(self, *args): ...
    def create(self, *args): ...
    def crossingEffect(self, *args): ...
    def envelope(self, *args): ...
    def getAffectedGeometry(self, *args): ...
    def getDropoffLocator(self, *args): ...
    def holdingShape(self, *args): ...
    def localIntensity(self, *args): ...
    def numDropoffLocators(self, *args): ...
    def numWires(self, *args): ...
    def removeGeometry(self, *args): ...
    def rotation(self, *args): ...
    def setCrossingEffect(self, *args): ...
    def setDropoffLocator(self, *args): ...
    def setEnvelope(self, *args): ...
    def setHoldingShape(self, *args): ...
    def setLocalIntensity(self, *args): ...
    def setRotation(self, *args): ...
    def setWireDropOffDistance(self, *args): ...
    def setWireScale(self, *args): ...
    def type(self, *args): ...
    def wire(self, *args): ...
    def wireDropOffDistance(self, *args): ...
    def wireScale(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class doublePtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MFnHikEffector(OpenMaya.MFnTransform):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def create(self, *args): ...
    def getAuxiliaryEffectors(self, *args): ...
    def getEffColor(self, *args): ...
    def getPivotOffset(self, *args): ...
    def setEffColor(self, *args): ...
    def setPivotOffset(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnMotionPath(OpenMaya.MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addAnimatedObject(self, *args): ...
    def bank(self, *args): ...
    def bankScale(self, *args): ...
    def bankThreshold(self, *args): ...
    def create(self, *args): ...
    def follow(self, *args): ...
    def followAxis(self, *args): ...
    def getAnimatedObjects(self, *args): ...
    def getOrientationMarker(self, *args): ...
    def getPositionMarker(self, *args): ...
    def inverseNormal(self, *args): ...
    def numOrientationMarkers(self, *args): ...
    def numPositionMarkers(self, *args): ...
    def pathObject(self, *args): ...
    def setBank(self, *args): ...
    def setBankScale(self, *args): ...
    def setBankThreshold(self, *args): ...
    def setFollow(self, *args): ...
    def setFollowAxis(self, *args): ...
    def setInverseNormal(self, *args): ...
    def setPathObject(self, *args): ...
    def setUEnd(self, *args): ...
    def setUStart(self, *args): ...
    def setUTimeEnd(self, *args): ...
    def setUTimeStart(self, *args): ...
    def setUpAxis(self, *args): ...
    def setUseNormal(self, *args): ...
    def type(self, *args): ...
    def uEnd(self, *args): ...
    def uStart(self, *args): ...
    def uTimeEnd(self, *args): ...
    def uTimeStart(self, *args): ...
    def upAxis(self, *args): ...
    def useNormal(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kXaxis : int
    
    kYaxis : int
    
    kZaxis : int


class MFnCharacter(OpenMaya.MFnSet):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addCurveToClip(self, *args): ...
    def attachInstanceToCharacter(self, *args): ...
    def attachSourceToCharacter(self, *args): ...
    def blendExists(self, *args): ...
    def createBlend(self, *args): ...
    def getBlend(self, *args): ...
    def getBlendClips(self, *args): ...
    def getBlendCount(self, *args): ...
    def getCharacterThatOwnsPlug(self, *args): ...
    def getClipScheduler(self, *args): ...
    def getMemberPlugs(self, *args): ...
    def getScheduledClip(self, *args): ...
    def getScheduledClipCount(self, *args): ...
    def getSourceClip(self, *args): ...
    def getSourceClipCount(self, *args): ...
    def getSubCharacters(self, *args): ...
    def removeBlend(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class intPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MAnimCurveClipboardItemArray(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __getitem__(self, *args): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def clear(self, *args): ...
    def copy(self, *args): ...
    def insert(self, *args): ...
    def isValid(self, *args): ...
    def length(self, *args): ...
    def remove(self, *args): ...
    def set(self, *args): ...
    def setLength(self, *args): ...
    def setSizeIncrement(self, *args): ...
    def sizeIncrement(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class floatPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MFnKeyframeDeltaInfType(MFnKeyframeDelta):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def currentInfinityType(self, *args): ...
    def isPreInfinity(self, *args): ...
    def previousInfinityType(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnKeyframeDeltaAddRemove(MFnKeyframeDelta):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def deltaType(self, *args): ...
    def keyIndex(self, *args): ...
    def replacedValue(self, *args): ...
    def time(self, *args): ...
    def type(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kAdded : int
    
    kRemoved : int
    
    kReplaced : int


class MFnKeyframeDeltaBreakdown(MFnKeyframeDelta):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def isBreakdown(self, *args): ...
    def type(self, *args): ...
    def wasBreakdown(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnWeightGeometryFilter(MFnGeometryFilter):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def getWeightPlugStrings(self, *args): ...
    def getWeights(self, *args): ...
    def setWeight(self, *args): ...
    def type(self, *args): ...
    def weightPlugStrings(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnKeyframeDeltaScale(MFnKeyframeDelta):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def currentEndTime(self, *args): ...
    def currentStartTime(self, *args): ...
    def endTime(self, *args): ...
    def pivotTime(self, *args): ...
    def startTime(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnKeyframeDeltaTangent(MFnKeyframeDelta):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def currentTangentType(self, *args): ...
    def getCurrentPosition(self, *args): ...
    def getPreviousPosition(self, *args): ...
    def isInTangent(self, *args): ...
    def previousTangentType(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnKeyframeDeltaBlockAddRemove(MFnKeyframeDelta):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def deltaType(self, *args): ...
    def endTime(self, *args): ...
    def getTimes(self, *args): ...
    def getValues(self, *args): ...
    def numKeys(self, *args): ...
    def startTime(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    kAdded : int
    
    kRemoved : int


class MFnKeyframeDeltaMove(MFnKeyframeDelta):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def currentTime(self, *args): ...
    def currentValue(self, *args): ...
    def keyIndex(self, *args): ...
    def previousIndex(self, *args): ...
    def previousTime(self, *args): ...
    def previousValue(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnKeyframeDeltaWeighted(MFnKeyframeDelta):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def type(self, *args): ...
    def wasWeighted(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MFnSkinCluster(MFnGeometryFilter):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def getBlendWeights(self, *args): ...
    def getPointsAffectedByInfluence(self, *args): ...
    def getWeights(self, *args): ...
    def indexForInfluenceObject(self, *args): ...
    def influenceObjects(self, *args): ...
    def setBlendWeights(self, *args): ...
    def setWeights(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict




def MFnMotionPath_swigregister(*args, **kwargs): ...
def MAnimUtil_isAnimated(*args, **kwargs): ...
def MFnLattice_className(*args, **kwargs): ...
def MAnimControl_playbackMode(*args, **kwargs): ...
def weakref_proxy(*args, **kwargs):
    """
    proxy(object[, callback]) -- create a proxy object that weakly
    references 'object'.  'callback', if given, is called with a
    reference to the proxy when 'object' is about to be finalized.
    """
    ...
def MAnimCurveClipboardItemArray_swigregister(*args, **kwargs): ...
def MFnKeyframeDeltaScale_className(*args, **kwargs): ...
def MAnimControl_setMinMaxTime(*args, **kwargs): ...
def MAnimControl_setAnimationEndTime(*args, **kwargs): ...
def MAnimControl_playbackSpeed(*args, **kwargs): ...
def _swig_getattr(self, class_type, name): ...
def MAnimControl_isPlaying(*args, **kwargs): ...
def MAnimMessage_addAnimCurveEditedCallback(*args, **kwargs): ...
def MAnimControl_animationEndTime(*args, **kwargs): ...
def MAnimControl_setAutoKeyMode(*args, **kwargs): ...
def MAnimMessage_addPreBakeResultsCallback(*args, **kwargs): ...
def MAnimControl_globalOutTangentType(*args, **kwargs): ...
def MAnimMessage_flushAnimKeyframeEditedCallbacks(*args, **kwargs): ...
def MFnSkinCluster_className(*args, **kwargs): ...
def MAnimControl_swigregister(*args, **kwargs): ...
def MAnimMessage_swigregister(*args, **kwargs): ...
def MAnimUtil_findSetDrivenKeyAnimation(*args, **kwargs): ...
def floatPtr_swigregister(*args, **kwargs): ...
def MFnAnimCurve_swigregister(*args, **kwargs): ...
def MFnIkSolver_swigregister(*args, **kwargs): ...
def MAnimCurveChange_swigregister(*args, **kwargs): ...
def MAnimUtil_className(*args, **kwargs): ...
def MAnimControl_setMinTime(*args, **kwargs): ...
def MFnKeyframeDeltaWeighted_swigregister(*args, **kwargs): ...
def MFnHikEffector_className(*args, **kwargs): ...
def MIkSystem_getSolvers(*args, **kwargs): ...
def MFnKeyframeDeltaBlockAddRemove_className(*args, **kwargs): ...
def uIntPtr_frompointer(*args, **kwargs): ...
def MFnIkHandle_className(*args, **kwargs): ...
def MAnimCurveClipboard_swigregister(*args, **kwargs): ...
def MFnAnimCurve_className(*args, **kwargs): ...
def MFnCharacter_className(*args, **kwargs): ...
def MIkSystem_swigregister(*args, **kwargs): ...
def MFnKeyframeDeltaBlockAddRemove_swigregister(*args, **kwargs): ...
def uCharPtr_swigregister(*args, **kwargs): ...
def MFnWireDeformer_swigregister(*args, **kwargs): ...
def MFnKeyframeDeltaAddRemove_swigregister(*args, **kwargs): ...
def MAnimControl_minTime(*args, **kwargs): ...
def MFnGeometryFilter_swigregister(*args, **kwargs): ...
def MAnimControl_setPlaybackBy(*args, **kwargs): ...
def boolPtr_swigregister(*args, **kwargs): ...
def MAnimCurveClipboardItemArray_className(*args, **kwargs): ...
def MFnHikEffector_swigregister(*args, **kwargs): ...
def MAnimControl_setMaxTime(*args, **kwargs): ...
def _swig_setattr_nondynamic(self, class_type, name, value, static='1'): ...
def charPtr_swigregister(*args, **kwargs): ...
def MAnimControl_setAnimationStartTime(*args, **kwargs): ...
def MFnWeightGeometryFilter_className(*args, **kwargs): ...
def MAnimControl_setCurrentTime(*args, **kwargs): ...
def MIkSystem_isGlobalSnap(*args, **kwargs): ...
def MAnimControl_playBackward(*args, **kwargs): ...
def MAnimCurveClipboardItem_swigregister(*args, **kwargs): ...
def doublePtr_swigregister(*args, **kwargs): ...
def MItKeyframe_swigregister(*args, **kwargs): ...
def MAnimControl_autoKeyMode(*args, **kwargs): ...
def MAnimControl_setViewMode(*args, **kwargs): ...
def _swig_setattr(self, class_type, name, value): ...
def MAnimMessage_addDisableImplicitControlCallback(*args, **kwargs): ...
def MAnimControl_maxTime(*args, **kwargs): ...
def MAnimControl_setWeightedTangents(*args, **kwargs): ...
def MFnKeyframeDelta_className(*args, **kwargs): ...
def floatPtr_frompointer(*args, **kwargs): ...
def MFnBlendShapeDeformer_className(*args, **kwargs): ...
def MAnimUtil_findAnimation(*args, **kwargs): ...
def MAnimCurveChange_className(*args, **kwargs): ...
def MAnimUtil_findAnimationLayers(*args, **kwargs): ...
def MAnimCurveClipboard_theAPIClipboard(*args, **kwargs): ...
def MIkSystem_findSolver(*args, **kwargs): ...
def MFnLatticeDeformer_className(*args, **kwargs): ...
def MIkSystem_isGlobalSolve(*args, **kwargs): ...
def MFnIkJoint_swigregister(*args, **kwargs): ...
def shortPtr_frompointer(*args, **kwargs): ...
def uCharPtr_frompointer(*args, **kwargs): ...
def MFnKeyframeDeltaBreakdown_className(*args, **kwargs): ...
def MFnKeyframeDeltaTangent_className(*args, **kwargs): ...
def MAnimMessage_addAnimKeyframeEditedCallback(*args, **kwargs): ...
def _swig_repr(self): ...
def MFnKeyframeDeltaBreakdown_swigregister(*args, **kwargs): ...
def MAnimControl_playbackBy(*args, **kwargs): ...
def MFnKeyframeDeltaInfType_swigregister(*args, **kwargs): ...
def MFnMotionPath_className(*args, **kwargs): ...
def MFnKeyframeDelta_swigregister(*args, **kwargs): ...
def MAnimControl_currentTime(*args, **kwargs): ...
def intPtr_swigregister(*args, **kwargs): ...
def MFnKeyframeDeltaScale_swigregister(*args, **kwargs): ...
def MAnimControl_playForward(*args, **kwargs): ...
def MAnimCurveClipboardItem_className(*args, **kwargs): ...
def MFnIkEffector_className(*args, **kwargs): ...
def MAnimControl_stop(*args, **kwargs): ...
def MAnimMessage_addNodeAnimKeyframeEditedCallback(*args, **kwargs): ...
def MAnimMessage_addAnimKeyframeEditCheckCallback(*args, **kwargs): ...
def MAnimControl_setGlobalInTangentType(*args, **kwargs): ...
def MAnimControl_setPlaybackMode(*args, **kwargs): ...
def MIkSystem_setGlobalSolve(*args, **kwargs): ...
def MAnimControl_weightedTangents(*args, **kwargs): ...
def MAnimUtil_findAnimatedPlugs(*args, **kwargs): ...
def doublePtr_frompointer(*args, **kwargs): ...
def MFnKeyframeDeltaAddRemove_className(*args, **kwargs): ...
def MFnKeyframeDeltaTangent_swigregister(*args, **kwargs): ...
def MAnimUtil_swigregister(*args, **kwargs): ...
def MFnClip_swigregister(*args, **kwargs): ...
def MIkHandleGroup_swigregister(*args, **kwargs): ...
def MIkSystem_setGlobalSnap(*args, **kwargs): ...
def MFnKeyframeDeltaMove_swigregister(*args, **kwargs): ...
def MFnSkinCluster_swigregister(*args, **kwargs): ...
def MFnLatticeDeformer_swigregister(*args, **kwargs): ...
def MAnimControl_viewMode(*args, **kwargs): ...
def MFnKeyframeDeltaInfType_className(*args, **kwargs): ...
def MFnIkSolver_className(*args, **kwargs): ...
def MFnWireDeformer_className(*args, **kwargs): ...
def MAnimControl_animationStartTime(*args, **kwargs): ...
def MItKeyframe_className(*args, **kwargs): ...
def MFnKeyframeDeltaMove_className(*args, **kwargs): ...
def MFnClip_className(*args, **kwargs): ...
def MAnimControl_setAnimationStartEndTime(*args, **kwargs): ...
def intPtr_frompointer(*args, **kwargs): ...
def MAnimControl_setPlaybackSpeed(*args, **kwargs): ...
def MFnIkHandle_swigregister(*args, **kwargs): ...
def MAnimControl_isScrubbing(*args, **kwargs): ...
def shortPtr_swigregister(*args, **kwargs): ...
def MAnimUtil_findAnimatablePlugs(*args, **kwargs): ...
def MAnimControl_globalInTangentType(*args, **kwargs): ...
def MAnimMessage_addPostBakeResultsCallback(*args, **kwargs): ...
def MAnimControl_setGlobalOutTangentType(*args, **kwargs): ...
def MFnCharacter_swigregister(*args, **kwargs): ...
def charPtr_frompointer(*args, **kwargs): ...
def MFnIkEffector_swigregister(*args, **kwargs): ...
def MAnimMessage_className(*args, **kwargs): ...
def MAnimUtil_findConstraint(*args, **kwargs): ...
def MFnIkJoint_className(*args, **kwargs): ...
def MFnKeyframeDeltaWeighted_className(*args, **kwargs): ...
def boolPtr_frompointer(*args, **kwargs): ...
def MIkHandleGroup_className(*args, **kwargs): ...
def MFnGeometryFilter_className(*args, **kwargs): ...
def MFnBlendShapeDeformer_swigregister(*args, **kwargs): ...
def uIntPtr_swigregister(*args, **kwargs): ...
def MIkSystem_className(*args, **kwargs): ...
def MFnWeightGeometryFilter_swigregister(*args, **kwargs): ...
def MFnLattice_swigregister(*args, **kwargs): ...


_newclass : int

