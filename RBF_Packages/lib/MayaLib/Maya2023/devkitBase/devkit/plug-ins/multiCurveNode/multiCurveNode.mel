// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//-
// ==========================================================================
//
// ==========================================================================
//+

createNode multiCurve;
setKeyframe -at numCurves   -t  1 -v  1 multiCurve1;
setKeyframe -at numCurves   -t 24 -v 12 multiCurve1;
setKeyframe -at curveOffset -t  1 -v  1 multiCurve1;
setKeyframe -at curveOffset -t 24 -v  2 multiCurve1;

curve -d 3 -p -12 -3 13 -p -12 3 8 -p -12 -3 1 -p -12 3 -4 -p -12 -3 -9 -p -12 3 -14;
connectAttr curveShape1.worldSpace[0] multiCurve1.inputCurve;

// This is weird, but its safer to create var-group using one
// of the built-in commands than with createNode.  Mainly for
// undo purposes.
offsetCurve -ch on -rn false -cb 0 -st true -cl true -cr 0 -d 1 -tol 0.1 -sd 5 -ugn false  "curveShape1" ;
rename offsetNurbsCurve1 curveVarGroup1;

disconnectAttr offsetCurve1.outputCurve curveVarGroup1.create;
delete offsetCurve1 "offsetNurbsCurve1_*";

connectAttr multiCurve1.outputCurves curveVarGroup1.create;
curve -d 3 -p -12 -3 13 -p -12 3 8 -p -12 -3 1 -p -12 3 -4 -p -12 -3 -9 -p -12 3 -14;

connectAttr curveVarGroup1.local[0] curveShape2.create;
parent curveShape2 curveVarGroup1;
rename curveShape2 curveVarGroup1_Shape1;
rename curve2 curveVarGroup1_1;

catch(`getAttr curveVarGroup1.local[0]`);
