//-
// ==========================================================================
// Copyright 1995,2006,2008 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk
// license agreement provided at the time of installation or download,
// or which otherwise accompanies this software in either electronic
// or hard copy form.
// ==========================================================================
//+

//
// This script attaches the JLCooper VCR controls to the timeslider controls
//

global proc midiRecord()
{
	assignInputDevice -d "jlcVcr" -c "rewind" "currentTime -e `playbackOptions -q -min`";
	assignInputDevice -d "jlcVcr" -c "forward" -m "currentTime -e `playbackOptions -q -max`";
	assignInputDevice -d "jlcVcr" -c "stop" -m "stp";
	assignInputDevice -d "jlcVcr" -c "play" -m "ply";
	assignInputDevice -d "jlcVcr" -c "record" -m "rec";
	assignInputDevice -d "jlcVcr" -m "timeOffset($scrub)";
}

//
// You have to call these functions instead of the commands since
// the device command dispatcher replaces the text names of the buttons
// (play, stop, record) with their boolean values so "play" becomes "1"
// which is not a valid command.

global proc ply()
{
	play;
}

global proc stp()
{
	play -state off;
}

global proc rec()
{
	setKeyframe;
}

global proc timeOffset(int $deltaTime)
{
	int $currentFrameLocal;
	int $newFrameLocal;
	int $minFrameValue;
	int $maxFrameValue;
	$minFrameValue = `playbackOptions -q -min`;
    $maxFrameValue = `playbackOptions -q -max`;

	$currentFrameLocal = `currentTime -q`;
	$newFrameLocal = $currentFrameLocal + $deltaTime * (($maxFrameValue - $minFrameValue) / 200.0);

	if ($newFrameLocal < $minFrameValue) {
		$newFrameLocal = $minFrameValue;
	} else if ($newFrameLocal > $maxFrameValue) {
		$newFrameLocal = $maxFrameValue;
	}

	currentTime -e $newFrameLocal;
}

midiRecord;
