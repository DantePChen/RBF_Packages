from typing import Any, Container, Dict, Generic, Iterable, Iterator, List, Optional, Set, Tuple, TypeVar, Union
import maya.api.OpenMaya as nom
from . import utils as aeUtils
import PySide2.QtGui as QtGui
import PySide2.QtXml as qt
import maya.mel as mel
import PySide2.QtXml as QtXml
import maya.OpenMaya as om
import PySide2.QtSvg as QtSvg
import maya.cmds as cmds
import re
import maya.OpenMayaUI as omui
import shiboken2 as shiboken
from . import ui as aeUI
import PySide2.QtWidgets as QtWidgets
import PySide2.QtCore as QtCore
import maya.app.flux.attrUtils as attrUtils
import maya.app.flux.ui.core as fui


from PySide2.QtCore import Slot
from contextlib import contextmanager


if False:
    from typing import Dict, List, Tuple, Union, Optional

class ControlHandle(object):
    def __init__(self, pCustom, internalKey): ...
    def setAttr(self, attr, **kwargs): ...
    def setEnabled(self, enabled): ...
    def setLabel(self, label): ...
    __dict__ : dictproxy
    
    __weakref__ : getset_descriptor


class Custom(QtCore.QObject):
    def __init__(self, nodeName, *args, **kwargs): ...
    def addCheckbox(self, attr, **kwargs): ...
    def addColor(self, attr, **kwargs): ...
    def addControl(self, attr, **kwargs): ...
    def addEnum(self, attr, **kwargs): ...
    def addNavigation(self, attr="''", **kwargs): ...
    def addRadio(self, attr, **kwargs): ...
    def addSlider(self, attr, **kwargs): ...
    def addSpacing(self, value): ...
    def addStretch(self, factor='1'): ...
    def addTextField(self, attr, **kwargs): ...
    def addVector(self, attr, **kwargs): ...
    def addWidget(self, widget, stetchFactor='0', alignment='0'): ...
    def controlHandle(self, controlKey): ...
    def createAttributeListener(self, attr, func, node="''"): ...
    def createContextListener(self, func): ...
    def currentLayout(self): ...
    def eventFilter(self, widget, event):
        """
        # Event filter for injecting drag data into controls
        """
        ...
    def frameLayout(*args, **kwds): ...
    def horizontalLayout(*args, **kwds): ...
    def indentLayout(*args, **kwds): ...
    def melDeferred(self, cmd): ...
    def newTab(*args, **kwds): ...
    def onClose(self): ...
    def onCreate(self, node): ...
    def onLayoutVisibilityChange(self, func): ...
    def onReplace(self, node): ...
    def page(*args, **kwds): ...
    def registerExternalNode(self, name, func): ...
    def setControlAttr(self, key, attr, **kwargs): ...
    def setControlEnabled(self, key, enabled): ...
    def setControlLabel(self, key, label): ...
    def setIndex(self, ref, index): ...
    def setLayoutEnabled(self, ref, enabled): ...
    def setLayoutHidden(self, ref, hidden): ...
    def stackedLayout(*args, **kwds): ...
    def supress(self, *attrs): ...
    def tabLayout(*args, **kwds): ...
    def textFieldAttrChanged(self, key): ...
    def textFieldEditingFinished(self, key): ...
    def verticalLayout(*args, **kwds): ...
    staticMetaObject : QtCore.QMetaObject




def wrapInstance(*args, **kwargs): ...
def unwrapInstance(*args, **kwargs): ...


VECTOR_ATTR_TYPES : tuple
SLIDER_ATTR_TYPES : tuple

