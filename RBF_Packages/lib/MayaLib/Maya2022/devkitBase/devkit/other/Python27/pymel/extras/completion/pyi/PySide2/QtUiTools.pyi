from typing import Any, Container, Dict, Generic, Iterable, Iterator, List, Optional, Set, Tuple, TypeVar, Union
from . import QtCore


from PySide2.QtCore import QObject as _QObject


if False:
    from typing import Dict, List, Tuple, Union, Optional

class QUiLoader(_QObject):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addPluginPath(*args, **kwargs): ...
    def availableLayouts(*args, **kwargs): ...
    def availableWidgets(*args, **kwargs): ...
    def clearPluginPaths(*args, **kwargs): ...
    def createAction(*args, **kwargs): ...
    def createActionGroup(*args, **kwargs): ...
    def createLayout(*args, **kwargs): ...
    def createWidget(*args, **kwargs): ...
    def errorString(*args, **kwargs): ...
    def isLanguageChangeEnabled(*args, **kwargs): ...
    def isTranslationEnabled(*args, **kwargs): ...
    def load(*args, **kwargs): ...
    def pluginPaths(*args, **kwargs): ...
    def registerCustomWidget(*args, **kwargs): ...
    def setLanguageChangeEnabled(*args, **kwargs): ...
    def setTranslationEnabled(*args, **kwargs): ...
    def setWorkingDirectory(*args, **kwargs): ...
    def workingDirectory(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject



