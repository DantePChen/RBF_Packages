from typing import Any, Container, Dict, Generic, Iterable, Iterator, List, Optional, Set, Tuple, TypeVar, Union
import maya.api.OpenMaya as nom
import maya.OpenMaya as om
import PySide2.QtXml as qt
import maya.mel as mel
import shiboken2 as shiboken
import PySide2.QtCore as QtCore
import PySide2.QtSvg as QtSvg
import PySide2.QtWidgets as QtWidgets
import re
import json
import PySide2.QtXml as QtXml
import maya.cmds as cmds
import os
import PySide2.QtGui as QtGui


from PySide2.QtCore import Slot


if False:
    from typing import Dict, List, Tuple, Union, Optional

class ScriptJobWrapper:
    def __del__(self): ...
    def __init__(self, scriptJobId): ...




def getSelectionStatistics(): ...
def openWebDocs(command, lang): ...
def unwrapInstance(*args, **kwargs): ...
def getRelatives(name): ...
def getSelectedNodes(): ...
def mayaPrefsFolder(): ...
def loadInconsolata(): ...
def wrapInstance(*args, **kwargs): ...
def onMayaQuitCallback(func): ...
def rgbToHex(color): ...
def printSelectionStatistics(): ...
def getAssignCommandAnnotation(index): ...
def getAssignCommandHotkey(index): ...
def hexToRGB(color): ...
def getAssignCommandsMap(): ...
def openWebSearch(search): ...
def getNodeType(name): ...
def getSuggestedContext(): ...

