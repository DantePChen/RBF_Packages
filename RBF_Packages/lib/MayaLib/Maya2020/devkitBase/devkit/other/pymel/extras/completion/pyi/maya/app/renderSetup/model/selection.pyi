from typing import Any, Container, Dict, Generic, Iterable, Iterator, List, Optional, Set, Tuple, TypeVar, Union
import maya.api.OpenMaya as OpenMaya
import re
import itertools
from . import algorithm


if False:
    from typing import Dict, List, Tuple, Union, Optional

class Node(object):
    def __eq__(self, other: Any) -> bool: ...
    def __hash__(self): ...
    def __init__(self, obj): ...
    def object(self): ...
    __dict__ : dictproxy
    
    __weakref__ : getset_descriptor


class Selection(object):
    """
    Selection of nodes (MObject) and paths (MDagPath). Behaves like a set.
    """
    
    
    
    def __contains__(self, item): ...
    def __init__(self, items='None'): ...
    def add(self, item): ...
    def clear(self): ...
    def dagNodes(self): ...
    def hierarchy(self): ...
    def ls(self, patterns): ...
    def names(self, allPaths='True'): ...
    def nodes(self): ...
    def nonDagNodes(self): ...
    def paths(self): ...
    def sets(self): ...
    def shapes(self): ...
    def update(self, items): ...
    __dict__ : dictproxy
    
    __weakref__ : getset_descriptor




def createNameFilter(expressions): ...
def createProgram(e): ...

