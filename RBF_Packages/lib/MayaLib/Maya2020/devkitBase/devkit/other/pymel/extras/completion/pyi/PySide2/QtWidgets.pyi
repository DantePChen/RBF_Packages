from typing import Any, Container, Dict, Generic, Iterable, Iterator, List, Optional, Set, Tuple, TypeVar, Union
from . import QtCore


from PySide2.QtGui import QGuiApplication as _QGuiApplication
from PySide2.QtCore import QEvent as _QEvent
from PySide2.QtCore import QObject as _QObject
from PySide2.QtCore import QEventTransition as _QEventTransition
from PySide2.QtGui import QAbstractTextDocumentLayout as _QAbstractTextDocumentLayout
from PySide2.QtGui import QPainter as _QPainter
from PySide2.QtGui import QPaintDevice as _QPaintDevice
from PySide2.QtCore import QAbstractItemModel as _QAbstractItemModel


if False:
    from typing import Dict, List, Tuple, Union, Optional

class _Object(object):
    __dict__ : dictproxy


class QToolTip(_Object):
    @staticmethod
    def font(*args, **kwargs): ...
    @staticmethod
    def hideText(*args, **kwargs): ...
    @staticmethod
    def isVisible(*args, **kwargs): ...
    @staticmethod
    def palette(*args, **kwargs): ...
    @staticmethod
    def setFont(*args, **kwargs): ...
    @staticmethod
    def setPalette(*args, **kwargs): ...
    @staticmethod
    def showText(*args, **kwargs): ...
    @staticmethod
    def text(*args, **kwargs): ...


class QGraphicsLayoutItem(_Object):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def contentsRect(*args, **kwargs): ...
    def effectiveSizeHint(*args, **kwargs): ...
    def geometry(*args, **kwargs): ...
    def getContentsMargins(*args, **kwargs): ...
    def graphicsItem(*args, **kwargs): ...
    def isLayout(*args, **kwargs): ...
    def maximumHeight(*args, **kwargs): ...
    def maximumSize(*args, **kwargs): ...
    def maximumWidth(*args, **kwargs): ...
    def minimumHeight(*args, **kwargs): ...
    def minimumSize(*args, **kwargs): ...
    def minimumWidth(*args, **kwargs): ...
    def ownedByLayout(*args, **kwargs): ...
    def parentLayoutItem(*args, **kwargs): ...
    def preferredHeight(*args, **kwargs): ...
    def preferredSize(*args, **kwargs): ...
    def preferredWidth(*args, **kwargs): ...
    def setGeometry(*args, **kwargs): ...
    def setGraphicsItem(*args, **kwargs): ...
    def setMaximumHeight(*args, **kwargs): ...
    def setMaximumSize(*args, **kwargs): ...
    def setMaximumWidth(*args, **kwargs): ...
    def setMinimumHeight(*args, **kwargs): ...
    def setMinimumSize(*args, **kwargs): ...
    def setMinimumWidth(*args, **kwargs): ...
    def setOwnedByLayout(*args, **kwargs): ...
    def setParentLayoutItem(*args, **kwargs): ...
    def setPreferredHeight(*args, **kwargs): ...
    def setPreferredSize(*args, **kwargs): ...
    def setPreferredWidth(*args, **kwargs): ...
    def setSizePolicy(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def sizePolicy(*args, **kwargs): ...
    def updateGeometry(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QDirModel(_QAbstractItemModel):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def columnCount(*args, **kwargs): ...
    def data(*args, **kwargs): ...
    def dropMimeData(*args, **kwargs): ...
    def fileIcon(*args, **kwargs): ...
    def fileInfo(*args, **kwargs): ...
    def fileName(*args, **kwargs): ...
    def filePath(*args, **kwargs): ...
    def filter(*args, **kwargs): ...
    def flags(*args, **kwargs): ...
    def hasChildren(*args, **kwargs): ...
    def headerData(*args, **kwargs): ...
    def iconProvider(*args, **kwargs): ...
    def index(*args, **kwargs): ...
    def isDir(*args, **kwargs): ...
    def isReadOnly(*args, **kwargs): ...
    def lazyChildCount(*args, **kwargs): ...
    def mimeData(*args, **kwargs): ...
    def mimeTypes(*args, **kwargs): ...
    def mkdir(*args, **kwargs): ...
    def nameFilters(*args, **kwargs): ...
    def parent(*args, **kwargs): ...
    def refresh(*args, **kwargs): ...
    def remove(*args, **kwargs): ...
    def resolveSymlinks(*args, **kwargs): ...
    def rmdir(*args, **kwargs): ...
    def rowCount(*args, **kwargs): ...
    def setData(*args, **kwargs): ...
    def setFilter(*args, **kwargs): ...
    def setIconProvider(*args, **kwargs): ...
    def setLazyChildCount(*args, **kwargs): ...
    def setNameFilters(*args, **kwargs): ...
    def setReadOnly(*args, **kwargs): ...
    def setResolveSymlinks(*args, **kwargs): ...
    def setSorting(*args, **kwargs): ...
    def sort(*args, **kwargs): ...
    def sorting(*args, **kwargs): ...
    def supportedDropActions(*args, **kwargs): ...
    FileIconRole : Roles
    
    FileNameRole : Roles
    
    FilePathRole : Roles
    
    Roles : Type[Roles]
    
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QPlainTextDocumentLayout(_QAbstractTextDocumentLayout):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def blockBoundingRect(*args, **kwargs): ...
    def cursorWidth(*args, **kwargs): ...
    def documentChanged(*args, **kwargs): ...
    def documentSize(*args, **kwargs): ...
    def draw(*args, **kwargs): ...
    def ensureBlockLayout(*args, **kwargs): ...
    def frameBoundingRect(*args, **kwargs): ...
    def hitTest(*args, **kwargs): ...
    def pageCount(*args, **kwargs): ...
    def requestUpdate(*args, **kwargs): ...
    def setCursorWidth(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QGesture(_QObject):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def gestureCancelPolicy(*args, **kwargs): ...
    def gestureType(*args, **kwargs): ...
    def hasHotSpot(*args, **kwargs): ...
    def hotSpot(*args, **kwargs): ...
    def setGestureCancelPolicy(*args, **kwargs): ...
    def setHotSpot(*args, **kwargs): ...
    def state(*args, **kwargs): ...
    def unsetHotSpot(*args, **kwargs): ...
    CancelAllInContext : GestureCancelPolicy
    
    CancelNone : GestureCancelPolicy
    
    GestureCancelPolicy : Type[GestureCancelPolicy]
    
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QSizePolicy(_Object):
    def __copy__(*args, **kwargs): ...
    def __eq__(self, other: Any) -> bool:
        """
        x.__eq__(y) <==> x==y
        """
        ...
    def __ge__(self, other: Any) -> bool:
        """
        x.__ge__(y) <==> x>=y
        """
        ...
    def __gt__(self, other: Any) -> bool:
        """
        x.__gt__(y) <==> x>y
        """
        ...
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def __le__(self, other: Any) -> bool:
        """
        x.__le__(y) <==> x<=y
        """
        ...
    def __lshift__(*args, **kwargs):
        """
        x.__lshift__(y) <==> x<<y
        """
        ...
    def __lt__(self, other: Any) -> bool:
        """
        x.__lt__(y) <==> x<y
        """
        ...
    def __ne__(self, other: Any) -> bool:
        """
        x.__ne__(y) <==> x!=y
        """
        ...
    def __repr__(self) -> str:
        """
        x.__repr__() <==> repr(x)
        """
        ...
    def __rlshift__(*args, **kwargs):
        """
        x.__rlshift__(y) <==> y<<x
        """
        ...
    def __rrshift__(*args, **kwargs):
        """
        x.__rrshift__(y) <==> y>>x
        """
        ...
    def __rshift__(*args, **kwargs):
        """
        x.__rshift__(y) <==> x>>y
        """
        ...
    def controlType(*args, **kwargs): ...
    def expandingDirections(*args, **kwargs): ...
    def hasHeightForWidth(*args, **kwargs): ...
    def hasWidthForHeight(*args, **kwargs): ...
    def horizontalPolicy(*args, **kwargs): ...
    def horizontalStretch(*args, **kwargs): ...
    def retainSizeWhenHidden(*args, **kwargs): ...
    def setControlType(*args, **kwargs): ...
    def setHeightForWidth(*args, **kwargs): ...
    def setHorizontalPolicy(*args, **kwargs): ...
    def setHorizontalStretch(*args, **kwargs): ...
    def setRetainSizeWhenHidden(*args, **kwargs): ...
    def setVerticalPolicy(*args, **kwargs): ...
    def setVerticalStretch(*args, **kwargs): ...
    def setWidthForHeight(*args, **kwargs): ...
    def transpose(*args, **kwargs): ...
    def verticalPolicy(*args, **kwargs): ...
    def verticalStretch(*args, **kwargs): ...
    ButtonBox : ControlType
    
    CheckBox : ControlType
    
    ComboBox : ControlType
    
    ControlType : Type[ControlType]
    
    ControlTypes : Type[ControlTypes]
    
    DefaultType : ControlType
    
    ExpandFlag : PolicyFlag
    
    Expanding : Policy
    
    Fixed : Policy
    
    Frame : ControlType
    
    GroupBox : ControlType
    
    GrowFlag : PolicyFlag
    
    IgnoreFlag : PolicyFlag
    
    Ignored : Policy
    
    Label : ControlType
    
    Line : ControlType
    
    LineEdit : ControlType
    
    Maximum : Policy
    
    Minimum : Policy
    
    MinimumExpanding : Policy
    
    Policy : Type[Policy]
    
    PolicyFlag : Type[PolicyFlag]
    
    Preferred : Policy
    
    PushButton : ControlType
    
    RadioButton : ControlType
    
    ShrinkFlag : PolicyFlag
    
    Slider : ControlType
    
    SpinBox : ControlType
    
    TabWidget : ControlType
    
    ToolButton : ControlType
    
    __new__ : builtin_function_or_method


class QGraphicsTransform(_QObject):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def applyTo(*args, **kwargs): ...
    def update(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QStyleOption(_Object):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def __repr__(self) -> str:
        """
        x.__repr__() <==> repr(x)
        """
        ...
    def init(*args, **kwargs): ...
    def initFrom(*args, **kwargs): ...
    OptionType : Type[OptionType]
    
    SO_Button : OptionType
    
    SO_ComboBox : OptionType
    
    SO_Complex : OptionType
    
    SO_ComplexCustomBase : OptionType
    
    SO_CustomBase : OptionType
    
    SO_Default : OptionType
    
    SO_DockWidget : OptionType
    
    SO_FocusRect : OptionType
    
    SO_Frame : OptionType
    
    SO_GraphicsItem : OptionType
    
    SO_GroupBox : OptionType
    
    SO_Header : OptionType
    
    SO_MenuItem : OptionType
    
    SO_ProgressBar : OptionType
    
    SO_RubberBand : OptionType
    
    SO_SizeGrip : OptionType
    
    SO_Slider : OptionType
    
    SO_SpinBox : OptionType
    
    SO_Tab : OptionType
    
    SO_TabBarBase : OptionType
    
    SO_TabWidgetFrame : OptionType
    
    SO_TitleBar : OptionType
    
    SO_ToolBar : OptionType
    
    SO_ToolBox : OptionType
    
    SO_ToolButton : OptionType
    
    SO_ViewItem : OptionType
    
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    direction : getset_descriptor
    
    fontMetrics : getset_descriptor
    
    palette : getset_descriptor
    
    rect : getset_descriptor
    
    state : getset_descriptor
    
    styleObject : getset_descriptor
    
    type : getset_descriptor
    
    version : getset_descriptor


class QUndoStack(_QObject):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def beginMacro(*args, **kwargs): ...
    def canRedo(*args, **kwargs): ...
    def canUndo(*args, **kwargs): ...
    def cleanIndex(*args, **kwargs): ...
    def clear(*args, **kwargs): ...
    def command(*args, **kwargs): ...
    def count(*args, **kwargs): ...
    def createRedoAction(*args, **kwargs): ...
    def createUndoAction(*args, **kwargs): ...
    def endMacro(*args, **kwargs): ...
    def index(*args, **kwargs): ...
    def isActive(*args, **kwargs): ...
    def isClean(*args, **kwargs): ...
    def push(*args, **kwargs): ...
    def redo(*args, **kwargs): ...
    def redoText(*args, **kwargs): ...
    def setActive(*args, **kwargs): ...
    def setClean(*args, **kwargs): ...
    def setIndex(*args, **kwargs): ...
    def setUndoLimit(*args, **kwargs): ...
    def text(*args, **kwargs): ...
    def undo(*args, **kwargs): ...
    def undoLimit(*args, **kwargs): ...
    def undoText(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    canRedoChanged : PySide2.QtCore.Signal
    
    canUndoChanged : PySide2.QtCore.Signal
    
    cleanChanged : PySide2.QtCore.Signal
    
    indexChanged : PySide2.QtCore.Signal
    
    redoTextChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    undoTextChanged : PySide2.QtCore.Signal


class QItemEditorCreatorBase(_Object):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def createWidget(*args, **kwargs): ...
    def valuePropertyName(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QMouseEventTransition(_QEventTransition):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def button(*args, **kwargs): ...
    def eventTest(*args, **kwargs): ...
    def hitTestPath(*args, **kwargs): ...
    def modifierMask(*args, **kwargs): ...
    def onTransition(*args, **kwargs): ...
    def setButton(*args, **kwargs): ...
    def setHitTestPath(*args, **kwargs): ...
    def setModifierMask(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QGestureEvent(_QEvent):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def __repr__(self) -> str:
        """
        x.__repr__() <==> repr(x)
        """
        ...
    def accept(*args, **kwargs): ...
    def activeGestures(*args, **kwargs): ...
    def canceledGestures(*args, **kwargs): ...
    def gesture(*args, **kwargs): ...
    def gestures(*args, **kwargs): ...
    def ignore(*args, **kwargs): ...
    def isAccepted(*args, **kwargs): ...
    def mapToGraphicsScene(*args, **kwargs): ...
    def setAccepted(*args, **kwargs): ...
    def setWidget(*args, **kwargs): ...
    def widget(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QApplication(_QGuiApplication):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def autoSipEnabled(*args, **kwargs): ...
    def customDpiOverride(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def notify(*args, **kwargs): ...
    def setAutoSipEnabled(*args, **kwargs): ...
    def setCustomDpiOverride(*args, **kwargs): ...
    def setStyleSheet(*args, **kwargs): ...
    def styleSheet(*args, **kwargs): ...
    @staticmethod
    def aboutQt(*args, **kwargs): ...
    @staticmethod
    def activeModalWidget(*args, **kwargs): ...
    @staticmethod
    def activePopupWidget(*args, **kwargs): ...
    @staticmethod
    def activeWindow(*args, **kwargs): ...
    @staticmethod
    def alert(*args, **kwargs): ...
    @staticmethod
    def allWidgets(*args, **kwargs): ...
    @staticmethod
    def beep(*args, **kwargs): ...
    @staticmethod
    def closeAllWindows(*args, **kwargs): ...
    @staticmethod
    def colorSpec(*args, **kwargs): ...
    @staticmethod
    def cursorFlashTime(*args, **kwargs): ...
    @staticmethod
    def desktop(*args, **kwargs): ...
    @staticmethod
    def doubleClickInterval(*args, **kwargs): ...
    @staticmethod
    def exec_(*args, **kwargs): ...
    @staticmethod
    def focusWidget(*args, **kwargs): ...
    @staticmethod
    def font(*args, **kwargs): ...
    @staticmethod
    def fontMetrics(*args, **kwargs): ...
    @staticmethod
    def globalStrut(*args, **kwargs): ...
    @staticmethod
    def isEffectEnabled(*args, **kwargs): ...
    @staticmethod
    def keyboardInputInterval(*args, **kwargs): ...
    @staticmethod
    def palette(*args, **kwargs): ...
    @staticmethod
    def setActiveWindow(*args, **kwargs): ...
    @staticmethod
    def setColorSpec(*args, **kwargs): ...
    @staticmethod
    def setCursorFlashTime(*args, **kwargs): ...
    @staticmethod
    def setDoubleClickInterval(*args, **kwargs): ...
    @staticmethod
    def setEffectEnabled(*args, **kwargs): ...
    @staticmethod
    def setFont(*args, **kwargs): ...
    @staticmethod
    def setGlobalStrut(*args, **kwargs): ...
    @staticmethod
    def setKeyboardInputInterval(*args, **kwargs): ...
    @staticmethod
    def setPalette(*args, **kwargs): ...
    @staticmethod
    def setStartDragDistance(*args, **kwargs): ...
    @staticmethod
    def setStartDragTime(*args, **kwargs): ...
    @staticmethod
    def setStyle(*args, **kwargs): ...
    @staticmethod
    def setWheelScrollLines(*args, **kwargs): ...
    @staticmethod
    def setWindowIcon(*args, **kwargs): ...
    @staticmethod
    def startDragDistance(*args, **kwargs): ...
    @staticmethod
    def startDragTime(*args, **kwargs): ...
    @staticmethod
    def style(*args, **kwargs): ...
    @staticmethod
    def topLevelAt(*args, **kwargs): ...
    @staticmethod
    def topLevelWidgets(*args, **kwargs): ...
    @staticmethod
    def wheelScrollLines(*args, **kwargs): ...
    @staticmethod
    def widgetAt(*args, **kwargs): ...
    @staticmethod
    def windowIcon(*args, **kwargs): ...
    ColorSpec : Type[ColorSpec]
    
    CustomColor : ColorSpec
    
    ManyColor : ColorSpec
    
    NormalColor : ColorSpec
    
    __new__ : builtin_function_or_method
    
    focusChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QDataWidgetMapper(_QObject):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addMapping(*args, **kwargs): ...
    def clearMapping(*args, **kwargs): ...
    def currentIndex(*args, **kwargs): ...
    def itemDelegate(*args, **kwargs): ...
    def mappedPropertyName(*args, **kwargs): ...
    def mappedSection(*args, **kwargs): ...
    def mappedWidgetAt(*args, **kwargs): ...
    def model(*args, **kwargs): ...
    def orientation(*args, **kwargs): ...
    def removeMapping(*args, **kwargs): ...
    def revert(*args, **kwargs): ...
    def rootIndex(*args, **kwargs): ...
    def setCurrentIndex(*args, **kwargs): ...
    def setCurrentModelIndex(*args, **kwargs): ...
    def setItemDelegate(*args, **kwargs): ...
    def setModel(*args, **kwargs): ...
    def setOrientation(*args, **kwargs): ...
    def setRootIndex(*args, **kwargs): ...
    def setSubmitPolicy(*args, **kwargs): ...
    def submit(*args, **kwargs): ...
    def submitPolicy(*args, **kwargs): ...
    def toFirst(*args, **kwargs): ...
    def toLast(*args, **kwargs): ...
    def toNext(*args, **kwargs): ...
    def toPrevious(*args, **kwargs): ...
    AutoSubmit : SubmitPolicy
    
    ManualSubmit : SubmitPolicy
    
    SubmitPolicy : Type[SubmitPolicy]
    
    __new__ : builtin_function_or_method
    
    currentIndexChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QListWidgetItem(_Object):
    def __eq__(self, other: Any) -> bool:
        """
        x.__eq__(y) <==> x==y
        """
        ...
    def __ge__(self, other: Any) -> bool:
        """
        x.__ge__(y) <==> x>=y
        """
        ...
    def __gt__(self, other: Any) -> bool:
        """
        x.__gt__(y) <==> x>y
        """
        ...
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def __le__(self, other: Any) -> bool:
        """
        x.__le__(y) <==> x<=y
        """
        ...
    def __lshift__(*args, **kwargs):
        """
        x.__lshift__(y) <==> x<<y
        """
        ...
    def __lt__(self, other: Any) -> bool:
        """
        x.__lt__(y) <==> x<y
        """
        ...
    def __ne__(self, other: Any) -> bool:
        """
        x.__ne__(y) <==> x!=y
        """
        ...
    def __rlshift__(*args, **kwargs):
        """
        x.__rlshift__(y) <==> y<<x
        """
        ...
    def __rrshift__(*args, **kwargs):
        """
        x.__rrshift__(y) <==> y>>x
        """
        ...
    def __rshift__(*args, **kwargs):
        """
        x.__rshift__(y) <==> x>>y
        """
        ...
    def background(*args, **kwargs): ...
    def backgroundColor(*args, **kwargs): ...
    def checkState(*args, **kwargs): ...
    def clone(*args, **kwargs): ...
    def data(*args, **kwargs): ...
    def flags(*args, **kwargs): ...
    def font(*args, **kwargs): ...
    def foreground(*args, **kwargs): ...
    def icon(*args, **kwargs): ...
    def isHidden(*args, **kwargs): ...
    def isSelected(*args, **kwargs): ...
    def listWidget(*args, **kwargs): ...
    def read(*args, **kwargs): ...
    def setBackground(*args, **kwargs): ...
    def setBackgroundColor(*args, **kwargs): ...
    def setCheckState(*args, **kwargs): ...
    def setData(*args, **kwargs): ...
    def setFlags(*args, **kwargs): ...
    def setFont(*args, **kwargs): ...
    def setForeground(*args, **kwargs): ...
    def setHidden(*args, **kwargs): ...
    def setIcon(*args, **kwargs): ...
    def setSelected(*args, **kwargs): ...
    def setSizeHint(*args, **kwargs): ...
    def setStatusTip(*args, **kwargs): ...
    def setText(*args, **kwargs): ...
    def setTextAlignment(*args, **kwargs): ...
    def setTextColor(*args, **kwargs): ...
    def setToolTip(*args, **kwargs): ...
    def setWhatsThis(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def statusTip(*args, **kwargs): ...
    def text(*args, **kwargs): ...
    def textAlignment(*args, **kwargs): ...
    def textColor(*args, **kwargs): ...
    def toolTip(*args, **kwargs): ...
    def type(*args, **kwargs): ...
    def whatsThis(*args, **kwargs): ...
    def write(*args, **kwargs): ...
    ItemType : Type[ItemType]
    
    Type : ItemType
    
    UserType : ItemType
    
    __new__ : builtin_function_or_method


class QStyle(_QObject):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def combinedLayoutSpacing(*args, **kwargs): ...
    def drawComplexControl(*args, **kwargs): ...
    def drawControl(*args, **kwargs): ...
    def drawItemPixmap(*args, **kwargs): ...
    def drawItemText(*args, **kwargs): ...
    def drawPrimitive(*args, **kwargs): ...
    def generatedIconPixmap(*args, **kwargs): ...
    def hitTestComplexControl(*args, **kwargs): ...
    def itemPixmapRect(*args, **kwargs): ...
    def itemTextRect(*args, **kwargs): ...
    def layoutSpacing(*args, **kwargs): ...
    def pixelMetric(*args, **kwargs): ...
    def polish(*args, **kwargs): ...
    def proxy(*args, **kwargs): ...
    def sizeFromContents(*args, **kwargs): ...
    def standardIcon(*args, **kwargs): ...
    def standardPalette(*args, **kwargs): ...
    def standardPixmap(*args, **kwargs): ...
    def styleHint(*args, **kwargs): ...
    def subControlRect(*args, **kwargs): ...
    def subElementRect(*args, **kwargs): ...
    def unpolish(*args, **kwargs): ...
    @staticmethod
    def alignedRect(*args, **kwargs): ...
    @staticmethod
    def sliderPositionFromValue(*args, **kwargs): ...
    @staticmethod
    def sliderValueFromPosition(*args, **kwargs): ...
    @staticmethod
    def visualAlignment(*args, **kwargs): ...
    @staticmethod
    def visualPos(*args, **kwargs): ...
    @staticmethod
    def visualRect(*args, **kwargs): ...
    CC_ComboBox : ComplexControl
    
    CC_CustomBase : ComplexControl
    
    CC_Dial : ComplexControl
    
    CC_GroupBox : ComplexControl
    
    CC_MdiControls : ComplexControl
    
    CC_ScrollBar : ComplexControl
    
    CC_Slider : ComplexControl
    
    CC_SpinBox : ComplexControl
    
    CC_TitleBar : ComplexControl
    
    CC_ToolButton : ComplexControl
    
    CE_CheckBox : ControlElement
    
    CE_CheckBoxLabel : ControlElement
    
    CE_ColumnViewGrip : ControlElement
    
    CE_ComboBoxLabel : ControlElement
    
    CE_CustomBase : ControlElement
    
    CE_DockWidgetTitle : ControlElement
    
    CE_FocusFrame : ControlElement
    
    CE_Header : ControlElement
    
    CE_HeaderEmptyArea : ControlElement
    
    CE_HeaderLabel : ControlElement
    
    CE_HeaderSection : ControlElement
    
    CE_ItemViewItem : ControlElement
    
    CE_MenuBarEmptyArea : ControlElement
    
    CE_MenuBarItem : ControlElement
    
    CE_MenuEmptyArea : ControlElement
    
    CE_MenuHMargin : ControlElement
    
    CE_MenuItem : ControlElement
    
    CE_MenuScroller : ControlElement
    
    CE_MenuTearoff : ControlElement
    
    CE_MenuVMargin : ControlElement
    
    CE_ProgressBar : ControlElement
    
    CE_ProgressBarContents : ControlElement
    
    CE_ProgressBarGroove : ControlElement
    
    CE_ProgressBarLabel : ControlElement
    
    CE_PushButton : ControlElement
    
    CE_PushButtonBevel : ControlElement
    
    CE_PushButtonLabel : ControlElement
    
    CE_RadioButton : ControlElement
    
    CE_RadioButtonLabel : ControlElement
    
    CE_RubberBand : ControlElement
    
    CE_ScrollBarAddLine : ControlElement
    
    CE_ScrollBarAddPage : ControlElement
    
    CE_ScrollBarFirst : ControlElement
    
    CE_ScrollBarLast : ControlElement
    
    CE_ScrollBarSlider : ControlElement
    
    CE_ScrollBarSubLine : ControlElement
    
    CE_ScrollBarSubPage : ControlElement
    
    CE_ShapedFrame : ControlElement
    
    CE_SizeGrip : ControlElement
    
    CE_Splitter : ControlElement
    
    CE_TabBarTab : ControlElement
    
    CE_TabBarTabLabel : ControlElement
    
    CE_TabBarTabShape : ControlElement
    
    CE_ToolBar : ControlElement
    
    CE_ToolBoxTab : ControlElement
    
    CE_ToolBoxTabLabel : ControlElement
    
    CE_ToolBoxTabShape : ControlElement
    
    CE_ToolButtonLabel : ControlElement
    
    CT_CheckBox : ContentsType
    
    CT_ComboBox : ContentsType
    
    CT_CustomBase : ContentsType
    
    CT_DialogButtons : ContentsType
    
    CT_GroupBox : ContentsType
    
    CT_HeaderSection : ContentsType
    
    CT_ItemViewItem : ContentsType
    
    CT_LineEdit : ContentsType
    
    CT_MdiControls : ContentsType
    
    CT_Menu : ContentsType
    
    CT_MenuBar : ContentsType
    
    CT_MenuBarItem : ContentsType
    
    CT_MenuItem : ContentsType
    
    CT_ProgressBar : ContentsType
    
    CT_PushButton : ContentsType
    
    CT_RadioButton : ContentsType
    
    CT_ScrollBar : ContentsType
    
    CT_SizeGrip : ContentsType
    
    CT_Slider : ContentsType
    
    CT_SpinBox : ContentsType
    
    CT_Splitter : ContentsType
    
    CT_TabBarTab : ContentsType
    
    CT_TabWidget : ContentsType
    
    CT_ToolButton : ContentsType
    
    ComplexControl : Type[ComplexControl]
    
    ContentsType : Type[ContentsType]
    
    ControlElement : Type[ControlElement]
    
    PE_CustomBase : PrimitiveElement
    
    PE_Frame : PrimitiveElement
    
    PE_FrameButtonBevel : PrimitiveElement
    
    PE_FrameButtonTool : PrimitiveElement
    
    PE_FrameDefaultButton : PrimitiveElement
    
    PE_FrameDockWidget : PrimitiveElement
    
    PE_FrameFocusRect : PrimitiveElement
    
    PE_FrameGroupBox : PrimitiveElement
    
    PE_FrameLineEdit : PrimitiveElement
    
    PE_FrameMenu : PrimitiveElement
    
    PE_FrameStatusBar : PrimitiveElement
    
    PE_FrameStatusBarItem : PrimitiveElement
    
    PE_FrameTabBarBase : PrimitiveElement
    
    PE_FrameTabWidget : PrimitiveElement
    
    PE_FrameWindow : PrimitiveElement
    
    PE_IndicatorArrowDown : PrimitiveElement
    
    PE_IndicatorArrowLeft : PrimitiveElement
    
    PE_IndicatorArrowRight : PrimitiveElement
    
    PE_IndicatorArrowUp : PrimitiveElement
    
    PE_IndicatorBranch : PrimitiveElement
    
    PE_IndicatorButtonDropDown : PrimitiveElement
    
    PE_IndicatorCheckBox : PrimitiveElement
    
    PE_IndicatorColumnViewArrow : PrimitiveElement
    
    PE_IndicatorDockWidgetResizeHandle : PrimitiveElement
    
    PE_IndicatorHeaderArrow : PrimitiveElement
    
    PE_IndicatorItemViewItemCheck : PrimitiveElement
    
    PE_IndicatorItemViewItemDrop : PrimitiveElement
    
    PE_IndicatorMenuCheckMark : PrimitiveElement
    
    PE_IndicatorProgressChunk : PrimitiveElement
    
    PE_IndicatorRadioButton : PrimitiveElement
    
    PE_IndicatorSpinDown : PrimitiveElement
    
    PE_IndicatorSpinMinus : PrimitiveElement
    
    PE_IndicatorSpinPlus : PrimitiveElement
    
    PE_IndicatorSpinUp : PrimitiveElement
    
    PE_IndicatorTabClose : PrimitiveElement
    
    PE_IndicatorTabTear : PrimitiveElement
    
    PE_IndicatorToolBarHandle : PrimitiveElement
    
    PE_IndicatorToolBarSeparator : PrimitiveElement
    
    PE_IndicatorViewItemCheck : PrimitiveElement
    
    PE_PanelButtonBevel : PrimitiveElement
    
    PE_PanelButtonCommand : PrimitiveElement
    
    PE_PanelButtonTool : PrimitiveElement
    
    PE_PanelItemViewItem : PrimitiveElement
    
    PE_PanelItemViewRow : PrimitiveElement
    
    PE_PanelLineEdit : PrimitiveElement
    
    PE_PanelMenu : PrimitiveElement
    
    PE_PanelMenuBar : PrimitiveElement
    
    PE_PanelScrollAreaCorner : PrimitiveElement
    
    PE_PanelStatusBar : PrimitiveElement
    
    PE_PanelTipLabel : PrimitiveElement
    
    PE_PanelToolBar : PrimitiveElement
    
    PE_Widget : PrimitiveElement
    
    PM_ButtonDefaultIndicator : PixelMetric
    
    PM_ButtonIconSize : PixelMetric
    
    PM_ButtonMargin : PixelMetric
    
    PM_ButtonShiftHorizontal : PixelMetric
    
    PM_ButtonShiftVertical : PixelMetric
    
    PM_CheckBoxLabelSpacing : PixelMetric
    
    PM_ComboBoxFrameWidth : PixelMetric
    
    PM_CustomBase : PixelMetric
    
    PM_DefaultChildMargin : PixelMetric
    
    PM_DefaultFrameWidth : PixelMetric
    
    PM_DefaultLayoutSpacing : PixelMetric
    
    PM_DefaultTopLevelMargin : PixelMetric
    
    PM_DialogButtonsButtonHeight : PixelMetric
    
    PM_DialogButtonsButtonWidth : PixelMetric
    
    PM_DialogButtonsSeparator : PixelMetric
    
    PM_DockWidgetFrameWidth : PixelMetric
    
    PM_DockWidgetHandleExtent : PixelMetric
    
    PM_DockWidgetSeparatorExtent : PixelMetric
    
    PM_DockWidgetTitleBarButtonMargin : PixelMetric
    
    PM_DockWidgetTitleMargin : PixelMetric
    
    PM_ExclusiveIndicatorHeight : PixelMetric
    
    PM_ExclusiveIndicatorWidth : PixelMetric
    
    PM_FocusFrameHMargin : PixelMetric
    
    PM_FocusFrameVMargin : PixelMetric
    
    PM_HeaderDefaultSectionSizeHorizontal : PixelMetric
    
    PM_HeaderDefaultSectionSizeVertical : PixelMetric
    
    PM_HeaderGripMargin : PixelMetric
    
    PM_HeaderMargin : PixelMetric
    
    PM_HeaderMarkSize : PixelMetric
    
    PM_IconViewIconSize : PixelMetric
    
    PM_IndicatorHeight : PixelMetric
    
    PM_IndicatorWidth : PixelMetric
    
    PM_LargeIconSize : PixelMetric
    
    PM_LayoutBottomMargin : PixelMetric
    
    PM_LayoutHorizontalSpacing : PixelMetric
    
    PM_LayoutLeftMargin : PixelMetric
    
    PM_LayoutRightMargin : PixelMetric
    
    PM_LayoutTopMargin : PixelMetric
    
    PM_LayoutVerticalSpacing : PixelMetric
    
    PM_ListViewIconSize : PixelMetric
    
    PM_MDIFrameWidth : PixelMetric
    
    PM_MDIMinimizedWidth : PixelMetric
    
    PM_MaximumDragDistance : PixelMetric
    
    PM_MdiSubWindowFrameWidth : PixelMetric
    
    PM_MdiSubWindowMinimizedWidth : PixelMetric
    
    PM_MenuBarHMargin : PixelMetric
    
    PM_MenuBarItemSpacing : PixelMetric
    
    PM_MenuBarPanelWidth : PixelMetric
    
    PM_MenuBarVMargin : PixelMetric
    
    PM_MenuButtonIndicator : PixelMetric
    
    PM_MenuDesktopFrameWidth : PixelMetric
    
    PM_MenuHMargin : PixelMetric
    
    PM_MenuPanelWidth : PixelMetric
    
    PM_MenuScrollerHeight : PixelMetric
    
    PM_MenuTearoffHeight : PixelMetric
    
    PM_MenuVMargin : PixelMetric
    
    PM_MessageBoxIconSize : PixelMetric
    
    PM_ProgressBarChunkWidth : PixelMetric
    
    PM_RadioButtonLabelSpacing : PixelMetric
    
    PM_ScrollBarExtent : PixelMetric
    
    PM_ScrollBarSliderMin : PixelMetric
    
    PM_ScrollView_ScrollBarOverlap : PixelMetric
    
    PM_ScrollView_ScrollBarSpacing : PixelMetric
    
    PM_SizeGripSize : PixelMetric
    
    PM_SliderControlThickness : PixelMetric
    
    PM_SliderLength : PixelMetric
    
    PM_SliderSpaceAvailable : PixelMetric
    
    PM_SliderThickness : PixelMetric
    
    PM_SliderTickmarkOffset : PixelMetric
    
    PM_SmallIconSize : PixelMetric
    
    PM_SpinBoxFrameWidth : PixelMetric
    
    PM_SpinBoxSliderHeight : PixelMetric
    
    PM_SplitterWidth : PixelMetric
    
    PM_SubMenuOverlap : PixelMetric
    
    PM_TabBarBaseHeight : PixelMetric
    
    PM_TabBarBaseOverlap : PixelMetric
    
    PM_TabBarIconSize : PixelMetric
    
    PM_TabBarScrollButtonWidth : PixelMetric
    
    PM_TabBarTabHSpace : PixelMetric
    
    PM_TabBarTabOverlap : PixelMetric
    
    PM_TabBarTabShiftHorizontal : PixelMetric
    
    PM_TabBarTabShiftVertical : PixelMetric
    
    PM_TabBarTabVSpace : PixelMetric
    
    PM_TabBar_ScrollButtonOverlap : PixelMetric
    
    PM_TabCloseIndicatorHeight : PixelMetric
    
    PM_TabCloseIndicatorWidth : PixelMetric
    
    PM_TextCursorWidth : PixelMetric
    
    PM_TitleBarHeight : PixelMetric
    
    PM_ToolBarExtensionExtent : PixelMetric
    
    PM_ToolBarFrameWidth : PixelMetric
    
    PM_ToolBarHandleExtent : PixelMetric
    
    PM_ToolBarIconSize : PixelMetric
    
    PM_ToolBarItemMargin : PixelMetric
    
    PM_ToolBarItemSpacing : PixelMetric
    
    PM_ToolBarSeparatorExtent : PixelMetric
    
    PM_ToolTipLabelFrameWidth : PixelMetric
    
    PM_TreeViewIndentation : PixelMetric
    
    PixelMetric : Type[PixelMetric]
    
    PrimitiveElement : Type[PrimitiveElement]
    
    RSIP_OnMouseClick : RequestSoftwareInputPanel
    
    RSIP_OnMouseClickAndAlreadyFocused : RequestSoftwareInputPanel
    
    RequestSoftwareInputPanel : Type[RequestSoftwareInputPanel]
    
    SC_All : SubControl
    
    SC_ComboBoxArrow : SubControl
    
    SC_ComboBoxEditField : SubControl
    
    SC_ComboBoxFrame : SubControl
    
    SC_ComboBoxListBoxPopup : SubControl
    
    SC_CustomBase : SubControl
    
    SC_DialGroove : SubControl
    
    SC_DialHandle : SubControl
    
    SC_DialTickmarks : SubControl
    
    SC_GroupBoxCheckBox : SubControl
    
    SC_GroupBoxContents : SubControl
    
    SC_GroupBoxFrame : SubControl
    
    SC_GroupBoxLabel : SubControl
    
    SC_MdiCloseButton : SubControl
    
    SC_MdiMinButton : SubControl
    
    SC_MdiNormalButton : SubControl
    
    SC_None : SubControl
    
    SC_ScrollBarAddLine : SubControl
    
    SC_ScrollBarAddPage : SubControl
    
    SC_ScrollBarFirst : SubControl
    
    SC_ScrollBarGroove : SubControl
    
    SC_ScrollBarLast : SubControl
    
    SC_ScrollBarSlider : SubControl
    
    SC_ScrollBarSubLine : SubControl
    
    SC_ScrollBarSubPage : SubControl
    
    SC_SliderGroove : SubControl
    
    SC_SliderHandle : SubControl
    
    SC_SliderTickmarks : SubControl
    
    SC_SpinBoxDown : SubControl
    
    SC_SpinBoxEditField : SubControl
    
    SC_SpinBoxFrame : SubControl
    
    SC_SpinBoxUp : SubControl
    
    SC_TitleBarCloseButton : SubControl
    
    SC_TitleBarContextHelpButton : SubControl
    
    SC_TitleBarLabel : SubControl
    
    SC_TitleBarMaxButton : SubControl
    
    SC_TitleBarMinButton : SubControl
    
    SC_TitleBarNormalButton : SubControl
    
    SC_TitleBarShadeButton : SubControl
    
    SC_TitleBarSysMenu : SubControl
    
    SC_TitleBarUnshadeButton : SubControl
    
    SC_ToolButton : SubControl
    
    SC_ToolButtonMenu : SubControl
    
    SE_CheckBoxClickRect : SubElement
    
    SE_CheckBoxContents : SubElement
    
    SE_CheckBoxFocusRect : SubElement
    
    SE_CheckBoxIndicator : SubElement
    
    SE_CheckBoxLayoutItem : SubElement
    
    SE_ComboBoxFocusRect : SubElement
    
    SE_ComboBoxLayoutItem : SubElement
    
    SE_CustomBase : SubElement
    
    SE_DateTimeEditLayoutItem : SubElement
    
    SE_DialogButtonBoxLayoutItem : SubElement
    
    SE_DockWidgetCloseButton : SubElement
    
    SE_DockWidgetFloatButton : SubElement
    
    SE_DockWidgetIcon : SubElement
    
    SE_DockWidgetTitleBarText : SubElement
    
    SE_FrameContents : SubElement
    
    SE_FrameLayoutItem : SubElement
    
    SE_GroupBoxLayoutItem : SubElement
    
    SE_HeaderArrow : SubElement
    
    SE_HeaderLabel : SubElement
    
    SE_ItemViewItemCheckIndicator : SubElement
    
    SE_ItemViewItemDecoration : SubElement
    
    SE_ItemViewItemFocusRect : SubElement
    
    SE_ItemViewItemText : SubElement
    
    SE_LabelLayoutItem : SubElement
    
    SE_LineEditContents : SubElement
    
    SE_ProgressBarContents : SubElement
    
    SE_ProgressBarGroove : SubElement
    
    SE_ProgressBarLabel : SubElement
    
    SE_ProgressBarLayoutItem : SubElement
    
    SE_PushButtonContents : SubElement
    
    SE_PushButtonFocusRect : SubElement
    
    SE_PushButtonLayoutItem : SubElement
    
    SE_RadioButtonClickRect : SubElement
    
    SE_RadioButtonContents : SubElement
    
    SE_RadioButtonFocusRect : SubElement
    
    SE_RadioButtonIndicator : SubElement
    
    SE_RadioButtonLayoutItem : SubElement
    
    SE_ShapedFrameContents : SubElement
    
    SE_SliderFocusRect : SubElement
    
    SE_SliderLayoutItem : SubElement
    
    SE_SpinBoxLayoutItem : SubElement
    
    SE_TabBarTabLeftButton : SubElement
    
    SE_TabBarTabRightButton : SubElement
    
    SE_TabBarTabText : SubElement
    
    SE_TabBarTearIndicator : SubElement
    
    SE_TabWidgetLayoutItem : SubElement
    
    SE_TabWidgetLeftCorner : SubElement
    
    SE_TabWidgetRightCorner : SubElement
    
    SE_TabWidgetTabBar : SubElement
    
    SE_TabWidgetTabContents : SubElement
    
    SE_TabWidgetTabPane : SubElement
    
    SE_ToolBarHandle : SubElement
    
    SE_ToolBoxTabContents : SubElement
    
    SE_ToolButtonLayoutItem : SubElement
    
    SE_TreeViewDisclosureItem : SubElement
    
    SE_ViewItemCheckIndicator : SubElement
    
    SH_BlinkCursorWhenTextSelected : StyleHint
    
    SH_Button_FocusPolicy : StyleHint
    
    SH_ComboBox_LayoutDirection : StyleHint
    
    SH_ComboBox_ListMouseTracking : StyleHint
    
    SH_ComboBox_Popup : StyleHint
    
    SH_ComboBox_PopupFrameStyle : StyleHint
    
    SH_ComboBox_UseNativePopup : StyleHint
    
    SH_CustomBase : StyleHint
    
    SH_Dial_BackgroundRole : StyleHint
    
    SH_DialogButtonBox_ButtonsHaveIcons : StyleHint
    
    SH_DialogButtonLayout : StyleHint
    
    SH_DialogButtons_DefaultButton : StyleHint
    
    SH_DitherDisabledText : StyleHint
    
    SH_DockWidget_ButtonsHaveFrame : StyleHint
    
    SH_DrawMenuBarSeparator : StyleHint
    
    SH_EtchDisabledText : StyleHint
    
    SH_FocusFrame_AboveWidget : StyleHint
    
    SH_FocusFrame_Mask : StyleHint
    
    SH_FontDialog_SelectAssociatedText : StyleHint
    
    SH_FormLayoutFieldGrowthPolicy : StyleHint
    
    SH_FormLayoutFormAlignment : StyleHint
    
    SH_FormLayoutLabelAlignment : StyleHint
    
    SH_FormLayoutWrapPolicy : StyleHint
    
    SH_GroupBox_TextLabelColor : StyleHint
    
    SH_GroupBox_TextLabelVerticalAlignment : StyleHint
    
    SH_Header_ArrowAlignment : StyleHint
    
    SH_ItemView_ActivateItemOnSingleClick : StyleHint
    
    SH_ItemView_ArrowKeysNavigateIntoChildren : StyleHint
    
    SH_ItemView_ChangeHighlightOnFocus : StyleHint
    
    SH_ItemView_DrawDelegateFrame : StyleHint
    
    SH_ItemView_EllipsisLocation : StyleHint
    
    SH_ItemView_MovementWithoutUpdatingSelection : StyleHint
    
    SH_ItemView_PaintAlternatingRowColorsForEmptyArea : StyleHint
    
    SH_ItemView_ShowDecorationSelected : StyleHint
    
    SH_LineEdit_PasswordCharacter : StyleHint
    
    SH_LineEdit_PasswordMaskDelay : StyleHint
    
    SH_ListViewExpand_SelectMouseType : StyleHint
    
    SH_MainWindow_SpaceBelowMenuBar : StyleHint
    
    SH_MenuBar_AltKeyNavigation : StyleHint
    
    SH_MenuBar_MouseTracking : StyleHint
    
    SH_Menu_AllowActiveAndDisabled : StyleHint
    
    SH_Menu_FadeOutOnHide : StyleHint
    
    SH_Menu_FillScreenWithScroll : StyleHint
    
    SH_Menu_FlashTriggeredItem : StyleHint
    
    SH_Menu_KeyboardSearch : StyleHint
    
    SH_Menu_Mask : StyleHint
    
    SH_Menu_MouseTracking : StyleHint
    
    SH_Menu_Scrollable : StyleHint
    
    SH_Menu_SelectionWrap : StyleHint
    
    SH_Menu_SloppySubMenus : StyleHint
    
    SH_Menu_SpaceActivatesItem : StyleHint
    
    SH_Menu_SubMenuDontStartSloppyOnLeave : StyleHint
    
    SH_Menu_SubMenuPopupDelay : StyleHint
    
    SH_Menu_SubMenuResetWhenReenteringParent : StyleHint
    
    SH_Menu_SubMenuSloppyCloseTimeout : StyleHint
    
    SH_Menu_SubMenuSloppySelectOtherActions : StyleHint
    
    SH_Menu_SubMenuUniDirection : StyleHint
    
    SH_Menu_SubMenuUniDirectionFailCount : StyleHint
    
    SH_Menu_SupportsSections : StyleHint
    
    SH_MessageBox_CenterButtons : StyleHint
    
    SH_MessageBox_TextInteractionFlags : StyleHint
    
    SH_MessageBox_UseBorderForButtonSpacing : StyleHint
    
    SH_PrintDialog_RightAlignButtons : StyleHint
    
    SH_ProgressDialog_CenterCancelButton : StyleHint
    
    SH_ProgressDialog_TextLabelAlignment : StyleHint
    
    SH_RequestSoftwareInputPanel : StyleHint
    
    SH_RichText_FullWidthSelection : StyleHint
    
    SH_RubberBand_Mask : StyleHint
    
    SH_ScrollBar_ContextMenu : StyleHint
    
    SH_ScrollBar_LeftClickAbsolutePosition : StyleHint
    
    SH_ScrollBar_MiddleClickAbsolutePosition : StyleHint
    
    SH_ScrollBar_RollBetweenButtons : StyleHint
    
    SH_ScrollBar_ScrollWhenPointerLeavesControl : StyleHint
    
    SH_ScrollBar_StopMouseOverSlider : StyleHint
    
    SH_ScrollBar_Transient : StyleHint
    
    SH_ScrollView_FrameOnlyAroundContents : StyleHint
    
    SH_Slider_AbsoluteSetButtons : StyleHint
    
    SH_Slider_PageSetButtons : StyleHint
    
    SH_Slider_SloppyKeyEvents : StyleHint
    
    SH_Slider_SnapToValue : StyleHint
    
    SH_Slider_StopMouseOverSlider : StyleHint
    
    SH_SpellCheckUnderlineStyle : StyleHint
    
    SH_SpinBox_AnimateButton : StyleHint
    
    SH_SpinBox_ClickAutoRepeatRate : StyleHint
    
    SH_SpinBox_ClickAutoRepeatThreshold : StyleHint
    
    SH_SpinBox_KeyPressAutoRepeatRate : StyleHint
    
    SH_SpinControls_DisableOnBounds : StyleHint
    
    SH_Splitter_OpaqueResize : StyleHint
    
    SH_TabBar_Alignment : StyleHint
    
    SH_TabBar_ChangeCurrentDelay : StyleHint
    
    SH_TabBar_CloseButtonPosition : StyleHint
    
    SH_TabBar_ElideMode : StyleHint
    
    SH_TabBar_PreferNoArrows : StyleHint
    
    SH_TabBar_SelectMouseType : StyleHint
    
    SH_TabWidget_DefaultTabPosition : StyleHint
    
    SH_Table_GridLineColor : StyleHint
    
    SH_TextControl_FocusIndicatorTextCharFormat : StyleHint
    
    SH_TitleBar_AutoRaise : StyleHint
    
    SH_TitleBar_ModifyNotification : StyleHint
    
    SH_TitleBar_NoBorder : StyleHint
    
    SH_ToolBar_Movable : StyleHint
    
    SH_ToolBox_SelectedPageTitleBold : StyleHint
    
    SH_ToolButtonStyle : StyleHint
    
    SH_ToolButton_PopupDelay : StyleHint
    
    SH_ToolTipLabel_Opacity : StyleHint
    
    SH_ToolTip_FallAsleepDelay : StyleHint
    
    SH_ToolTip_Mask : StyleHint
    
    SH_ToolTip_WakeUpDelay : StyleHint
    
    SH_UnderlineShortcut : StyleHint
    
    SH_Widget_Animate : StyleHint
    
    SH_Widget_ShareActivation : StyleHint
    
    SH_WindowFrame_Mask : StyleHint
    
    SH_WizardStyle : StyleHint
    
    SH_Workspace_FillSpaceOnMaximize : StyleHint
    
    SP_ArrowBack : StandardPixmap
    
    SP_ArrowDown : StandardPixmap
    
    SP_ArrowForward : StandardPixmap
    
    SP_ArrowLeft : StandardPixmap
    
    SP_ArrowRight : StandardPixmap
    
    SP_ArrowUp : StandardPixmap
    
    SP_BrowserReload : StandardPixmap
    
    SP_BrowserStop : StandardPixmap
    
    SP_CommandLink : StandardPixmap
    
    SP_ComputerIcon : StandardPixmap
    
    SP_CustomBase : StandardPixmap
    
    SP_DesktopIcon : StandardPixmap
    
    SP_DialogApplyButton : StandardPixmap
    
    SP_DialogCancelButton : StandardPixmap
    
    SP_DialogCloseButton : StandardPixmap
    
    SP_DialogDiscardButton : StandardPixmap
    
    SP_DialogHelpButton : StandardPixmap
    
    SP_DialogNoButton : StandardPixmap
    
    SP_DialogOkButton : StandardPixmap
    
    SP_DialogOpenButton : StandardPixmap
    
    SP_DialogResetButton : StandardPixmap
    
    SP_DialogSaveButton : StandardPixmap
    
    SP_DialogYesButton : StandardPixmap
    
    SP_DirClosedIcon : StandardPixmap
    
    SP_DirHomeIcon : StandardPixmap
    
    SP_DirIcon : StandardPixmap
    
    SP_DirLinkIcon : StandardPixmap
    
    SP_DirLinkOpenIcon : StandardPixmap
    
    SP_DirOpenIcon : StandardPixmap
    
    SP_DockWidgetCloseButton : StandardPixmap
    
    SP_DriveCDIcon : StandardPixmap
    
    SP_DriveDVDIcon : StandardPixmap
    
    SP_DriveFDIcon : StandardPixmap
    
    SP_DriveHDIcon : StandardPixmap
    
    SP_DriveNetIcon : StandardPixmap
    
    SP_FileDialogBack : StandardPixmap
    
    SP_FileDialogContentsView : StandardPixmap
    
    SP_FileDialogDetailedView : StandardPixmap
    
    SP_FileDialogEnd : StandardPixmap
    
    SP_FileDialogInfoView : StandardPixmap
    
    SP_FileDialogListView : StandardPixmap
    
    SP_FileDialogNewFolder : StandardPixmap
    
    SP_FileDialogStart : StandardPixmap
    
    SP_FileDialogToParent : StandardPixmap
    
    SP_FileIcon : StandardPixmap
    
    SP_FileLinkIcon : StandardPixmap
    
    SP_LineEditClearButton : StandardPixmap
    
    SP_MediaPause : StandardPixmap
    
    SP_MediaPlay : StandardPixmap
    
    SP_MediaSeekBackward : StandardPixmap
    
    SP_MediaSeekForward : StandardPixmap
    
    SP_MediaSkipBackward : StandardPixmap
    
    SP_MediaSkipForward : StandardPixmap
    
    SP_MediaStop : StandardPixmap
    
    SP_MediaVolume : StandardPixmap
    
    SP_MediaVolumeMuted : StandardPixmap
    
    SP_MessageBoxCritical : StandardPixmap
    
    SP_MessageBoxInformation : StandardPixmap
    
    SP_MessageBoxQuestion : StandardPixmap
    
    SP_MessageBoxWarning : StandardPixmap
    
    SP_TitleBarCloseButton : StandardPixmap
    
    SP_TitleBarContextHelpButton : StandardPixmap
    
    SP_TitleBarMaxButton : StandardPixmap
    
    SP_TitleBarMenuButton : StandardPixmap
    
    SP_TitleBarMinButton : StandardPixmap
    
    SP_TitleBarNormalButton : StandardPixmap
    
    SP_TitleBarShadeButton : StandardPixmap
    
    SP_TitleBarUnshadeButton : StandardPixmap
    
    SP_ToolBarHorizontalExtensionButton : StandardPixmap
    
    SP_ToolBarVerticalExtensionButton : StandardPixmap
    
    SP_TrashIcon : StandardPixmap
    
    SP_VistaShield : StandardPixmap
    
    StandardPixmap : Type[StandardPixmap]
    
    State : Type[State]
    
    StateFlag : Type[StateFlag]
    
    State_Active : StateFlag
    
    State_AutoRaise : StateFlag
    
    State_Bottom : StateFlag
    
    State_Children : StateFlag
    
    State_DownArrow : StateFlag
    
    State_Editing : StateFlag
    
    State_Enabled : StateFlag
    
    State_FocusAtBorder : StateFlag
    
    State_HasFocus : StateFlag
    
    State_Horizontal : StateFlag
    
    State_Item : StateFlag
    
    State_KeyboardFocusChange : StateFlag
    
    State_Mini : StateFlag
    
    State_MouseOver : StateFlag
    
    State_NoChange : StateFlag
    
    State_None : StateFlag
    
    State_Off : StateFlag
    
    State_On : StateFlag
    
    State_Open : StateFlag
    
    State_Raised : StateFlag
    
    State_ReadOnly : StateFlag
    
    State_Selected : StateFlag
    
    State_Sibling : StateFlag
    
    State_Small : StateFlag
    
    State_Sunken : StateFlag
    
    State_Top : StateFlag
    
    State_UpArrow : StateFlag
    
    State_Window : StateFlag
    
    StyleHint : Type[StyleHint]
    
    SubControl : Type[SubControl]
    
    SubControls : Type[SubControls]
    
    SubElement : Type[SubElement]
    
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QGraphicsSceneEvent(_QEvent):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def widget(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QTreeWidgetItem(_Object):
    def __eq__(self, other: Any) -> bool:
        """
        x.__eq__(y) <==> x==y
        """
        ...
    def __ge__(self, other: Any) -> bool:
        """
        x.__ge__(y) <==> x>=y
        """
        ...
    def __gt__(self, other: Any) -> bool:
        """
        x.__gt__(y) <==> x>y
        """
        ...
    def __hash__(*args, **kwargs):
        """
        x.__hash__() <==> hash(x)
        """
        ...
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def __le__(self, other: Any) -> bool:
        """
        x.__le__(y) <==> x<=y
        """
        ...
    def __lshift__(*args, **kwargs):
        """
        x.__lshift__(y) <==> x<<y
        """
        ...
    def __lt__(self, other: Any) -> bool:
        """
        x.__lt__(y) <==> x<y
        """
        ...
    def __ne__(self, other: Any) -> bool:
        """
        x.__ne__(y) <==> x!=y
        """
        ...
    def __rlshift__(*args, **kwargs):
        """
        x.__rlshift__(y) <==> y<<x
        """
        ...
    def __rrshift__(*args, **kwargs):
        """
        x.__rrshift__(y) <==> y>>x
        """
        ...
    def __rshift__(*args, **kwargs):
        """
        x.__rshift__(y) <==> x>>y
        """
        ...
    def addChild(*args, **kwargs): ...
    def addChildren(*args, **kwargs): ...
    def background(*args, **kwargs): ...
    def backgroundColor(*args, **kwargs): ...
    def checkState(*args, **kwargs): ...
    def child(*args, **kwargs): ...
    def childCount(*args, **kwargs): ...
    def childIndicatorPolicy(*args, **kwargs): ...
    def clone(*args, **kwargs): ...
    def columnCount(*args, **kwargs): ...
    def data(*args, **kwargs): ...
    def emitDataChanged(*args, **kwargs): ...
    def flags(*args, **kwargs): ...
    def font(*args, **kwargs): ...
    def foreground(*args, **kwargs): ...
    def icon(*args, **kwargs): ...
    def indexOfChild(*args, **kwargs): ...
    def insertChild(*args, **kwargs): ...
    def insertChildren(*args, **kwargs): ...
    def isDisabled(*args, **kwargs): ...
    def isExpanded(*args, **kwargs): ...
    def isFirstColumnSpanned(*args, **kwargs): ...
    def isHidden(*args, **kwargs): ...
    def isSelected(*args, **kwargs): ...
    def parent(*args, **kwargs): ...
    def read(*args, **kwargs): ...
    def removeChild(*args, **kwargs): ...
    def setBackground(*args, **kwargs): ...
    def setBackgroundColor(*args, **kwargs): ...
    def setCheckState(*args, **kwargs): ...
    def setChildIndicatorPolicy(*args, **kwargs): ...
    def setData(*args, **kwargs): ...
    def setDisabled(*args, **kwargs): ...
    def setExpanded(*args, **kwargs): ...
    def setFirstColumnSpanned(*args, **kwargs): ...
    def setFlags(*args, **kwargs): ...
    def setFont(*args, **kwargs): ...
    def setForeground(*args, **kwargs): ...
    def setHidden(*args, **kwargs): ...
    def setIcon(*args, **kwargs): ...
    def setSelected(*args, **kwargs): ...
    def setSizeHint(*args, **kwargs): ...
    def setStatusTip(*args, **kwargs): ...
    def setText(*args, **kwargs): ...
    def setTextAlignment(*args, **kwargs): ...
    def setTextColor(*args, **kwargs): ...
    def setToolTip(*args, **kwargs): ...
    def setWhatsThis(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def sortChildren(*args, **kwargs): ...
    def statusTip(*args, **kwargs): ...
    def takeChild(*args, **kwargs): ...
    def takeChildren(*args, **kwargs): ...
    def text(*args, **kwargs): ...
    def textAlignment(*args, **kwargs): ...
    def textColor(*args, **kwargs): ...
    def toolTip(*args, **kwargs): ...
    def treeWidget(*args, **kwargs): ...
    def type(*args, **kwargs): ...
    def whatsThis(*args, **kwargs): ...
    def write(*args, **kwargs): ...
    ChildIndicatorPolicy : Type[ChildIndicatorPolicy]
    
    DontShowIndicator : ChildIndicatorPolicy
    
    DontShowIndicatorWhenChildless : ChildIndicatorPolicy
    
    ItemType : Type[ItemType]
    
    ShowIndicator : ChildIndicatorPolicy
    
    Type : ItemType
    
    UserType : ItemType
    
    __new__ : builtin_function_or_method


class QGraphicsItemAnimation(_QObject):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def afterAnimationStep(*args, **kwargs): ...
    def beforeAnimationStep(*args, **kwargs): ...
    def clear(*args, **kwargs): ...
    def horizontalScaleAt(*args, **kwargs): ...
    def horizontalShearAt(*args, **kwargs): ...
    def item(*args, **kwargs): ...
    def matrixAt(*args, **kwargs): ...
    def posAt(*args, **kwargs): ...
    def posList(*args, **kwargs): ...
    def reset(*args, **kwargs): ...
    def rotationAt(*args, **kwargs): ...
    def rotationList(*args, **kwargs): ...
    def scaleList(*args, **kwargs): ...
    def setItem(*args, **kwargs): ...
    def setPosAt(*args, **kwargs): ...
    def setRotationAt(*args, **kwargs): ...
    def setScaleAt(*args, **kwargs): ...
    def setShearAt(*args, **kwargs): ...
    def setStep(*args, **kwargs): ...
    def setTimeLine(*args, **kwargs): ...
    def setTranslationAt(*args, **kwargs): ...
    def shearList(*args, **kwargs): ...
    def timeLine(*args, **kwargs): ...
    def translationList(*args, **kwargs): ...
    def verticalScaleAt(*args, **kwargs): ...
    def verticalShearAt(*args, **kwargs): ...
    def xTranslationAt(*args, **kwargs): ...
    def yTranslationAt(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QItemEditorFactory(_Object):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def createEditor(*args, **kwargs): ...
    def registerEditor(*args, **kwargs): ...
    def valuePropertyName(*args, **kwargs): ...
    @staticmethod
    def defaultFactory(*args, **kwargs): ...
    @staticmethod
    def setDefaultFactory(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QFileIconProvider(_Object):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def icon(*args, **kwargs): ...
    def options(*args, **kwargs): ...
    def setOptions(*args, **kwargs): ...
    def type(*args, **kwargs): ...
    Computer : IconType
    
    Desktop : IconType
    
    DontUseCustomDirectoryIcons : Option
    
    Drive : IconType
    
    File : IconType
    
    Folder : IconType
    
    IconType : Type[IconType]
    
    Network : IconType
    
    Option : Type[Option]
    
    Options : Type[Options]
    
    Trashcan : IconType
    
    __new__ : builtin_function_or_method


class QGestureRecognizer(_Object):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def create(*args, **kwargs): ...
    def recognize(*args, **kwargs): ...
    def reset(*args, **kwargs): ...
    @staticmethod
    def registerRecognizer(*args, **kwargs): ...
    @staticmethod
    def unregisterRecognizer(*args, **kwargs): ...
    CancelGesture : ResultFlag
    
    ConsumeEventHint : ResultFlag
    
    FinishGesture : ResultFlag
    
    Ignore : ResultFlag
    
    MayBeGesture : ResultFlag
    
    Result : Type[Result]
    
    ResultFlag : Type[ResultFlag]
    
    ResultHint_Mask : ResultFlag
    
    ResultState_Mask : ResultFlag
    
    TriggerGesture : ResultFlag
    
    __new__ : builtin_function_or_method


class QStylePainter(_QPainter):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def begin(*args, **kwargs): ...
    def drawComplexControl(*args, **kwargs): ...
    def drawControl(*args, **kwargs): ...
    def drawItemPixmap(*args, **kwargs): ...
    def drawItemText(*args, **kwargs): ...
    def drawPrimitive(*args, **kwargs): ...
    def style(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QAbstractItemDelegate(_QObject):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def createEditor(*args, **kwargs): ...
    def destroyEditor(*args, **kwargs): ...
    def editorEvent(*args, **kwargs): ...
    def helpEvent(*args, **kwargs): ...
    def paint(*args, **kwargs): ...
    def paintingRoles(*args, **kwargs): ...
    def setEditorData(*args, **kwargs): ...
    def setModelData(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def updateEditorGeometry(*args, **kwargs): ...
    @staticmethod
    def elidedText(*args, **kwargs): ...
    EditNextItem : EndEditHint
    
    EditPreviousItem : EndEditHint
    
    EndEditHint : Type[EndEditHint]
    
    NoHint : EndEditHint
    
    RevertModelCache : EndEditHint
    
    SubmitModelCache : EndEditHint
    
    __new__ : builtin_function_or_method
    
    closeEditor : PySide2.QtCore.Signal
    
    commitData : PySide2.QtCore.Signal
    
    sizeHintChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QKeyEventTransition(_QEventTransition):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def eventTest(*args, **kwargs): ...
    def key(*args, **kwargs): ...
    def modifierMask(*args, **kwargs): ...
    def onTransition(*args, **kwargs): ...
    def setKey(*args, **kwargs): ...
    def setModifierMask(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QTreeWidgetItemIterator(_Object):
    def __copy__(*args, **kwargs): ...
    def __iadd__(*args, **kwargs):
        """
        x.__iadd__(y) <==> x+=y
        """
        ...
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def __isub__(*args, **kwargs):
        """
        x.__isub__(y) <==> x-=y
        """
        ...
    def __iter__(*args, **kwargs):
        """
        x.__iter__() <==> iter(x)
        """
        ...
    def next(*args, **kwargs):
        """
        x.next() -> the next value, or raise StopIteration
        """
        ...
    def value(*args, **kwargs): ...
    All : IteratorFlag
    
    Checked : IteratorFlag
    
    Disabled : IteratorFlag
    
    DragDisabled : IteratorFlag
    
    DragEnabled : IteratorFlag
    
    DropDisabled : IteratorFlag
    
    DropEnabled : IteratorFlag
    
    Editable : IteratorFlag
    
    Enabled : IteratorFlag
    
    HasChildren : IteratorFlag
    
    Hidden : IteratorFlag
    
    IteratorFlag : Type[IteratorFlag]
    
    IteratorFlags : Type[IteratorFlags]
    
    NoChildren : IteratorFlag
    
    NotChecked : IteratorFlag
    
    NotEditable : IteratorFlag
    
    NotHidden : IteratorFlag
    
    NotSelectable : IteratorFlag
    
    Selectable : IteratorFlag
    
    Selected : IteratorFlag
    
    Unselected : IteratorFlag
    
    UserFlag : IteratorFlag
    
    __new__ : builtin_function_or_method


class QGraphicsEffect(_QObject):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def boundingRect(*args, **kwargs): ...
    def boundingRectFor(*args, **kwargs): ...
    def draw(*args, **kwargs): ...
    def drawSource(*args, **kwargs): ...
    def isEnabled(*args, **kwargs): ...
    def setEnabled(*args, **kwargs): ...
    def sourceBoundingRect(*args, **kwargs): ...
    def sourceChanged(*args, **kwargs): ...
    def sourceIsPixmap(*args, **kwargs): ...
    def sourcePixmap(*args, **kwargs): ...
    def update(*args, **kwargs): ...
    def updateBoundingRect(*args, **kwargs): ...
    ChangeFlag : Type[ChangeFlag]
    
    ChangeFlags : Type[ChangeFlags]
    
    NoPad : PixmapPadMode
    
    PadToEffectiveBoundingRect : PixmapPadMode
    
    PadToTransparentBorder : PixmapPadMode
    
    PixmapPadMode : Type[PixmapPadMode]
    
    SourceAttached : ChangeFlag
    
    SourceBoundingRectChanged : ChangeFlag
    
    SourceDetached : ChangeFlag
    
    SourceInvalidated : ChangeFlag
    
    __new__ : builtin_function_or_method
    
    enabledChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QSystemTrayIcon(_QObject):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def contextMenu(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def geometry(*args, **kwargs): ...
    def hide(*args, **kwargs): ...
    def icon(*args, **kwargs): ...
    def isVisible(*args, **kwargs): ...
    def setContextMenu(*args, **kwargs): ...
    def setIcon(*args, **kwargs): ...
    def setToolTip(*args, **kwargs): ...
    def setVisible(*args, **kwargs): ...
    def show(*args, **kwargs): ...
    def showMessage(*args, **kwargs): ...
    def toolTip(*args, **kwargs): ...
    @staticmethod
    def isSystemTrayAvailable(*args, **kwargs): ...
    @staticmethod
    def supportsMessages(*args, **kwargs): ...
    ActivationReason : Type[ActivationReason]
    
    Context : ActivationReason
    
    Critical : MessageIcon
    
    DoubleClick : ActivationReason
    
    Information : MessageIcon
    
    MessageIcon : Type[MessageIcon]
    
    MiddleClick : ActivationReason
    
    NoIcon : MessageIcon
    
    Trigger : ActivationReason
    
    Unknown : ActivationReason
    
    Warning : MessageIcon
    
    __new__ : builtin_function_or_method
    
    activated : PySide2.QtCore.Signal
    
    messageClicked : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QGraphicsAnchor(_QObject):
    def setSizePolicy(*args, **kwargs): ...
    def setSpacing(*args, **kwargs): ...
    def sizePolicy(*args, **kwargs): ...
    def spacing(*args, **kwargs): ...
    def unsetSpacing(*args, **kwargs): ...
    staticMetaObject : PySide2.QtCore.QMetaObject


class QShortcut(_QObject):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def autoRepeat(*args, **kwargs): ...
    def context(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def id(*args, **kwargs): ...
    def isEnabled(*args, **kwargs): ...
    def key(*args, **kwargs): ...
    def parentWidget(*args, **kwargs): ...
    def setAutoRepeat(*args, **kwargs): ...
    def setContext(*args, **kwargs): ...
    def setEnabled(*args, **kwargs): ...
    def setKey(*args, **kwargs): ...
    def setWhatsThis(*args, **kwargs): ...
    def whatsThis(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    activated : PySide2.QtCore.Signal
    
    activatedAmbiguously : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QTableWidgetSelectionRange(_Object):
    def __copy__(*args, **kwargs): ...
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def bottomRow(*args, **kwargs): ...
    def columnCount(*args, **kwargs): ...
    def leftColumn(*args, **kwargs): ...
    def rightColumn(*args, **kwargs): ...
    def rowCount(*args, **kwargs): ...
    def topRow(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QStyleFactory(_Object):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    @staticmethod
    def create(*args, **kwargs): ...
    @staticmethod
    def keys(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QWhatsThis(_Object):
    @staticmethod
    def createAction(*args, **kwargs): ...
    @staticmethod
    def enterWhatsThisMode(*args, **kwargs): ...
    @staticmethod
    def hideText(*args, **kwargs): ...
    @staticmethod
    def inWhatsThisMode(*args, **kwargs): ...
    @staticmethod
    def leaveWhatsThisMode(*args, **kwargs): ...
    @staticmethod
    def showText(*args, **kwargs): ...


class QAction(_QObject):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def actionGroup(*args, **kwargs): ...
    def activate(*args, **kwargs): ...
    def associatedGraphicsWidgets(*args, **kwargs): ...
    def associatedWidgets(*args, **kwargs): ...
    def autoRepeat(*args, **kwargs): ...
    def data(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def font(*args, **kwargs): ...
    def hover(*args, **kwargs): ...
    def icon(*args, **kwargs): ...
    def iconText(*args, **kwargs): ...
    def isCheckable(*args, **kwargs): ...
    def isChecked(*args, **kwargs): ...
    def isEnabled(*args, **kwargs): ...
    def isIconVisibleInMenu(*args, **kwargs): ...
    def isSeparator(*args, **kwargs): ...
    def isVisible(*args, **kwargs): ...
    def menu(*args, **kwargs): ...
    def menuRole(*args, **kwargs): ...
    def parentWidget(*args, **kwargs): ...
    def priority(*args, **kwargs): ...
    def setActionGroup(*args, **kwargs): ...
    def setAutoRepeat(*args, **kwargs): ...
    def setCheckable(*args, **kwargs): ...
    def setChecked(*args, **kwargs): ...
    def setData(*args, **kwargs): ...
    def setDisabled(*args, **kwargs): ...
    def setEnabled(*args, **kwargs): ...
    def setFont(*args, **kwargs): ...
    def setIcon(*args, **kwargs): ...
    def setIconText(*args, **kwargs): ...
    def setIconVisibleInMenu(*args, **kwargs): ...
    def setMenu(*args, **kwargs): ...
    def setMenuRole(*args, **kwargs): ...
    def setPriority(*args, **kwargs): ...
    def setSeparator(*args, **kwargs): ...
    def setShortcut(*args, **kwargs): ...
    def setShortcutContext(*args, **kwargs): ...
    def setShortcuts(*args, **kwargs): ...
    def setStatusTip(*args, **kwargs): ...
    def setText(*args, **kwargs): ...
    def setToolTip(*args, **kwargs): ...
    def setVisible(*args, **kwargs): ...
    def setWhatsThis(*args, **kwargs): ...
    def shortcut(*args, **kwargs): ...
    def shortcutContext(*args, **kwargs): ...
    def shortcuts(*args, **kwargs): ...
    def showStatusText(*args, **kwargs): ...
    def statusTip(*args, **kwargs): ...
    def text(*args, **kwargs): ...
    def toggle(*args, **kwargs): ...
    def toolTip(*args, **kwargs): ...
    def trigger(*args, **kwargs): ...
    def whatsThis(*args, **kwargs): ...
    AboutQtRole : MenuRole
    
    AboutRole : MenuRole
    
    ActionEvent : Type[ActionEvent]
    
    ApplicationSpecificRole : MenuRole
    
    HighPriority : Priority
    
    Hover : ActionEvent
    
    LowPriority : Priority
    
    MenuRole : Type[MenuRole]
    
    NoRole : MenuRole
    
    NormalPriority : Priority
    
    PreferencesRole : MenuRole
    
    Priority : Type[Priority]
    
    QuitRole : MenuRole
    
    TextHeuristicRole : MenuRole
    
    Trigger : ActionEvent
    
    __new__ : builtin_function_or_method
    
    changed : PySide2.QtCore.Signal
    
    hovered : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    toggled : PySide2.QtCore.Signal
    
    triggered : PySide2.QtCore.Signal


class QGraphicsScene(_QObject):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def activePanel(*args, **kwargs): ...
    def activeWindow(*args, **kwargs): ...
    def addEllipse(*args, **kwargs): ...
    def addItem(*args, **kwargs): ...
    def addLine(*args, **kwargs): ...
    def addPath(*args, **kwargs): ...
    def addPixmap(*args, **kwargs): ...
    def addPolygon(*args, **kwargs): ...
    def addRect(*args, **kwargs): ...
    def addSimpleText(*args, **kwargs): ...
    def addText(*args, **kwargs): ...
    def addWidget(*args, **kwargs): ...
    def advance(*args, **kwargs): ...
    def backgroundBrush(*args, **kwargs): ...
    def bspTreeDepth(*args, **kwargs): ...
    def clear(*args, **kwargs): ...
    def clearFocus(*args, **kwargs): ...
    def clearSelection(*args, **kwargs): ...
    def collidingItems(*args, **kwargs): ...
    def contextMenuEvent(*args, **kwargs): ...
    def createItemGroup(*args, **kwargs): ...
    def destroyItemGroup(*args, **kwargs): ...
    def dragEnterEvent(*args, **kwargs): ...
    def dragLeaveEvent(*args, **kwargs): ...
    def dragMoveEvent(*args, **kwargs): ...
    def drawBackground(*args, **kwargs): ...
    def drawForeground(*args, **kwargs): ...
    def dropEvent(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def eventFilter(*args, **kwargs): ...
    def focusInEvent(*args, **kwargs): ...
    def focusItem(*args, **kwargs): ...
    def focusNextPrevChild(*args, **kwargs): ...
    def focusOutEvent(*args, **kwargs): ...
    def font(*args, **kwargs): ...
    def foregroundBrush(*args, **kwargs): ...
    def hasFocus(*args, **kwargs): ...
    def height(*args, **kwargs): ...
    def helpEvent(*args, **kwargs): ...
    def inputMethodEvent(*args, **kwargs): ...
    def inputMethodQuery(*args, **kwargs): ...
    def invalidate(*args, **kwargs): ...
    def isActive(*args, **kwargs): ...
    def isSortCacheEnabled(*args, **kwargs): ...
    def itemAt(*args, **kwargs): ...
    def itemIndexMethod(*args, **kwargs): ...
    def items(*args, **kwargs): ...
    def itemsBoundingRect(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def keyReleaseEvent(*args, **kwargs): ...
    def minimumRenderSize(*args, **kwargs): ...
    def mouseDoubleClickEvent(*args, **kwargs): ...
    def mouseGrabberItem(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def palette(*args, **kwargs): ...
    def removeItem(*args, **kwargs): ...
    def render(*args, **kwargs): ...
    def sceneRect(*args, **kwargs): ...
    def selectedItems(*args, **kwargs): ...
    def selectionArea(*args, **kwargs): ...
    def sendEvent(*args, **kwargs): ...
    def setActivePanel(*args, **kwargs): ...
    def setActiveWindow(*args, **kwargs): ...
    def setBackgroundBrush(*args, **kwargs): ...
    def setBspTreeDepth(*args, **kwargs): ...
    def setFocus(*args, **kwargs): ...
    def setFocusItem(*args, **kwargs): ...
    def setFont(*args, **kwargs): ...
    def setForegroundBrush(*args, **kwargs): ...
    def setItemIndexMethod(*args, **kwargs): ...
    def setMinimumRenderSize(*args, **kwargs): ...
    def setPalette(*args, **kwargs): ...
    def setSceneRect(*args, **kwargs): ...
    def setSelectionArea(*args, **kwargs): ...
    def setSortCacheEnabled(*args, **kwargs): ...
    def setStickyFocus(*args, **kwargs): ...
    def setStyle(*args, **kwargs): ...
    def stickyFocus(*args, **kwargs): ...
    def style(*args, **kwargs): ...
    def update(*args, **kwargs): ...
    def views(*args, **kwargs): ...
    def wheelEvent(*args, **kwargs): ...
    def width(*args, **kwargs): ...
    AllLayers : SceneLayer
    
    BackgroundLayer : SceneLayer
    
    BspTreeIndex : ItemIndexMethod
    
    ForegroundLayer : SceneLayer
    
    ItemIndexMethod : Type[ItemIndexMethod]
    
    ItemLayer : SceneLayer
    
    NoIndex : ItemIndexMethod
    
    SceneLayer : Type[SceneLayer]
    
    SceneLayers : Type[SceneLayers]
    
    __new__ : builtin_function_or_method
    
    changed : PySide2.QtCore.Signal
    
    focusItemChanged : PySide2.QtCore.Signal
    
    sceneRectChanged : PySide2.QtCore.Signal
    
    selectionChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QFileSystemModel(_QAbstractItemModel):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def canFetchMore(*args, **kwargs): ...
    def columnCount(*args, **kwargs): ...
    def data(*args, **kwargs): ...
    def dropMimeData(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def fetchMore(*args, **kwargs): ...
    def fileIcon(*args, **kwargs): ...
    def fileInfo(*args, **kwargs): ...
    def fileName(*args, **kwargs): ...
    def filePath(*args, **kwargs): ...
    def filter(*args, **kwargs): ...
    def flags(*args, **kwargs): ...
    def hasChildren(*args, **kwargs): ...
    def headerData(*args, **kwargs): ...
    def iconProvider(*args, **kwargs): ...
    def index(*args, **kwargs): ...
    def isDir(*args, **kwargs): ...
    def isReadOnly(*args, **kwargs): ...
    def lastModified(*args, **kwargs): ...
    def mimeData(*args, **kwargs): ...
    def mimeTypes(*args, **kwargs): ...
    def mkdir(*args, **kwargs): ...
    def myComputer(*args, **kwargs): ...
    def nameFilterDisables(*args, **kwargs): ...
    def nameFilters(*args, **kwargs): ...
    def parent(*args, **kwargs): ...
    def remove(*args, **kwargs): ...
    def resolveSymlinks(*args, **kwargs): ...
    def rmdir(*args, **kwargs): ...
    def rootDirectory(*args, **kwargs): ...
    def rootPath(*args, **kwargs): ...
    def rowCount(*args, **kwargs): ...
    def setData(*args, **kwargs): ...
    def setFilter(*args, **kwargs): ...
    def setIconProvider(*args, **kwargs): ...
    def setNameFilterDisables(*args, **kwargs): ...
    def setNameFilters(*args, **kwargs): ...
    def setReadOnly(*args, **kwargs): ...
    def setResolveSymlinks(*args, **kwargs): ...
    def setRootPath(*args, **kwargs): ...
    def size(*args, **kwargs): ...
    def sort(*args, **kwargs): ...
    def supportedDropActions(*args, **kwargs): ...
    def timerEvent(*args, **kwargs): ...
    def type(*args, **kwargs): ...
    FileIconRole : Roles
    
    FileNameRole : Roles
    
    FilePathRole : Roles
    
    FilePermissions : Roles
    
    Roles : Type[Roles]
    
    __new__ : builtin_function_or_method
    
    directoryLoaded : PySide2.QtCore.Signal
    
    fileRenamed : PySide2.QtCore.Signal
    
    rootPathChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QButtonGroup(_QObject):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addButton(*args, **kwargs): ...
    def button(*args, **kwargs): ...
    def buttons(*args, **kwargs): ...
    def checkedButton(*args, **kwargs): ...
    def checkedId(*args, **kwargs): ...
    def exclusive(*args, **kwargs): ...
    def id(*args, **kwargs): ...
    def removeButton(*args, **kwargs): ...
    def setExclusive(*args, **kwargs): ...
    def setId(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    buttonClicked : PySide2.QtCore.Signal
    
    buttonPressed : PySide2.QtCore.Signal
    
    buttonReleased : PySide2.QtCore.Signal
    
    buttonToggled : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QTableWidgetItem(_Object):
    def __eq__(self, other: Any) -> bool:
        """
        x.__eq__(y) <==> x==y
        """
        ...
    def __ge__(self, other: Any) -> bool:
        """
        x.__ge__(y) <==> x>=y
        """
        ...
    def __gt__(self, other: Any) -> bool:
        """
        x.__gt__(y) <==> x>y
        """
        ...
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def __le__(self, other: Any) -> bool:
        """
        x.__le__(y) <==> x<=y
        """
        ...
    def __lshift__(*args, **kwargs):
        """
        x.__lshift__(y) <==> x<<y
        """
        ...
    def __lt__(self, other: Any) -> bool:
        """
        x.__lt__(y) <==> x<y
        """
        ...
    def __ne__(self, other: Any) -> bool:
        """
        x.__ne__(y) <==> x!=y
        """
        ...
    def __rlshift__(*args, **kwargs):
        """
        x.__rlshift__(y) <==> y<<x
        """
        ...
    def __rrshift__(*args, **kwargs):
        """
        x.__rrshift__(y) <==> y>>x
        """
        ...
    def __rshift__(*args, **kwargs):
        """
        x.__rshift__(y) <==> x>>y
        """
        ...
    def background(*args, **kwargs): ...
    def backgroundColor(*args, **kwargs): ...
    def checkState(*args, **kwargs): ...
    def clone(*args, **kwargs): ...
    def column(*args, **kwargs): ...
    def data(*args, **kwargs): ...
    def flags(*args, **kwargs): ...
    def font(*args, **kwargs): ...
    def foreground(*args, **kwargs): ...
    def icon(*args, **kwargs): ...
    def isSelected(*args, **kwargs): ...
    def read(*args, **kwargs): ...
    def row(*args, **kwargs): ...
    def setBackground(*args, **kwargs): ...
    def setBackgroundColor(*args, **kwargs): ...
    def setCheckState(*args, **kwargs): ...
    def setData(*args, **kwargs): ...
    def setFlags(*args, **kwargs): ...
    def setFont(*args, **kwargs): ...
    def setForeground(*args, **kwargs): ...
    def setIcon(*args, **kwargs): ...
    def setSelected(*args, **kwargs): ...
    def setSizeHint(*args, **kwargs): ...
    def setStatusTip(*args, **kwargs): ...
    def setText(*args, **kwargs): ...
    def setTextAlignment(*args, **kwargs): ...
    def setTextColor(*args, **kwargs): ...
    def setToolTip(*args, **kwargs): ...
    def setWhatsThis(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def statusTip(*args, **kwargs): ...
    def tableWidget(*args, **kwargs): ...
    def text(*args, **kwargs): ...
    def textAlignment(*args, **kwargs): ...
    def textColor(*args, **kwargs): ...
    def toolTip(*args, **kwargs): ...
    def type(*args, **kwargs): ...
    def whatsThis(*args, **kwargs): ...
    def write(*args, **kwargs): ...
    ItemType : Type[ItemType]
    
    Type : ItemType
    
    UserType : ItemType
    
    __new__ : builtin_function_or_method


class QUndoGroup(_QObject):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def activeStack(*args, **kwargs): ...
    def addStack(*args, **kwargs): ...
    def canRedo(*args, **kwargs): ...
    def canUndo(*args, **kwargs): ...
    def createRedoAction(*args, **kwargs): ...
    def createUndoAction(*args, **kwargs): ...
    def isClean(*args, **kwargs): ...
    def redo(*args, **kwargs): ...
    def redoText(*args, **kwargs): ...
    def removeStack(*args, **kwargs): ...
    def setActiveStack(*args, **kwargs): ...
    def stacks(*args, **kwargs): ...
    def undo(*args, **kwargs): ...
    def undoText(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    activeStackChanged : PySide2.QtCore.Signal
    
    canRedoChanged : PySide2.QtCore.Signal
    
    canUndoChanged : PySide2.QtCore.Signal
    
    cleanChanged : PySide2.QtCore.Signal
    
    indexChanged : PySide2.QtCore.Signal
    
    redoTextChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    undoTextChanged : PySide2.QtCore.Signal


class QUndoCommand(_Object):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def actionText(*args, **kwargs): ...
    def child(*args, **kwargs): ...
    def childCount(*args, **kwargs): ...
    def id(*args, **kwargs): ...
    def mergeWith(*args, **kwargs): ...
    def redo(*args, **kwargs): ...
    def setText(*args, **kwargs): ...
    def text(*args, **kwargs): ...
    def undo(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QStyleHintReturn(_Object):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    HintReturnType : Type[HintReturnType]
    
    SH_Default : HintReturnType
    
    SH_Mask : HintReturnType
    
    SH_Variant : HintReturnType
    
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    type : getset_descriptor
    
    version : getset_descriptor


class QLayoutItem(_Object):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def alignment(*args, **kwargs): ...
    def controlTypes(*args, **kwargs): ...
    def expandingDirections(*args, **kwargs): ...
    def geometry(*args, **kwargs): ...
    def hasHeightForWidth(*args, **kwargs): ...
    def heightForWidth(*args, **kwargs): ...
    def invalidate(*args, **kwargs): ...
    def isEmpty(*args, **kwargs): ...
    def layout(*args, **kwargs): ...
    def maximumSize(*args, **kwargs): ...
    def minimumHeightForWidth(*args, **kwargs): ...
    def minimumSize(*args, **kwargs): ...
    def setAlignment(*args, **kwargs): ...
    def setGeometry(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def spacerItem(*args, **kwargs): ...
    def widget(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    align : getset_descriptor


class QWidget(_QObject, _QPaintDevice):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def acceptDrops(*args, **kwargs): ...
    def accessibleDescription(*args, **kwargs): ...
    def accessibleName(*args, **kwargs): ...
    def actionEvent(*args, **kwargs): ...
    def actions(*args, **kwargs): ...
    def activateWindow(*args, **kwargs): ...
    def addAction(*args, **kwargs): ...
    def addActions(*args, **kwargs): ...
    def adjustSize(*args, **kwargs): ...
    def autoFillBackground(*args, **kwargs): ...
    def backgroundRole(*args, **kwargs): ...
    def baseSize(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def childAt(*args, **kwargs): ...
    def childrenRect(*args, **kwargs): ...
    def childrenRegion(*args, **kwargs): ...
    def clearFocus(*args, **kwargs): ...
    def clearMask(*args, **kwargs): ...
    def close(*args, **kwargs): ...
    def closeEvent(*args, **kwargs): ...
    def contentsMargins(*args, **kwargs): ...
    def contentsRect(*args, **kwargs): ...
    def contextMenuEvent(*args, **kwargs): ...
    def contextMenuPolicy(*args, **kwargs): ...
    def create(*args, **kwargs): ...
    def createWinId(*args, **kwargs): ...
    def cursor(*args, **kwargs): ...
    def destroy(*args, **kwargs): ...
    def devType(*args, **kwargs): ...
    def dragEnterEvent(*args, **kwargs): ...
    def dragLeaveEvent(*args, **kwargs): ...
    def dragMoveEvent(*args, **kwargs): ...
    def dropEvent(*args, **kwargs): ...
    def effectiveWinId(*args, **kwargs): ...
    def ensurePolished(*args, **kwargs): ...
    def enterEvent(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def focusInEvent(*args, **kwargs): ...
    def focusNextChild(*args, **kwargs): ...
    def focusNextPrevChild(*args, **kwargs): ...
    def focusOutEvent(*args, **kwargs): ...
    def focusPolicy(*args, **kwargs): ...
    def focusPreviousChild(*args, **kwargs): ...
    def focusProxy(*args, **kwargs): ...
    def focusWidget(*args, **kwargs): ...
    def font(*args, **kwargs): ...
    def fontInfo(*args, **kwargs): ...
    def fontMetrics(*args, **kwargs): ...
    def foregroundRole(*args, **kwargs): ...
    def frameGeometry(*args, **kwargs): ...
    def frameSize(*args, **kwargs): ...
    def geometry(*args, **kwargs): ...
    def getContentsMargins(*args, **kwargs): ...
    def grab(*args, **kwargs): ...
    def grabGesture(*args, **kwargs): ...
    def grabKeyboard(*args, **kwargs): ...
    def grabMouse(*args, **kwargs): ...
    def grabShortcut(*args, **kwargs): ...
    def graphicsEffect(*args, **kwargs): ...
    def graphicsProxyWidget(*args, **kwargs): ...
    def hasFocus(*args, **kwargs): ...
    def hasHeightForWidth(*args, **kwargs): ...
    def hasMouseTracking(*args, **kwargs): ...
    def height(*args, **kwargs): ...
    def heightForWidth(*args, **kwargs): ...
    def hide(*args, **kwargs): ...
    def hideEvent(*args, **kwargs): ...
    def initPainter(*args, **kwargs): ...
    def inputMethodEvent(*args, **kwargs): ...
    def inputMethodHints(*args, **kwargs): ...
    def inputMethodQuery(*args, **kwargs): ...
    def insertAction(*args, **kwargs): ...
    def insertActions(*args, **kwargs): ...
    def internalWinId(*args, **kwargs): ...
    def isActiveWindow(*args, **kwargs): ...
    def isAncestorOf(*args, **kwargs): ...
    def isEnabled(*args, **kwargs): ...
    def isEnabledTo(*args, **kwargs): ...
    def isEnabledToTLW(*args, **kwargs): ...
    def isFullScreen(*args, **kwargs): ...
    def isHidden(*args, **kwargs): ...
    def isLeftToRight(*args, **kwargs): ...
    def isMaximized(*args, **kwargs): ...
    def isMinimized(*args, **kwargs): ...
    def isModal(*args, **kwargs): ...
    def isRightToLeft(*args, **kwargs): ...
    def isTopLevel(*args, **kwargs): ...
    def isVisible(*args, **kwargs): ...
    def isVisibleTo(*args, **kwargs): ...
    def isWindow(*args, **kwargs): ...
    def isWindowModified(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def keyReleaseEvent(*args, **kwargs): ...
    def layout(*args, **kwargs): ...
    def layoutDirection(*args, **kwargs): ...
    def leaveEvent(*args, **kwargs): ...
    def locale(*args, **kwargs): ...
    def lower(*args, **kwargs): ...
    def mapFrom(*args, **kwargs): ...
    def mapFromGlobal(*args, **kwargs): ...
    def mapFromParent(*args, **kwargs): ...
    def mapTo(*args, **kwargs): ...
    def mapToGlobal(*args, **kwargs): ...
    def mapToParent(*args, **kwargs): ...
    def mask(*args, **kwargs): ...
    def maximumHeight(*args, **kwargs): ...
    def maximumSize(*args, **kwargs): ...
    def maximumWidth(*args, **kwargs): ...
    def metric(*args, **kwargs): ...
    def minimumHeight(*args, **kwargs): ...
    def minimumSize(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def minimumWidth(*args, **kwargs): ...
    def mouseDoubleClickEvent(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def move(*args, **kwargs): ...
    def moveEvent(*args, **kwargs): ...
    def nativeParentWidget(*args, **kwargs): ...
    def nextInFocusChain(*args, **kwargs): ...
    def normalGeometry(*args, **kwargs): ...
    def overrideWindowFlags(*args, **kwargs): ...
    def overrideWindowState(*args, **kwargs): ...
    def paintEngine(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def palette(*args, **kwargs): ...
    def parentWidget(*args, **kwargs): ...
    def pos(*args, **kwargs): ...
    def previousInFocusChain(*args, **kwargs): ...
    def raise_(*args, **kwargs): ...
    def rect(*args, **kwargs): ...
    def redirected(*args, **kwargs): ...
    def releaseKeyboard(*args, **kwargs): ...
    def releaseMouse(*args, **kwargs): ...
    def releaseShortcut(*args, **kwargs): ...
    def removeAction(*args, **kwargs): ...
    def render(*args, **kwargs): ...
    def repaint(*args, **kwargs): ...
    def resize(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def restoreGeometry(*args, **kwargs): ...
    def saveGeometry(*args, **kwargs): ...
    def scroll(*args, **kwargs): ...
    def setAcceptDrops(*args, **kwargs): ...
    def setAccessibleDescription(*args, **kwargs): ...
    def setAccessibleName(*args, **kwargs): ...
    def setAttribute(*args, **kwargs): ...
    def setAutoFillBackground(*args, **kwargs): ...
    def setBackgroundRole(*args, **kwargs): ...
    def setBaseSize(*args, **kwargs): ...
    def setContentsMargins(*args, **kwargs): ...
    def setContextMenuPolicy(*args, **kwargs): ...
    def setCursor(*args, **kwargs): ...
    def setDisabled(*args, **kwargs): ...
    def setEnabled(*args, **kwargs): ...
    def setFixedHeight(*args, **kwargs): ...
    def setFixedSize(*args, **kwargs): ...
    def setFixedWidth(*args, **kwargs): ...
    def setFocus(*args, **kwargs): ...
    def setFocusPolicy(*args, **kwargs): ...
    def setFocusProxy(*args, **kwargs): ...
    def setFont(*args, **kwargs): ...
    def setForegroundRole(*args, **kwargs): ...
    def setGeometry(*args, **kwargs): ...
    def setGraphicsEffect(*args, **kwargs): ...
    def setHidden(*args, **kwargs): ...
    def setInputMethodHints(*args, **kwargs): ...
    def setLayout(*args, **kwargs): ...
    def setLayoutDirection(*args, **kwargs): ...
    def setLocale(*args, **kwargs): ...
    def setMask(*args, **kwargs): ...
    def setMaximumHeight(*args, **kwargs): ...
    def setMaximumSize(*args, **kwargs): ...
    def setMaximumWidth(*args, **kwargs): ...
    def setMinimumHeight(*args, **kwargs): ...
    def setMinimumSize(*args, **kwargs): ...
    def setMinimumWidth(*args, **kwargs): ...
    def setMouseTracking(*args, **kwargs): ...
    def setPalette(*args, **kwargs): ...
    def setParent(*args, **kwargs): ...
    def setShortcutAutoRepeat(*args, **kwargs): ...
    def setShortcutEnabled(*args, **kwargs): ...
    def setSizeIncrement(*args, **kwargs): ...
    def setSizePolicy(*args, **kwargs): ...
    def setStatusTip(*args, **kwargs): ...
    def setStyle(*args, **kwargs): ...
    def setStyleSheet(*args, **kwargs): ...
    def setToolTip(*args, **kwargs): ...
    def setToolTipDuration(*args, **kwargs): ...
    def setUpdatesEnabled(*args, **kwargs): ...
    def setVisible(*args, **kwargs): ...
    def setWhatsThis(*args, **kwargs): ...
    def setWindowFilePath(*args, **kwargs): ...
    def setWindowFlags(*args, **kwargs): ...
    def setWindowIcon(*args, **kwargs): ...
    def setWindowIconText(*args, **kwargs): ...
    def setWindowModality(*args, **kwargs): ...
    def setWindowModified(*args, **kwargs): ...
    def setWindowOpacity(*args, **kwargs): ...
    def setWindowRole(*args, **kwargs): ...
    def setWindowState(*args, **kwargs): ...
    def setWindowTitle(*args, **kwargs): ...
    def sharedPainter(*args, **kwargs): ...
    def show(*args, **kwargs): ...
    def showEvent(*args, **kwargs): ...
    def showFullScreen(*args, **kwargs): ...
    def showMaximized(*args, **kwargs): ...
    def showMinimized(*args, **kwargs): ...
    def showNormal(*args, **kwargs): ...
    def size(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def sizeIncrement(*args, **kwargs): ...
    def sizePolicy(*args, **kwargs): ...
    def stackUnder(*args, **kwargs): ...
    def statusTip(*args, **kwargs): ...
    def style(*args, **kwargs): ...
    def styleSheet(*args, **kwargs): ...
    def tabletEvent(*args, **kwargs): ...
    def testAttribute(*args, **kwargs): ...
    def toolTip(*args, **kwargs): ...
    def toolTipDuration(*args, **kwargs): ...
    def topLevelWidget(*args, **kwargs): ...
    def underMouse(*args, **kwargs): ...
    def ungrabGesture(*args, **kwargs): ...
    def unsetCursor(*args, **kwargs): ...
    def unsetLayoutDirection(*args, **kwargs): ...
    def unsetLocale(*args, **kwargs): ...
    def update(*args, **kwargs): ...
    def updateGeometry(*args, **kwargs): ...
    def updateMicroFocus(*args, **kwargs): ...
    def updatesEnabled(*args, **kwargs): ...
    def visibleRegion(*args, **kwargs): ...
    def whatsThis(*args, **kwargs): ...
    def wheelEvent(*args, **kwargs): ...
    def width(*args, **kwargs): ...
    def winId(*args, **kwargs): ...
    def window(*args, **kwargs): ...
    def windowFilePath(*args, **kwargs): ...
    def windowFlags(*args, **kwargs): ...
    def windowHandle(*args, **kwargs): ...
    def windowIcon(*args, **kwargs): ...
    def windowIconText(*args, **kwargs): ...
    def windowModality(*args, **kwargs): ...
    def windowOpacity(*args, **kwargs): ...
    def windowRole(*args, **kwargs): ...
    def windowState(*args, **kwargs): ...
    def windowTitle(*args, **kwargs): ...
    def windowType(*args, **kwargs): ...
    def x(*args, **kwargs): ...
    def y(*args, **kwargs): ...
    @staticmethod
    def createWindowContainer(*args, **kwargs): ...
    @staticmethod
    def find(*args, **kwargs): ...
    @staticmethod
    def keyboardGrabber(*args, **kwargs): ...
    @staticmethod
    def mouseGrabber(*args, **kwargs): ...
    @staticmethod
    def setTabOrder(*args, **kwargs): ...
    DrawChildren : RenderFlag
    
    DrawWindowBackground : RenderFlag
    
    IgnoreMask : RenderFlag
    
    RenderFlag : Type[RenderFlag]
    
    RenderFlags : Type[RenderFlags]
    
    __new__ : builtin_function_or_method
    
    customContextMenuRequested : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    windowIconChanged : PySide2.QtCore.Signal
    
    windowIconTextChanged : PySide2.QtCore.Signal
    
    windowTitleChanged : PySide2.QtCore.Signal


class QActionGroup(_QObject):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def actions(*args, **kwargs): ...
    def addAction(*args, **kwargs): ...
    def checkedAction(*args, **kwargs): ...
    def isEnabled(*args, **kwargs): ...
    def isExclusive(*args, **kwargs): ...
    def isVisible(*args, **kwargs): ...
    def removeAction(*args, **kwargs): ...
    def setDisabled(*args, **kwargs): ...
    def setEnabled(*args, **kwargs): ...
    def setExclusive(*args, **kwargs): ...
    def setVisible(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    hovered : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    triggered : PySide2.QtCore.Signal


class QCompleter(_QObject):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def caseSensitivity(*args, **kwargs): ...
    def complete(*args, **kwargs): ...
    def completionColumn(*args, **kwargs): ...
    def completionCount(*args, **kwargs): ...
    def completionMode(*args, **kwargs): ...
    def completionModel(*args, **kwargs): ...
    def completionPrefix(*args, **kwargs): ...
    def completionRole(*args, **kwargs): ...
    def currentCompletion(*args, **kwargs): ...
    def currentIndex(*args, **kwargs): ...
    def currentRow(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def eventFilter(*args, **kwargs): ...
    def filterMode(*args, **kwargs): ...
    def maxVisibleItems(*args, **kwargs): ...
    def model(*args, **kwargs): ...
    def modelSorting(*args, **kwargs): ...
    def pathFromIndex(*args, **kwargs): ...
    def popup(*args, **kwargs): ...
    def setCaseSensitivity(*args, **kwargs): ...
    def setCompletionColumn(*args, **kwargs): ...
    def setCompletionMode(*args, **kwargs): ...
    def setCompletionPrefix(*args, **kwargs): ...
    def setCompletionRole(*args, **kwargs): ...
    def setCurrentRow(*args, **kwargs): ...
    def setFilterMode(*args, **kwargs): ...
    def setMaxVisibleItems(*args, **kwargs): ...
    def setModel(*args, **kwargs): ...
    def setModelSorting(*args, **kwargs): ...
    def setPopup(*args, **kwargs): ...
    def setWidget(*args, **kwargs): ...
    def setWrapAround(*args, **kwargs): ...
    def splitPath(*args, **kwargs): ...
    def widget(*args, **kwargs): ...
    def wrapAround(*args, **kwargs): ...
    CaseInsensitivelySortedModel : ModelSorting
    
    CaseSensitivelySortedModel : ModelSorting
    
    CompletionMode : Type[CompletionMode]
    
    InlineCompletion : CompletionMode
    
    ModelSorting : Type[ModelSorting]
    
    PopupCompletion : CompletionMode
    
    UnfilteredPopupCompletion : CompletionMode
    
    UnsortedModel : ModelSorting
    
    __new__ : builtin_function_or_method
    
    activated : PySide2.QtCore.Signal
    
    highlighted : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QTileRules(_Object):
    def __copy__(*args, **kwargs): ...
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    __new__ : builtin_function_or_method
    
    horizontal : getset_descriptor
    
    vertical : getset_descriptor


class QGraphicsItem(_Object):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def __repr__(self) -> str:
        """
        x.__repr__() <==> repr(x)
        """
        ...
    def acceptDrops(*args, **kwargs): ...
    def acceptHoverEvents(*args, **kwargs): ...
    def acceptTouchEvents(*args, **kwargs): ...
    def acceptedMouseButtons(*args, **kwargs): ...
    def addToIndex(*args, **kwargs): ...
    def advance(*args, **kwargs): ...
    def boundingRect(*args, **kwargs): ...
    def boundingRegion(*args, **kwargs): ...
    def boundingRegionGranularity(*args, **kwargs): ...
    def cacheMode(*args, **kwargs): ...
    def childItems(*args, **kwargs): ...
    def childrenBoundingRect(*args, **kwargs): ...
    def clearFocus(*args, **kwargs): ...
    def clipPath(*args, **kwargs): ...
    def collidesWithItem(*args, **kwargs): ...
    def collidesWithPath(*args, **kwargs): ...
    def collidingItems(*args, **kwargs): ...
    def commonAncestorItem(*args, **kwargs): ...
    def contains(*args, **kwargs): ...
    def contextMenuEvent(*args, **kwargs): ...
    def cursor(*args, **kwargs): ...
    def data(*args, **kwargs): ...
    def deviceTransform(*args, **kwargs): ...
    def dragEnterEvent(*args, **kwargs): ...
    def dragLeaveEvent(*args, **kwargs): ...
    def dragMoveEvent(*args, **kwargs): ...
    def dropEvent(*args, **kwargs): ...
    def effectiveOpacity(*args, **kwargs): ...
    def ensureVisible(*args, **kwargs): ...
    def extension(*args, **kwargs): ...
    def filtersChildEvents(*args, **kwargs): ...
    def flags(*args, **kwargs): ...
    def focusInEvent(*args, **kwargs): ...
    def focusItem(*args, **kwargs): ...
    def focusOutEvent(*args, **kwargs): ...
    def focusProxy(*args, **kwargs): ...
    def focusScopeItem(*args, **kwargs): ...
    def grabKeyboard(*args, **kwargs): ...
    def grabMouse(*args, **kwargs): ...
    def graphicsEffect(*args, **kwargs): ...
    def group(*args, **kwargs): ...
    def handlesChildEvents(*args, **kwargs): ...
    def hasCursor(*args, **kwargs): ...
    def hasFocus(*args, **kwargs): ...
    def hide(*args, **kwargs): ...
    def hoverEnterEvent(*args, **kwargs): ...
    def hoverLeaveEvent(*args, **kwargs): ...
    def hoverMoveEvent(*args, **kwargs): ...
    def inputMethodEvent(*args, **kwargs): ...
    def inputMethodHints(*args, **kwargs): ...
    def inputMethodQuery(*args, **kwargs): ...
    def installSceneEventFilter(*args, **kwargs): ...
    def isActive(*args, **kwargs): ...
    def isAncestorOf(*args, **kwargs): ...
    def isBlockedByModalPanel(*args, **kwargs): ...
    def isClipped(*args, **kwargs): ...
    def isEnabled(*args, **kwargs): ...
    def isObscured(*args, **kwargs): ...
    def isObscuredBy(*args, **kwargs): ...
    def isPanel(*args, **kwargs): ...
    def isSelected(*args, **kwargs): ...
    def isUnderMouse(*args, **kwargs): ...
    def isVisible(*args, **kwargs): ...
    def isVisibleTo(*args, **kwargs): ...
    def isWidget(*args, **kwargs): ...
    def isWindow(*args, **kwargs): ...
    def itemChange(*args, **kwargs): ...
    def itemTransform(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def keyReleaseEvent(*args, **kwargs): ...
    def mapFromItem(*args, **kwargs): ...
    def mapFromParent(*args, **kwargs): ...
    def mapFromScene(*args, **kwargs): ...
    def mapRectFromItem(*args, **kwargs): ...
    def mapRectFromParent(*args, **kwargs): ...
    def mapRectFromScene(*args, **kwargs): ...
    def mapRectToItem(*args, **kwargs): ...
    def mapRectToParent(*args, **kwargs): ...
    def mapRectToScene(*args, **kwargs): ...
    def mapToItem(*args, **kwargs): ...
    def mapToParent(*args, **kwargs): ...
    def mapToScene(*args, **kwargs): ...
    def matrix(*args, **kwargs): ...
    def mouseDoubleClickEvent(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def moveBy(*args, **kwargs): ...
    def opacity(*args, **kwargs): ...
    def opaqueArea(*args, **kwargs): ...
    def paint(*args, **kwargs): ...
    def panel(*args, **kwargs): ...
    def panelModality(*args, **kwargs): ...
    def parentItem(*args, **kwargs): ...
    def parentObject(*args, **kwargs): ...
    def parentWidget(*args, **kwargs): ...
    def pos(*args, **kwargs): ...
    def prepareGeometryChange(*args, **kwargs): ...
    def removeFromIndex(*args, **kwargs): ...
    def removeSceneEventFilter(*args, **kwargs): ...
    def resetMatrix(*args, **kwargs): ...
    def resetTransform(*args, **kwargs): ...
    def rotation(*args, **kwargs): ...
    def scale(*args, **kwargs): ...
    def scene(*args, **kwargs): ...
    def sceneBoundingRect(*args, **kwargs): ...
    def sceneEvent(*args, **kwargs): ...
    def sceneEventFilter(*args, **kwargs): ...
    def sceneMatrix(*args, **kwargs): ...
    def scenePos(*args, **kwargs): ...
    def sceneTransform(*args, **kwargs): ...
    def scroll(*args, **kwargs): ...
    def setAcceptDrops(*args, **kwargs): ...
    def setAcceptHoverEvents(*args, **kwargs): ...
    def setAcceptTouchEvents(*args, **kwargs): ...
    def setAcceptedMouseButtons(*args, **kwargs): ...
    def setActive(*args, **kwargs): ...
    def setBoundingRegionGranularity(*args, **kwargs): ...
    def setCacheMode(*args, **kwargs): ...
    def setCursor(*args, **kwargs): ...
    def setData(*args, **kwargs): ...
    def setEnabled(*args, **kwargs): ...
    def setFiltersChildEvents(*args, **kwargs): ...
    def setFlag(*args, **kwargs): ...
    def setFlags(*args, **kwargs): ...
    def setFocus(*args, **kwargs): ...
    def setFocusProxy(*args, **kwargs): ...
    def setGraphicsEffect(*args, **kwargs): ...
    def setGroup(*args, **kwargs): ...
    def setHandlesChildEvents(*args, **kwargs): ...
    def setInputMethodHints(*args, **kwargs): ...
    def setMatrix(*args, **kwargs): ...
    def setOpacity(*args, **kwargs): ...
    def setPanelModality(*args, **kwargs): ...
    def setParentItem(*args, **kwargs): ...
    def setPos(*args, **kwargs): ...
    def setRotation(*args, **kwargs): ...
    def setScale(*args, **kwargs): ...
    def setSelected(*args, **kwargs): ...
    def setToolTip(*args, **kwargs): ...
    def setTransform(*args, **kwargs): ...
    def setTransformOriginPoint(*args, **kwargs): ...
    def setTransformations(*args, **kwargs): ...
    def setVisible(*args, **kwargs): ...
    def setX(*args, **kwargs): ...
    def setY(*args, **kwargs): ...
    def setZValue(*args, **kwargs): ...
    def shape(*args, **kwargs): ...
    def show(*args, **kwargs): ...
    def stackBefore(*args, **kwargs): ...
    def toGraphicsObject(*args, **kwargs): ...
    def toolTip(*args, **kwargs): ...
    def topLevelItem(*args, **kwargs): ...
    def topLevelWidget(*args, **kwargs): ...
    def transform(*args, **kwargs): ...
    def transformOriginPoint(*args, **kwargs): ...
    def transformations(*args, **kwargs): ...
    def type(*args, **kwargs): ...
    def ungrabKeyboard(*args, **kwargs): ...
    def ungrabMouse(*args, **kwargs): ...
    def unsetCursor(*args, **kwargs): ...
    def update(*args, **kwargs): ...
    def updateMicroFocus(*args, **kwargs): ...
    def wheelEvent(*args, **kwargs): ...
    def window(*args, **kwargs): ...
    def x(*args, **kwargs): ...
    def y(*args, **kwargs): ...
    def zValue(*args, **kwargs): ...
    CacheMode : Type[CacheMode]
    
    DeviceCoordinateCache : CacheMode
    
    Extension : Type[Extension]
    
    GraphicsItemChange : Type[GraphicsItemChange]
    
    GraphicsItemFlag : Type[GraphicsItemFlag]
    
    GraphicsItemFlags : Type[GraphicsItemFlags]
    
    ItemAcceptsInputMethod : GraphicsItemFlag
    
    ItemChildAddedChange : GraphicsItemChange
    
    ItemChildRemovedChange : GraphicsItemChange
    
    ItemClipsChildrenToShape : GraphicsItemFlag
    
    ItemClipsToShape : GraphicsItemFlag
    
    ItemContainsChildrenInShape : GraphicsItemFlag
    
    ItemCoordinateCache : CacheMode
    
    ItemCursorChange : GraphicsItemChange
    
    ItemCursorHasChanged : GraphicsItemChange
    
    ItemDoesntPropagateOpacityToChildren : GraphicsItemFlag
    
    ItemEnabledChange : GraphicsItemChange
    
    ItemEnabledHasChanged : GraphicsItemChange
    
    ItemFlagsChange : GraphicsItemChange
    
    ItemFlagsHaveChanged : GraphicsItemChange
    
    ItemHasNoContents : GraphicsItemFlag
    
    ItemIgnoresParentOpacity : GraphicsItemFlag
    
    ItemIgnoresTransformations : GraphicsItemFlag
    
    ItemIsFocusScope : GraphicsItemFlag
    
    ItemIsFocusable : GraphicsItemFlag
    
    ItemIsMovable : GraphicsItemFlag
    
    ItemIsPanel : GraphicsItemFlag
    
    ItemIsSelectable : GraphicsItemFlag
    
    ItemMatrixChange : GraphicsItemChange
    
    ItemNegativeZStacksBehindParent : GraphicsItemFlag
    
    ItemOpacityChange : GraphicsItemChange
    
    ItemOpacityHasChanged : GraphicsItemChange
    
    ItemParentChange : GraphicsItemChange
    
    ItemParentHasChanged : GraphicsItemChange
    
    ItemPositionChange : GraphicsItemChange
    
    ItemPositionHasChanged : GraphicsItemChange
    
    ItemRotationChange : GraphicsItemChange
    
    ItemRotationHasChanged : GraphicsItemChange
    
    ItemScaleChange : GraphicsItemChange
    
    ItemScaleHasChanged : GraphicsItemChange
    
    ItemSceneChange : GraphicsItemChange
    
    ItemSceneHasChanged : GraphicsItemChange
    
    ItemScenePositionHasChanged : GraphicsItemChange
    
    ItemSelectedChange : GraphicsItemChange
    
    ItemSelectedHasChanged : GraphicsItemChange
    
    ItemSendsGeometryChanges : GraphicsItemFlag
    
    ItemSendsScenePositionChanges : GraphicsItemFlag
    
    ItemStacksBehindParent : GraphicsItemFlag
    
    ItemStopsClickFocusPropagation : GraphicsItemFlag
    
    ItemStopsFocusHandling : GraphicsItemFlag
    
    ItemToolTipChange : GraphicsItemChange
    
    ItemToolTipHasChanged : GraphicsItemChange
    
    ItemTransformChange : GraphicsItemChange
    
    ItemTransformHasChanged : GraphicsItemChange
    
    ItemTransformOriginPointChange : GraphicsItemChange
    
    ItemTransformOriginPointHasChanged : GraphicsItemChange
    
    ItemUsesExtendedStyleOption : GraphicsItemFlag
    
    ItemVisibleChange : GraphicsItemChange
    
    ItemVisibleHasChanged : GraphicsItemChange
    
    ItemZValueChange : GraphicsItemChange
    
    ItemZValueHasChanged : GraphicsItemChange
    
    NoCache : CacheMode
    
    NonModal : PanelModality
    
    PanelModal : PanelModality
    
    PanelModality : Type[PanelModality]
    
    SceneModal : PanelModality
    
    UserExtension : Extension
    
    UserType : int
    
    __new__ : builtin_function_or_method


class QGraphicsRotation(QGraphicsTransform):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def angle(*args, **kwargs): ...
    def applyTo(*args, **kwargs): ...
    def axis(*args, **kwargs): ...
    def origin(*args, **kwargs): ...
    def setAngle(*args, **kwargs): ...
    def setAxis(*args, **kwargs): ...
    def setOrigin(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    angleChanged : PySide2.QtCore.Signal
    
    axisChanged : PySide2.QtCore.Signal
    
    originChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QDesktopWidget(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def availableGeometry(*args, **kwargs): ...
    def isVirtualDesktop(*args, **kwargs): ...
    def numScreens(*args, **kwargs): ...
    def primaryScreen(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def screen(*args, **kwargs): ...
    def screenCount(*args, **kwargs): ...
    def screenGeometry(*args, **kwargs): ...
    def screenNumber(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    primaryScreenChanged : PySide2.QtCore.Signal
    
    resized : PySide2.QtCore.Signal
    
    screenCountChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    workAreaResized : PySide2.QtCore.Signal


class QRubberBand(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def changeEvent(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def move(*args, **kwargs): ...
    def moveEvent(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def resize(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def setGeometry(*args, **kwargs): ...
    def shape(*args, **kwargs): ...
    def showEvent(*args, **kwargs): ...
    Line : Shape
    
    Rectangle : Shape
    
    Shape : Type[Shape]
    
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QStyleOptionMenuItem(QStyleOption):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    CheckType : Type[CheckType]
    
    DefaultItem : MenuItemType
    
    EmptyArea : MenuItemType
    
    Exclusive : CheckType
    
    Margin : MenuItemType
    
    MenuItemType : Type[MenuItemType]
    
    NonExclusive : CheckType
    
    Normal : MenuItemType
    
    NotCheckable : CheckType
    
    Scroller : MenuItemType
    
    Separator : MenuItemType
    
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    SubMenu : MenuItemType
    
    TearOff : MenuItemType
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    checkType : getset_descriptor
    
    checked : getset_descriptor
    
    font : getset_descriptor
    
    icon : getset_descriptor
    
    maxIconWidth : getset_descriptor
    
    menuHasCheckableItems : getset_descriptor
    
    menuItemType : getset_descriptor
    
    menuRect : getset_descriptor
    
    tabWidth : getset_descriptor
    
    text : getset_descriptor


class QWizardPage(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def buttonText(*args, **kwargs): ...
    def cleanupPage(*args, **kwargs): ...
    def field(*args, **kwargs): ...
    def initializePage(*args, **kwargs): ...
    def isCommitPage(*args, **kwargs): ...
    def isComplete(*args, **kwargs): ...
    def isFinalPage(*args, **kwargs): ...
    def nextId(*args, **kwargs): ...
    def pixmap(*args, **kwargs): ...
    def registerField(*args, **kwargs): ...
    def setButtonText(*args, **kwargs): ...
    def setCommitPage(*args, **kwargs): ...
    def setField(*args, **kwargs): ...
    def setFinalPage(*args, **kwargs): ...
    def setPixmap(*args, **kwargs): ...
    def setSubTitle(*args, **kwargs): ...
    def setTitle(*args, **kwargs): ...
    def subTitle(*args, **kwargs): ...
    def title(*args, **kwargs): ...
    def validatePage(*args, **kwargs): ...
    def wizard(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    completeChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QStyleOptionToolBox(QStyleOption):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    Beginning : TabPosition
    
    End : TabPosition
    
    Middle : TabPosition
    
    NextIsSelected : SelectedPosition
    
    NotAdjacent : SelectedPosition
    
    OnlyOneTab : TabPosition
    
    PreviousIsSelected : SelectedPosition
    
    SelectedPosition : Type[SelectedPosition]
    
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    TabPosition : Type[TabPosition]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    icon : getset_descriptor
    
    position : getset_descriptor
    
    selectedPosition : getset_descriptor
    
    text : getset_descriptor


class QItemDelegate(QAbstractItemDelegate):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def createEditor(*args, **kwargs): ...
    def decoration(*args, **kwargs): ...
    def doCheck(*args, **kwargs): ...
    def drawBackground(*args, **kwargs): ...
    def drawCheck(*args, **kwargs): ...
    def drawDecoration(*args, **kwargs): ...
    def drawDisplay(*args, **kwargs): ...
    def drawFocus(*args, **kwargs): ...
    def editorEvent(*args, **kwargs): ...
    def eventFilter(*args, **kwargs): ...
    def hasClipping(*args, **kwargs): ...
    def itemEditorFactory(*args, **kwargs): ...
    def paint(*args, **kwargs): ...
    def rect(*args, **kwargs): ...
    def setClipping(*args, **kwargs): ...
    def setEditorData(*args, **kwargs): ...
    def setItemEditorFactory(*args, **kwargs): ...
    def setModelData(*args, **kwargs): ...
    def setOptions(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def textRectangle(*args, **kwargs): ...
    def updateEditorGeometry(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QCalendarWidget(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def dateEditAcceptDelay(*args, **kwargs): ...
    def dateTextFormat(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def eventFilter(*args, **kwargs): ...
    def firstDayOfWeek(*args, **kwargs): ...
    def headerTextFormat(*args, **kwargs): ...
    def horizontalHeaderFormat(*args, **kwargs): ...
    def isDateEditEnabled(*args, **kwargs): ...
    def isGridVisible(*args, **kwargs): ...
    def isNavigationBarVisible(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def maximumDate(*args, **kwargs): ...
    def minimumDate(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def monthShown(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def paintCell(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def selectedDate(*args, **kwargs): ...
    def selectionMode(*args, **kwargs): ...
    def setCurrentPage(*args, **kwargs): ...
    def setDateEditAcceptDelay(*args, **kwargs): ...
    def setDateEditEnabled(*args, **kwargs): ...
    def setDateRange(*args, **kwargs): ...
    def setDateTextFormat(*args, **kwargs): ...
    def setFirstDayOfWeek(*args, **kwargs): ...
    def setGridVisible(*args, **kwargs): ...
    def setHeaderTextFormat(*args, **kwargs): ...
    def setHorizontalHeaderFormat(*args, **kwargs): ...
    def setMaximumDate(*args, **kwargs): ...
    def setMinimumDate(*args, **kwargs): ...
    def setNavigationBarVisible(*args, **kwargs): ...
    def setSelectedDate(*args, **kwargs): ...
    def setSelectionMode(*args, **kwargs): ...
    def setVerticalHeaderFormat(*args, **kwargs): ...
    def setWeekdayTextFormat(*args, **kwargs): ...
    def showNextMonth(*args, **kwargs): ...
    def showNextYear(*args, **kwargs): ...
    def showPreviousMonth(*args, **kwargs): ...
    def showPreviousYear(*args, **kwargs): ...
    def showSelectedDate(*args, **kwargs): ...
    def showToday(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def updateCell(*args, **kwargs): ...
    def updateCells(*args, **kwargs): ...
    def verticalHeaderFormat(*args, **kwargs): ...
    def weekdayTextFormat(*args, **kwargs): ...
    def yearShown(*args, **kwargs): ...
    HorizontalHeaderFormat : Type[HorizontalHeaderFormat]
    
    ISOWeekNumbers : VerticalHeaderFormat
    
    LongDayNames : HorizontalHeaderFormat
    
    NoHorizontalHeader : HorizontalHeaderFormat
    
    NoSelection : SelectionMode
    
    NoVerticalHeader : VerticalHeaderFormat
    
    SelectionMode : Type[SelectionMode]
    
    ShortDayNames : HorizontalHeaderFormat
    
    SingleLetterDayNames : HorizontalHeaderFormat
    
    SingleSelection : SelectionMode
    
    VerticalHeaderFormat : Type[VerticalHeaderFormat]
    
    __new__ : builtin_function_or_method
    
    activated : PySide2.QtCore.Signal
    
    clicked : PySide2.QtCore.Signal
    
    currentPageChanged : PySide2.QtCore.Signal
    
    selectionChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QGraphicsSceneMoveEvent(QGraphicsSceneEvent):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def newPos(*args, **kwargs): ...
    def oldPos(*args, **kwargs): ...
    def setNewPos(*args, **kwargs): ...
    def setOldPos(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QStyleHintReturnVariant(QStyleHintReturn):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    variant : getset_descriptor


class QAbstractGraphicsShapeItem(QGraphicsItem):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def brush(*args, **kwargs): ...
    def isObscuredBy(*args, **kwargs): ...
    def opaqueArea(*args, **kwargs): ...
    def pen(*args, **kwargs): ...
    def setBrush(*args, **kwargs): ...
    def setPen(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QMenuBar(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def actionAt(*args, **kwargs): ...
    def actionEvent(*args, **kwargs): ...
    def actionGeometry(*args, **kwargs): ...
    def activeAction(*args, **kwargs): ...
    def addAction(*args, **kwargs): ...
    def addMenu(*args, **kwargs): ...
    def addSeparator(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def clear(*args, **kwargs): ...
    def cornerWidget(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def eventFilter(*args, **kwargs): ...
    def focusInEvent(*args, **kwargs): ...
    def focusOutEvent(*args, **kwargs): ...
    def heightForWidth(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def insertMenu(*args, **kwargs): ...
    def insertSeparator(*args, **kwargs): ...
    def isDefaultUp(*args, **kwargs): ...
    def isNativeMenuBar(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def leaveEvent(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def setActiveAction(*args, **kwargs): ...
    def setCornerWidget(*args, **kwargs): ...
    def setDefaultUp(*args, **kwargs): ...
    def setNativeMenuBar(*args, **kwargs): ...
    def setVisible(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def timerEvent(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    hovered : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    triggered : PySide2.QtCore.Signal


class QStyleOptionFocusRect(QStyleOption):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    backgroundColor : getset_descriptor


class QSpacerItem(QLayoutItem):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def changeSize(*args, **kwargs): ...
    def expandingDirections(*args, **kwargs): ...
    def geometry(*args, **kwargs): ...
    def isEmpty(*args, **kwargs): ...
    def maximumSize(*args, **kwargs): ...
    def minimumSize(*args, **kwargs): ...
    def setGeometry(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def sizePolicy(*args, **kwargs): ...
    def spacerItem(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QStyleOptionTab(QStyleOption):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    Beginning : TabPosition
    
    CornerWidget : Type[CornerWidget]
    
    CornerWidgets : Type[CornerWidgets]
    
    End : TabPosition
    
    HasFrame : TabFeature
    
    LeftCornerWidget : CornerWidget
    
    Middle : TabPosition
    
    NextIsSelected : SelectedPosition
    
    NoCornerWidgets : CornerWidget
    
    locals()['None'] : TabFeature
    
    NotAdjacent : SelectedPosition
    
    OnlyOneTab : TabPosition
    
    PreviousIsSelected : SelectedPosition
    
    RightCornerWidget : CornerWidget
    
    SelectedPosition : Type[SelectedPosition]
    
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    TabFeature : Type[TabFeature]
    
    TabFeatures : Type[TabFeatures]
    
    TabPosition : Type[TabPosition]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    cornerWidgets : getset_descriptor
    
    documentMode : getset_descriptor
    
    features : getset_descriptor
    
    icon : getset_descriptor
    
    iconSize : getset_descriptor
    
    leftButtonSize : getset_descriptor
    
    position : getset_descriptor
    
    rightButtonSize : getset_descriptor
    
    row : getset_descriptor
    
    selectedPosition : getset_descriptor
    
    shape : getset_descriptor
    
    text : getset_descriptor


class QAbstractButton(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def animateClick(*args, **kwargs): ...
    def autoExclusive(*args, **kwargs): ...
    def autoRepeat(*args, **kwargs): ...
    def autoRepeatDelay(*args, **kwargs): ...
    def autoRepeatInterval(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def checkStateSet(*args, **kwargs): ...
    def click(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def focusInEvent(*args, **kwargs): ...
    def focusOutEvent(*args, **kwargs): ...
    def group(*args, **kwargs): ...
    def hitButton(*args, **kwargs): ...
    def icon(*args, **kwargs): ...
    def iconSize(*args, **kwargs): ...
    def isCheckable(*args, **kwargs): ...
    def isChecked(*args, **kwargs): ...
    def isDown(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def keyReleaseEvent(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def nextCheckState(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def setAutoExclusive(*args, **kwargs): ...
    def setAutoRepeat(*args, **kwargs): ...
    def setAutoRepeatDelay(*args, **kwargs): ...
    def setAutoRepeatInterval(*args, **kwargs): ...
    def setCheckable(*args, **kwargs): ...
    def setChecked(*args, **kwargs): ...
    def setDown(*args, **kwargs): ...
    def setIcon(*args, **kwargs): ...
    def setIconSize(*args, **kwargs): ...
    def setShortcut(*args, **kwargs): ...
    def setText(*args, **kwargs): ...
    def shortcut(*args, **kwargs): ...
    def text(*args, **kwargs): ...
    def timerEvent(*args, **kwargs): ...
    def toggle(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    clicked : PySide2.QtCore.Signal
    
    pressed : PySide2.QtCore.Signal
    
    released : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    toggled : PySide2.QtCore.Signal


class QGraphicsPixmapItem(QGraphicsItem):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def boundingRect(*args, **kwargs): ...
    def contains(*args, **kwargs): ...
    def extension(*args, **kwargs): ...
    def isObscuredBy(*args, **kwargs): ...
    def offset(*args, **kwargs): ...
    def opaqueArea(*args, **kwargs): ...
    def paint(*args, **kwargs): ...
    def pixmap(*args, **kwargs): ...
    def setOffset(*args, **kwargs): ...
    def setPixmap(*args, **kwargs): ...
    def setShapeMode(*args, **kwargs): ...
    def setTransformationMode(*args, **kwargs): ...
    def shape(*args, **kwargs): ...
    def shapeMode(*args, **kwargs): ...
    def transformationMode(*args, **kwargs): ...
    def type(*args, **kwargs): ...
    BoundingRectShape : ShapeMode
    
    HeuristicMaskShape : ShapeMode
    
    MaskShape : ShapeMode
    
    ShapeMode : Type[ShapeMode]
    
    __new__ : builtin_function_or_method


class QLineEdit(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addAction(*args, **kwargs): ...
    def alignment(*args, **kwargs): ...
    def backspace(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def clear(*args, **kwargs): ...
    def completer(*args, **kwargs): ...
    def contextMenuEvent(*args, **kwargs): ...
    def copy(*args, **kwargs): ...
    def createStandardContextMenu(*args, **kwargs): ...
    def cursorBackward(*args, **kwargs): ...
    def cursorForward(*args, **kwargs): ...
    def cursorMoveStyle(*args, **kwargs): ...
    def cursorPosition(*args, **kwargs): ...
    def cursorPositionAt(*args, **kwargs): ...
    def cursorRect(*args, **kwargs): ...
    def cursorWordBackward(*args, **kwargs): ...
    def cursorWordForward(*args, **kwargs): ...
    def cut(*args, **kwargs): ...
    def del_(*args, **kwargs): ...
    def deselect(*args, **kwargs): ...
    def displayText(*args, **kwargs): ...
    def dragEnabled(*args, **kwargs): ...
    def dragEnterEvent(*args, **kwargs): ...
    def dragLeaveEvent(*args, **kwargs): ...
    def dragMoveEvent(*args, **kwargs): ...
    def dropEvent(*args, **kwargs): ...
    def echoMode(*args, **kwargs): ...
    def end(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def focusInEvent(*args, **kwargs): ...
    def focusOutEvent(*args, **kwargs): ...
    def getTextMargins(*args, **kwargs): ...
    def hasAcceptableInput(*args, **kwargs): ...
    def hasFrame(*args, **kwargs): ...
    def hasSelectedText(*args, **kwargs): ...
    def home(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def inputMask(*args, **kwargs): ...
    def inputMethodEvent(*args, **kwargs): ...
    def inputMethodQuery(*args, **kwargs): ...
    def insert(*args, **kwargs): ...
    def isClearButtonEnabled(*args, **kwargs): ...
    def isModified(*args, **kwargs): ...
    def isReadOnly(*args, **kwargs): ...
    def isRedoAvailable(*args, **kwargs): ...
    def isUndoAvailable(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def maxLength(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def mouseDoubleClickEvent(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def paste(*args, **kwargs): ...
    def placeholderText(*args, **kwargs): ...
    def redo(*args, **kwargs): ...
    def selectAll(*args, **kwargs): ...
    def selectedText(*args, **kwargs): ...
    def selectionStart(*args, **kwargs): ...
    def setAlignment(*args, **kwargs): ...
    def setClearButtonEnabled(*args, **kwargs): ...
    def setCompleter(*args, **kwargs): ...
    def setCursorMoveStyle(*args, **kwargs): ...
    def setCursorPosition(*args, **kwargs): ...
    def setDragEnabled(*args, **kwargs): ...
    def setEchoMode(*args, **kwargs): ...
    def setFrame(*args, **kwargs): ...
    def setInputMask(*args, **kwargs): ...
    def setMaxLength(*args, **kwargs): ...
    def setModified(*args, **kwargs): ...
    def setPlaceholderText(*args, **kwargs): ...
    def setReadOnly(*args, **kwargs): ...
    def setSelection(*args, **kwargs): ...
    def setText(*args, **kwargs): ...
    def setTextMargins(*args, **kwargs): ...
    def setValidator(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def text(*args, **kwargs): ...
    def textMargins(*args, **kwargs): ...
    def undo(*args, **kwargs): ...
    def validator(*args, **kwargs): ...
    ActionPosition : Type[ActionPosition]
    
    EchoMode : Type[EchoMode]
    
    LeadingPosition : ActionPosition
    
    NoEcho : EchoMode
    
    Normal : EchoMode
    
    Password : EchoMode
    
    PasswordEchoOnEdit : EchoMode
    
    TrailingPosition : ActionPosition
    
    __new__ : builtin_function_or_method
    
    cursorPositionChanged : PySide2.QtCore.Signal
    
    editingFinished : PySide2.QtCore.Signal
    
    returnPressed : PySide2.QtCore.Signal
    
    selectionChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    textChanged : PySide2.QtCore.Signal
    
    textEdited : PySide2.QtCore.Signal


class QGraphicsSceneDragDropEvent(QGraphicsSceneEvent):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def acceptProposedAction(*args, **kwargs): ...
    def buttons(*args, **kwargs): ...
    def dropAction(*args, **kwargs): ...
    def mimeData(*args, **kwargs): ...
    def modifiers(*args, **kwargs): ...
    def pos(*args, **kwargs): ...
    def possibleActions(*args, **kwargs): ...
    def proposedAction(*args, **kwargs): ...
    def scenePos(*args, **kwargs): ...
    def screenPos(*args, **kwargs): ...
    def setButtons(*args, **kwargs): ...
    def setDropAction(*args, **kwargs): ...
    def setModifiers(*args, **kwargs): ...
    def setPos(*args, **kwargs): ...
    def setPossibleActions(*args, **kwargs): ...
    def setProposedAction(*args, **kwargs): ...
    def setScenePos(*args, **kwargs): ...
    def setScreenPos(*args, **kwargs): ...
    def source(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QGraphicsColorizeEffect(QGraphicsEffect):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def color(*args, **kwargs): ...
    def draw(*args, **kwargs): ...
    def setColor(*args, **kwargs): ...
    def setStrength(*args, **kwargs): ...
    def strength(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    colorChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    strengthChanged : PySide2.QtCore.Signal


class QProgressBar(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def alignment(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def format(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def invertedAppearance(*args, **kwargs): ...
    def isTextVisible(*args, **kwargs): ...
    def maximum(*args, **kwargs): ...
    def minimum(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def orientation(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def reset(*args, **kwargs): ...
    def resetFormat(*args, **kwargs): ...
    def setAlignment(*args, **kwargs): ...
    def setFormat(*args, **kwargs): ...
    def setInvertedAppearance(*args, **kwargs): ...
    def setMaximum(*args, **kwargs): ...
    def setMinimum(*args, **kwargs): ...
    def setOrientation(*args, **kwargs): ...
    def setRange(*args, **kwargs): ...
    def setTextDirection(*args, **kwargs): ...
    def setTextVisible(*args, **kwargs): ...
    def setValue(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def text(*args, **kwargs): ...
    def textDirection(*args, **kwargs): ...
    def value(*args, **kwargs): ...
    BottomToTop : Direction
    
    Direction : Type[Direction]
    
    TopToBottom : Direction
    
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    valueChanged : PySide2.QtCore.Signal


class QGraphicsScale(QGraphicsTransform):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def applyTo(*args, **kwargs): ...
    def origin(*args, **kwargs): ...
    def setOrigin(*args, **kwargs): ...
    def setXScale(*args, **kwargs): ...
    def setYScale(*args, **kwargs): ...
    def setZScale(*args, **kwargs): ...
    def xScale(*args, **kwargs): ...
    def yScale(*args, **kwargs): ...
    def zScale(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    originChanged : PySide2.QtCore.Signal
    
    scaleChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    xScaleChanged : PySide2.QtCore.Signal
    
    yScaleChanged : PySide2.QtCore.Signal
    
    zScaleChanged : PySide2.QtCore.Signal


class QLayout(_QObject, QLayoutItem):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def activate(*args, **kwargs): ...
    def addChildLayout(*args, **kwargs): ...
    def addChildWidget(*args, **kwargs): ...
    def addItem(*args, **kwargs): ...
    def addWidget(*args, **kwargs): ...
    def adoptLayout(*args, **kwargs): ...
    def alignmentRect(*args, **kwargs): ...
    def childEvent(*args, **kwargs): ...
    def contentsMargins(*args, **kwargs): ...
    def contentsRect(*args, **kwargs): ...
    def controlTypes(*args, **kwargs): ...
    def count(*args, **kwargs): ...
    def expandingDirections(*args, **kwargs): ...
    def geometry(*args, **kwargs): ...
    def getContentsMargins(*args, **kwargs): ...
    def indexOf(*args, **kwargs): ...
    def invalidate(*args, **kwargs): ...
    def isEmpty(*args, **kwargs): ...
    def isEnabled(*args, **kwargs): ...
    def itemAt(*args, **kwargs): ...
    def layout(*args, **kwargs): ...
    def margin(*args, **kwargs): ...
    def maximumSize(*args, **kwargs): ...
    def menuBar(*args, **kwargs): ...
    def minimumSize(*args, **kwargs): ...
    def parentWidget(*args, **kwargs): ...
    def removeItem(*args, **kwargs): ...
    def removeWidget(*args, **kwargs): ...
    def replaceWidget(*args, **kwargs): ...
    def setAlignment(*args, **kwargs): ...
    def setContentsMargins(*args, **kwargs): ...
    def setEnabled(*args, **kwargs): ...
    def setGeometry(*args, **kwargs): ...
    def setMargin(*args, **kwargs): ...
    def setMenuBar(*args, **kwargs): ...
    def setSizeConstraint(*args, **kwargs): ...
    def setSpacing(*args, **kwargs): ...
    def sizeConstraint(*args, **kwargs): ...
    def spacing(*args, **kwargs): ...
    def takeAt(*args, **kwargs): ...
    def totalHeightForWidth(*args, **kwargs): ...
    def totalMaximumSize(*args, **kwargs): ...
    def totalMinimumSize(*args, **kwargs): ...
    def totalSizeHint(*args, **kwargs): ...
    def update(*args, **kwargs): ...
    def widgetEvent(*args, **kwargs): ...
    @staticmethod
    def closestAcceptableSize(*args, **kwargs): ...
    SetDefaultConstraint : SizeConstraint
    
    SetFixedSize : SizeConstraint
    
    SetMaximumSize : SizeConstraint
    
    SetMinAndMaxSize : SizeConstraint
    
    SetMinimumSize : SizeConstraint
    
    SetNoConstraint : SizeConstraint
    
    SizeConstraint : Type[SizeConstraint]
    
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QStyleOptionProgressBar(QStyleOption):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    bottomToTop : getset_descriptor
    
    invertedAppearance : getset_descriptor
    
    maximum : getset_descriptor
    
    minimum : getset_descriptor
    
    orientation : getset_descriptor
    
    progress : getset_descriptor
    
    text : getset_descriptor
    
    textAlignment : getset_descriptor
    
    textVisible : getset_descriptor


class QGraphicsSceneResizeEvent(QGraphicsSceneEvent):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def newSize(*args, **kwargs): ...
    def oldSize(*args, **kwargs): ...
    def setNewSize(*args, **kwargs): ...
    def setOldSize(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QComboBox(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addItem(*args, **kwargs): ...
    def addItems(*args, **kwargs): ...
    def autoCompletion(*args, **kwargs): ...
    def autoCompletionCaseSensitivity(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def clear(*args, **kwargs): ...
    def clearEditText(*args, **kwargs): ...
    def completer(*args, **kwargs): ...
    def contextMenuEvent(*args, **kwargs): ...
    def count(*args, **kwargs): ...
    def currentData(*args, **kwargs): ...
    def currentIndex(*args, **kwargs): ...
    def currentText(*args, **kwargs): ...
    def duplicatesEnabled(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def findData(*args, **kwargs): ...
    def findText(*args, **kwargs): ...
    def focusInEvent(*args, **kwargs): ...
    def focusOutEvent(*args, **kwargs): ...
    def hasFrame(*args, **kwargs): ...
    def hideEvent(*args, **kwargs): ...
    def hidePopup(*args, **kwargs): ...
    def iconSize(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def inputMethodEvent(*args, **kwargs): ...
    def inputMethodQuery(*args, **kwargs): ...
    def insertItem(*args, **kwargs): ...
    def insertItems(*args, **kwargs): ...
    def insertPolicy(*args, **kwargs): ...
    def insertSeparator(*args, **kwargs): ...
    def isEditable(*args, **kwargs): ...
    def itemData(*args, **kwargs): ...
    def itemDelegate(*args, **kwargs): ...
    def itemIcon(*args, **kwargs): ...
    def itemText(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def keyReleaseEvent(*args, **kwargs): ...
    def lineEdit(*args, **kwargs): ...
    def maxCount(*args, **kwargs): ...
    def maxVisibleItems(*args, **kwargs): ...
    def minimumContentsLength(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def model(*args, **kwargs): ...
    def modelColumn(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def removeItem(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def rootModelIndex(*args, **kwargs): ...
    def setAutoCompletion(*args, **kwargs): ...
    def setAutoCompletionCaseSensitivity(*args, **kwargs): ...
    def setCompleter(*args, **kwargs): ...
    def setCurrentIndex(*args, **kwargs): ...
    def setCurrentText(*args, **kwargs): ...
    def setDuplicatesEnabled(*args, **kwargs): ...
    def setEditText(*args, **kwargs): ...
    def setEditable(*args, **kwargs): ...
    def setFrame(*args, **kwargs): ...
    def setIconSize(*args, **kwargs): ...
    def setInsertPolicy(*args, **kwargs): ...
    def setItemData(*args, **kwargs): ...
    def setItemDelegate(*args, **kwargs): ...
    def setItemIcon(*args, **kwargs): ...
    def setItemText(*args, **kwargs): ...
    def setLineEdit(*args, **kwargs): ...
    def setMaxCount(*args, **kwargs): ...
    def setMaxVisibleItems(*args, **kwargs): ...
    def setMinimumContentsLength(*args, **kwargs): ...
    def setModel(*args, **kwargs): ...
    def setModelColumn(*args, **kwargs): ...
    def setRootModelIndex(*args, **kwargs): ...
    def setSizeAdjustPolicy(*args, **kwargs): ...
    def setValidator(*args, **kwargs): ...
    def setView(*args, **kwargs): ...
    def showEvent(*args, **kwargs): ...
    def showPopup(*args, **kwargs): ...
    def sizeAdjustPolicy(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def validator(*args, **kwargs): ...
    def view(*args, **kwargs): ...
    def wheelEvent(*args, **kwargs): ...
    AdjustToContents : SizeAdjustPolicy
    
    AdjustToContentsOnFirstShow : SizeAdjustPolicy
    
    AdjustToMinimumContentsLength : SizeAdjustPolicy
    
    AdjustToMinimumContentsLengthWithIcon : SizeAdjustPolicy
    
    InsertAfterCurrent : InsertPolicy
    
    InsertAlphabetically : InsertPolicy
    
    InsertAtBottom : InsertPolicy
    
    InsertAtCurrent : InsertPolicy
    
    InsertAtTop : InsertPolicy
    
    InsertBeforeCurrent : InsertPolicy
    
    InsertPolicy : Type[InsertPolicy]
    
    NoInsert : InsertPolicy
    
    SizeAdjustPolicy : Type[SizeAdjustPolicy]
    
    __new__ : builtin_function_or_method
    
    activated : PySide2.QtCore.Signal
    
    currentIndexChanged : PySide2.QtCore.Signal
    
    currentTextChanged : PySide2.QtCore.Signal
    
    editTextChanged : PySide2.QtCore.Signal
    
    highlighted : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QGraphicsItemGroup(QGraphicsItem):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addToGroup(*args, **kwargs): ...
    def boundingRect(*args, **kwargs): ...
    def isObscuredBy(*args, **kwargs): ...
    def opaqueArea(*args, **kwargs): ...
    def paint(*args, **kwargs): ...
    def removeFromGroup(*args, **kwargs): ...
    def type(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QAbstractSlider(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def changeEvent(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def hasTracking(*args, **kwargs): ...
    def invertedAppearance(*args, **kwargs): ...
    def invertedControls(*args, **kwargs): ...
    def isSliderDown(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def maximum(*args, **kwargs): ...
    def minimum(*args, **kwargs): ...
    def orientation(*args, **kwargs): ...
    def pageStep(*args, **kwargs): ...
    def repeatAction(*args, **kwargs): ...
    def setInvertedAppearance(*args, **kwargs): ...
    def setInvertedControls(*args, **kwargs): ...
    def setMaximum(*args, **kwargs): ...
    def setMinimum(*args, **kwargs): ...
    def setOrientation(*args, **kwargs): ...
    def setPageStep(*args, **kwargs): ...
    def setRange(*args, **kwargs): ...
    def setRepeatAction(*args, **kwargs): ...
    def setSingleStep(*args, **kwargs): ...
    def setSliderDown(*args, **kwargs): ...
    def setSliderPosition(*args, **kwargs): ...
    def setTracking(*args, **kwargs): ...
    def setValue(*args, **kwargs): ...
    def singleStep(*args, **kwargs): ...
    def sliderChange(*args, **kwargs): ...
    def sliderPosition(*args, **kwargs): ...
    def timerEvent(*args, **kwargs): ...
    def triggerAction(*args, **kwargs): ...
    def value(*args, **kwargs): ...
    def wheelEvent(*args, **kwargs): ...
    SliderAction : Type[SliderAction]
    
    SliderChange : Type[SliderChange]
    
    SliderMove : SliderAction
    
    SliderNoAction : SliderAction
    
    SliderOrientationChange : SliderChange
    
    SliderPageStepAdd : SliderAction
    
    SliderPageStepSub : SliderAction
    
    SliderRangeChange : SliderChange
    
    SliderSingleStepAdd : SliderAction
    
    SliderSingleStepSub : SliderAction
    
    SliderStepsChange : SliderChange
    
    SliderToMaximum : SliderAction
    
    SliderToMinimum : SliderAction
    
    SliderValueChange : SliderChange
    
    __new__ : builtin_function_or_method
    
    actionTriggered : PySide2.QtCore.Signal
    
    rangeChanged : PySide2.QtCore.Signal
    
    sliderMoved : PySide2.QtCore.Signal
    
    sliderPressed : PySide2.QtCore.Signal
    
    sliderReleased : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    valueChanged : PySide2.QtCore.Signal


class QDockWidget(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def allowedAreas(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def closeEvent(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def features(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def isAreaAllowed(*args, **kwargs): ...
    def isFloating(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def setAllowedAreas(*args, **kwargs): ...
    def setFeatures(*args, **kwargs): ...
    def setFloating(*args, **kwargs): ...
    def setTitleBarWidget(*args, **kwargs): ...
    def setWidget(*args, **kwargs): ...
    def titleBarWidget(*args, **kwargs): ...
    def toggleViewAction(*args, **kwargs): ...
    def widget(*args, **kwargs): ...
    AllDockWidgetFeatures : DockWidgetFeature
    
    DockWidgetClosable : DockWidgetFeature
    
    DockWidgetFeature : Type[DockWidgetFeature]
    
    DockWidgetFeatureMask : DockWidgetFeature
    
    DockWidgetFeatures : Type[DockWidgetFeatures]
    
    DockWidgetFloatable : DockWidgetFeature
    
    DockWidgetMovable : DockWidgetFeature
    
    DockWidgetVerticalTitleBar : DockWidgetFeature
    
    NoDockWidgetFeatures : DockWidgetFeature
    
    Reserved : DockWidgetFeature
    
    __new__ : builtin_function_or_method
    
    allowedAreasChanged : PySide2.QtCore.Signal
    
    dockLocationChanged : PySide2.QtCore.Signal
    
    featuresChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    topLevelChanged : PySide2.QtCore.Signal
    
    visibilityChanged : PySide2.QtCore.Signal


class QToolBar(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def actionAt(*args, **kwargs): ...
    def actionEvent(*args, **kwargs): ...
    def actionGeometry(*args, **kwargs): ...
    def addAction(*args, **kwargs): ...
    def addSeparator(*args, **kwargs): ...
    def addWidget(*args, **kwargs): ...
    def allowedAreas(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def clear(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def iconSize(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def insertSeparator(*args, **kwargs): ...
    def insertWidget(*args, **kwargs): ...
    def isAreaAllowed(*args, **kwargs): ...
    def isFloatable(*args, **kwargs): ...
    def isFloating(*args, **kwargs): ...
    def isMovable(*args, **kwargs): ...
    def orientation(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def setAllowedAreas(*args, **kwargs): ...
    def setFloatable(*args, **kwargs): ...
    def setIconSize(*args, **kwargs): ...
    def setMovable(*args, **kwargs): ...
    def setOrientation(*args, **kwargs): ...
    def setToolButtonStyle(*args, **kwargs): ...
    def toggleViewAction(*args, **kwargs): ...
    def toolButtonStyle(*args, **kwargs): ...
    def widgetForAction(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    actionTriggered : PySide2.QtCore.Signal
    
    allowedAreasChanged : PySide2.QtCore.Signal
    
    iconSizeChanged : PySide2.QtCore.Signal
    
    movableChanged : PySide2.QtCore.Signal
    
    orientationChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    toolButtonStyleChanged : PySide2.QtCore.Signal
    
    topLevelChanged : PySide2.QtCore.Signal
    
    visibilityChanged : PySide2.QtCore.Signal


class QStyleOptionFrame(QStyleOption):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    Flat : FrameFeature
    
    FrameFeature : Type[FrameFeature]
    
    FrameFeatures : Type[FrameFeatures]
    
    locals()['None'] : FrameFeature
    
    Rounded : FrameFeature
    
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    features : getset_descriptor
    
    frameShape : getset_descriptor
    
    lineWidth : getset_descriptor
    
    midLineWidth : getset_descriptor


class QStyleOptionTabBarBase(QStyleOption):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    documentMode : getset_descriptor
    
    selectedTabRect : getset_descriptor
    
    shape : getset_descriptor
    
    tabBarRect : getset_descriptor


class QSplitterHandle(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def closestLegalPosition(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def moveSplitter(*args, **kwargs): ...
    def opaqueResize(*args, **kwargs): ...
    def orientation(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def setOrientation(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def splitter(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QGraphicsDropShadowEffect(QGraphicsEffect):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def blurRadius(*args, **kwargs): ...
    def boundingRectFor(*args, **kwargs): ...
    def color(*args, **kwargs): ...
    def draw(*args, **kwargs): ...
    def offset(*args, **kwargs): ...
    def setBlurRadius(*args, **kwargs): ...
    def setColor(*args, **kwargs): ...
    def setOffset(*args, **kwargs): ...
    def setXOffset(*args, **kwargs): ...
    def setYOffset(*args, **kwargs): ...
    def xOffset(*args, **kwargs): ...
    def yOffset(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    blurRadiusChanged : PySide2.QtCore.Signal
    
    colorChanged : PySide2.QtCore.Signal
    
    offsetChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QGraphicsBlurEffect(QGraphicsEffect):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def blurHints(*args, **kwargs): ...
    def blurRadius(*args, **kwargs): ...
    def boundingRectFor(*args, **kwargs): ...
    def draw(*args, **kwargs): ...
    def setBlurHints(*args, **kwargs): ...
    def setBlurRadius(*args, **kwargs): ...
    AnimationHint : BlurHint
    
    BlurHint : Type[BlurHint]
    
    BlurHints : Type[BlurHints]
    
    PerformanceHint : BlurHint
    
    QualityHint : BlurHint
    
    __new__ : builtin_function_or_method
    
    blurHintsChanged : PySide2.QtCore.Signal
    
    blurRadiusChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QStyleOptionRubberBand(QStyleOption):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    opaque : getset_descriptor
    
    shape : getset_descriptor


class QWidgetAction(QAction):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def createWidget(*args, **kwargs): ...
    def createdWidgets(*args, **kwargs): ...
    def defaultWidget(*args, **kwargs): ...
    def deleteWidget(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def eventFilter(*args, **kwargs): ...
    def releaseWidget(*args, **kwargs): ...
    def requestWidget(*args, **kwargs): ...
    def setDefaultWidget(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QWidgetItem(QLayoutItem):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def controlTypes(*args, **kwargs): ...
    def expandingDirections(*args, **kwargs): ...
    def geometry(*args, **kwargs): ...
    def hasHeightForWidth(*args, **kwargs): ...
    def heightForWidth(*args, **kwargs): ...
    def isEmpty(*args, **kwargs): ...
    def maximumSize(*args, **kwargs): ...
    def minimumSize(*args, **kwargs): ...
    def setGeometry(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def widget(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    wid : getset_descriptor


class QMdiSubWindow(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def changeEvent(*args, **kwargs): ...
    def childEvent(*args, **kwargs): ...
    def closeEvent(*args, **kwargs): ...
    def contextMenuEvent(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def eventFilter(*args, **kwargs): ...
    def focusInEvent(*args, **kwargs): ...
    def focusOutEvent(*args, **kwargs): ...
    def hideEvent(*args, **kwargs): ...
    def isShaded(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def keyboardPageStep(*args, **kwargs): ...
    def keyboardSingleStep(*args, **kwargs): ...
    def leaveEvent(*args, **kwargs): ...
    def maximizedButtonsWidget(*args, **kwargs): ...
    def maximizedSystemMenuIconWidget(*args, **kwargs): ...
    def mdiArea(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def mouseDoubleClickEvent(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def moveEvent(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def setKeyboardPageStep(*args, **kwargs): ...
    def setKeyboardSingleStep(*args, **kwargs): ...
    def setOption(*args, **kwargs): ...
    def setSystemMenu(*args, **kwargs): ...
    def setWidget(*args, **kwargs): ...
    def showEvent(*args, **kwargs): ...
    def showShaded(*args, **kwargs): ...
    def showSystemMenu(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def systemMenu(*args, **kwargs): ...
    def testOption(*args, **kwargs): ...
    def timerEvent(*args, **kwargs): ...
    def widget(*args, **kwargs): ...
    AllowOutsideAreaHorizontally : SubWindowOption
    
    AllowOutsideAreaVertically : SubWindowOption
    
    RubberBandMove : SubWindowOption
    
    RubberBandResize : SubWindowOption
    
    SubWindowOption : Type[SubWindowOption]
    
    SubWindowOptions : Type[SubWindowOptions]
    
    __new__ : builtin_function_or_method
    
    aboutToActivate : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    windowStateChanged : PySide2.QtCore.Signal


class QGraphicsLineItem(QGraphicsItem):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def boundingRect(*args, **kwargs): ...
    def contains(*args, **kwargs): ...
    def extension(*args, **kwargs): ...
    def isObscuredBy(*args, **kwargs): ...
    def line(*args, **kwargs): ...
    def opaqueArea(*args, **kwargs): ...
    def paint(*args, **kwargs): ...
    def pen(*args, **kwargs): ...
    def setLine(*args, **kwargs): ...
    def setPen(*args, **kwargs): ...
    def shape(*args, **kwargs): ...
    def type(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QGraphicsSceneHelpEvent(QGraphicsSceneEvent):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def scenePos(*args, **kwargs): ...
    def screenPos(*args, **kwargs): ...
    def setScenePos(*args, **kwargs): ...
    def setScreenPos(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QDialog(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def accept(*args, **kwargs): ...
    def adjustPosition(*args, **kwargs): ...
    def closeEvent(*args, **kwargs): ...
    def contextMenuEvent(*args, **kwargs): ...
    def done(*args, **kwargs): ...
    def eventFilter(*args, **kwargs): ...
    def exec_(*args, **kwargs): ...
    def extension(*args, **kwargs): ...
    def isSizeGripEnabled(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def open(*args, **kwargs): ...
    def orientation(*args, **kwargs): ...
    def reject(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def result(*args, **kwargs): ...
    def setExtension(*args, **kwargs): ...
    def setModal(*args, **kwargs): ...
    def setOrientation(*args, **kwargs): ...
    def setResult(*args, **kwargs): ...
    def setSizeGripEnabled(*args, **kwargs): ...
    def setVisible(*args, **kwargs): ...
    def showEvent(*args, **kwargs): ...
    def showExtension(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    Accepted : DialogCode
    
    DialogCode : Type[DialogCode]
    
    Rejected : DialogCode
    
    __new__ : builtin_function_or_method
    
    accepted : PySide2.QtCore.Signal
    
    finished : PySide2.QtCore.Signal
    
    rejected : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QStyleOptionButton(QStyleOption):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    AutoDefaultButton : ButtonFeature
    
    ButtonFeature : Type[ButtonFeature]
    
    ButtonFeatures : Type[ButtonFeatures]
    
    CommandLinkButton : ButtonFeature
    
    DefaultButton : ButtonFeature
    
    Flat : ButtonFeature
    
    HasMenu : ButtonFeature
    
    locals()['None'] : ButtonFeature
    
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    features : getset_descriptor
    
    icon : getset_descriptor
    
    iconSize : getset_descriptor
    
    text : getset_descriptor


class QTapAndHoldGesture(QGesture):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def position(*args, **kwargs): ...
    def setPosition(*args, **kwargs): ...
    @staticmethod
    def setTimeout(*args, **kwargs): ...
    @staticmethod
    def timeout(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QStyledItemDelegate(QAbstractItemDelegate):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def createEditor(*args, **kwargs): ...
    def displayText(*args, **kwargs): ...
    def editorEvent(*args, **kwargs): ...
    def eventFilter(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def itemEditorFactory(*args, **kwargs): ...
    def paint(*args, **kwargs): ...
    def setEditorData(*args, **kwargs): ...
    def setItemEditorFactory(*args, **kwargs): ...
    def setModelData(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def updateEditorGeometry(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QTabBar(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addTab(*args, **kwargs): ...
    def autoHide(*args, **kwargs): ...
    def changeCurrentOnDrag(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def count(*args, **kwargs): ...
    def currentIndex(*args, **kwargs): ...
    def documentMode(*args, **kwargs): ...
    def drawBase(*args, **kwargs): ...
    def elideMode(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def expanding(*args, **kwargs): ...
    def hideEvent(*args, **kwargs): ...
    def iconSize(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def insertTab(*args, **kwargs): ...
    def isMovable(*args, **kwargs): ...
    def isTabEnabled(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def minimumTabSizeHint(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def moveTab(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def removeTab(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def selectionBehaviorOnRemove(*args, **kwargs): ...
    def setAutoHide(*args, **kwargs): ...
    def setChangeCurrentOnDrag(*args, **kwargs): ...
    def setCurrentIndex(*args, **kwargs): ...
    def setDocumentMode(*args, **kwargs): ...
    def setDrawBase(*args, **kwargs): ...
    def setElideMode(*args, **kwargs): ...
    def setExpanding(*args, **kwargs): ...
    def setIconSize(*args, **kwargs): ...
    def setMovable(*args, **kwargs): ...
    def setSelectionBehaviorOnRemove(*args, **kwargs): ...
    def setShape(*args, **kwargs): ...
    def setTabButton(*args, **kwargs): ...
    def setTabData(*args, **kwargs): ...
    def setTabEnabled(*args, **kwargs): ...
    def setTabIcon(*args, **kwargs): ...
    def setTabText(*args, **kwargs): ...
    def setTabTextColor(*args, **kwargs): ...
    def setTabToolTip(*args, **kwargs): ...
    def setTabWhatsThis(*args, **kwargs): ...
    def setTabsClosable(*args, **kwargs): ...
    def setUsesScrollButtons(*args, **kwargs): ...
    def shape(*args, **kwargs): ...
    def showEvent(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def tabAt(*args, **kwargs): ...
    def tabButton(*args, **kwargs): ...
    def tabData(*args, **kwargs): ...
    def tabIcon(*args, **kwargs): ...
    def tabInserted(*args, **kwargs): ...
    def tabLayoutChange(*args, **kwargs): ...
    def tabRect(*args, **kwargs): ...
    def tabRemoved(*args, **kwargs): ...
    def tabSizeHint(*args, **kwargs): ...
    def tabText(*args, **kwargs): ...
    def tabTextColor(*args, **kwargs): ...
    def tabToolTip(*args, **kwargs): ...
    def tabWhatsThis(*args, **kwargs): ...
    def tabsClosable(*args, **kwargs): ...
    def timerEvent(*args, **kwargs): ...
    def usesScrollButtons(*args, **kwargs): ...
    def wheelEvent(*args, **kwargs): ...
    ButtonPosition : Type[ButtonPosition]
    
    LeftSide : ButtonPosition
    
    RightSide : ButtonPosition
    
    RoundedEast : Shape
    
    RoundedNorth : Shape
    
    RoundedSouth : Shape
    
    RoundedWest : Shape
    
    SelectLeftTab : SelectionBehavior
    
    SelectPreviousTab : SelectionBehavior
    
    SelectRightTab : SelectionBehavior
    
    SelectionBehavior : Type[SelectionBehavior]
    
    Shape : Type[Shape]
    
    TriangularEast : Shape
    
    TriangularNorth : Shape
    
    TriangularSouth : Shape
    
    TriangularWest : Shape
    
    __new__ : builtin_function_or_method
    
    currentChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    tabBarClicked : PySide2.QtCore.Signal
    
    tabBarDoubleClicked : PySide2.QtCore.Signal
    
    tabCloseRequested : PySide2.QtCore.Signal
    
    tabMoved : PySide2.QtCore.Signal


class QStyleOptionTabWidgetFrame(QStyleOption):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    leftCornerWidgetSize : getset_descriptor
    
    lineWidth : getset_descriptor
    
    midLineWidth : getset_descriptor
    
    rightCornerWidgetSize : getset_descriptor
    
    selectedTabRect : getset_descriptor
    
    shape : getset_descriptor
    
    tabBarRect : getset_descriptor
    
    tabBarSize : getset_descriptor


class QStyleOptionViewItem(QStyleOption):
    def __copy__(*args, **kwargs): ...
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    Alternate : ViewItemFeature
    
    Beginning : ViewItemPosition
    
    Bottom : Position
    
    End : ViewItemPosition
    
    HasCheckIndicator : ViewItemFeature
    
    HasDecoration : ViewItemFeature
    
    HasDisplay : ViewItemFeature
    
    Invalid : ViewItemPosition
    
    Left : Position
    
    Middle : ViewItemPosition
    
    locals()['None'] : ViewItemFeature
    
    OnlyOne : ViewItemPosition
    
    Position : Type[Position]
    
    Right : Position
    
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Top : Position
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    ViewItemFeature : Type[ViewItemFeature]
    
    ViewItemFeatures : Type[ViewItemFeatures]
    
    ViewItemPosition : Type[ViewItemPosition]
    
    WrapText : ViewItemFeature
    
    __new__ : builtin_function_or_method
    
    backgroundBrush : getset_descriptor
    
    checkState : getset_descriptor
    
    decorationAlignment : getset_descriptor
    
    decorationPosition : getset_descriptor
    
    decorationSize : getset_descriptor
    
    displayAlignment : getset_descriptor
    
    features : getset_descriptor
    
    font : getset_descriptor
    
    icon : getset_descriptor
    
    index : getset_descriptor
    
    locale : getset_descriptor
    
    showDecorationSelected : getset_descriptor
    
    text : getset_descriptor
    
    textElideMode : getset_descriptor
    
    viewItemPosition : getset_descriptor
    
    widget : getset_descriptor


class QGraphicsSceneWheelEvent(QGraphicsSceneEvent):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def buttons(*args, **kwargs): ...
    def delta(*args, **kwargs): ...
    def modifiers(*args, **kwargs): ...
    def orientation(*args, **kwargs): ...
    def pos(*args, **kwargs): ...
    def scenePos(*args, **kwargs): ...
    def screenPos(*args, **kwargs): ...
    def setButtons(*args, **kwargs): ...
    def setDelta(*args, **kwargs): ...
    def setModifiers(*args, **kwargs): ...
    def setOrientation(*args, **kwargs): ...
    def setPos(*args, **kwargs): ...
    def setScenePos(*args, **kwargs): ...
    def setScreenPos(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QPinchGesture(QGesture):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def centerPoint(*args, **kwargs): ...
    def changeFlags(*args, **kwargs): ...
    def lastCenterPoint(*args, **kwargs): ...
    def lastRotationAngle(*args, **kwargs): ...
    def lastScaleFactor(*args, **kwargs): ...
    def rotationAngle(*args, **kwargs): ...
    def scaleFactor(*args, **kwargs): ...
    def setCenterPoint(*args, **kwargs): ...
    def setChangeFlags(*args, **kwargs): ...
    def setLastCenterPoint(*args, **kwargs): ...
    def setLastRotationAngle(*args, **kwargs): ...
    def setLastScaleFactor(*args, **kwargs): ...
    def setRotationAngle(*args, **kwargs): ...
    def setScaleFactor(*args, **kwargs): ...
    def setStartCenterPoint(*args, **kwargs): ...
    def setTotalChangeFlags(*args, **kwargs): ...
    def setTotalRotationAngle(*args, **kwargs): ...
    def setTotalScaleFactor(*args, **kwargs): ...
    def startCenterPoint(*args, **kwargs): ...
    def totalChangeFlags(*args, **kwargs): ...
    def totalRotationAngle(*args, **kwargs): ...
    def totalScaleFactor(*args, **kwargs): ...
    CenterPointChanged : ChangeFlag
    
    ChangeFlag : Type[ChangeFlag]
    
    ChangeFlags : Type[ChangeFlags]
    
    RotationAngleChanged : ChangeFlag
    
    ScaleFactorChanged : ChangeFlag
    
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QGraphicsObject(_QObject, QGraphicsItem):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def event(*args, **kwargs): ...
    def grabGesture(*args, **kwargs): ...
    def ungrabGesture(*args, **kwargs): ...
    def updateMicroFocus(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    childrenChanged : PySide2.QtCore.Signal
    
    enabledChanged : PySide2.QtCore.Signal
    
    heightChanged : PySide2.QtCore.Signal
    
    opacityChanged : PySide2.QtCore.Signal
    
    parentChanged : PySide2.QtCore.Signal
    
    rotationChanged : PySide2.QtCore.Signal
    
    scaleChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    visibleChanged : PySide2.QtCore.Signal
    
    widthChanged : PySide2.QtCore.Signal
    
    xChanged : PySide2.QtCore.Signal
    
    yChanged : PySide2.QtCore.Signal
    
    zChanged : PySide2.QtCore.Signal


class QTapGesture(QGesture):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def position(*args, **kwargs): ...
    def setPosition(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QMainWindow(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addDockWidget(*args, **kwargs): ...
    def addToolBar(*args, **kwargs): ...
    def addToolBarBreak(*args, **kwargs): ...
    def centralWidget(*args, **kwargs): ...
    def contextMenuEvent(*args, **kwargs): ...
    def corner(*args, **kwargs): ...
    def createPopupMenu(*args, **kwargs): ...
    def dockOptions(*args, **kwargs): ...
    def dockWidgetArea(*args, **kwargs): ...
    def documentMode(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def iconSize(*args, **kwargs): ...
    def insertToolBar(*args, **kwargs): ...
    def insertToolBarBreak(*args, **kwargs): ...
    def isAnimated(*args, **kwargs): ...
    def isDockNestingEnabled(*args, **kwargs): ...
    def isSeparator(*args, **kwargs): ...
    def menuBar(*args, **kwargs): ...
    def menuWidget(*args, **kwargs): ...
    def removeDockWidget(*args, **kwargs): ...
    def removeToolBar(*args, **kwargs): ...
    def removeToolBarBreak(*args, **kwargs): ...
    def resizeDocks(*args, **kwargs): ...
    def restoreDockWidget(*args, **kwargs): ...
    def restoreState(*args, **kwargs): ...
    def saveState(*args, **kwargs): ...
    def setAnimated(*args, **kwargs): ...
    def setCentralWidget(*args, **kwargs): ...
    def setCorner(*args, **kwargs): ...
    def setDockNestingEnabled(*args, **kwargs): ...
    def setDockOptions(*args, **kwargs): ...
    def setDocumentMode(*args, **kwargs): ...
    def setIconSize(*args, **kwargs): ...
    def setMenuBar(*args, **kwargs): ...
    def setMenuWidget(*args, **kwargs): ...
    def setStatusBar(*args, **kwargs): ...
    def setTabPosition(*args, **kwargs): ...
    def setTabShape(*args, **kwargs): ...
    def setToolButtonStyle(*args, **kwargs): ...
    def setUnifiedTitleAndToolBarOnMac(*args, **kwargs): ...
    def splitDockWidget(*args, **kwargs): ...
    def statusBar(*args, **kwargs): ...
    def tabPosition(*args, **kwargs): ...
    def tabShape(*args, **kwargs): ...
    def tabifiedDockWidgets(*args, **kwargs): ...
    def tabifyDockWidget(*args, **kwargs): ...
    def takeCentralWidget(*args, **kwargs): ...
    def toolBarArea(*args, **kwargs): ...
    def toolBarBreak(*args, **kwargs): ...
    def toolButtonStyle(*args, **kwargs): ...
    def unifiedTitleAndToolBarOnMac(*args, **kwargs): ...
    AllowNestedDocks : DockOption
    
    AllowTabbedDocks : DockOption
    
    AnimatedDocks : DockOption
    
    DockOption : Type[DockOption]
    
    DockOptions : Type[DockOptions]
    
    ForceTabbedDocks : DockOption
    
    GroupedDragging : DockOption
    
    VerticalTabs : DockOption
    
    __new__ : builtin_function_or_method
    
    iconSizeChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    toolButtonStyleChanged : PySide2.QtCore.Signal


class QCommonStyle(QStyle):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def drawComplexControl(*args, **kwargs): ...
    def drawControl(*args, **kwargs): ...
    def drawPrimitive(*args, **kwargs): ...
    def generatedIconPixmap(*args, **kwargs): ...
    def hitTestComplexControl(*args, **kwargs): ...
    def layoutSpacing(*args, **kwargs): ...
    def pixelMetric(*args, **kwargs): ...
    def polish(*args, **kwargs): ...
    def sizeFromContents(*args, **kwargs): ...
    def standardIcon(*args, **kwargs): ...
    def standardPixmap(*args, **kwargs): ...
    def styleHint(*args, **kwargs): ...
    def subControlRect(*args, **kwargs): ...
    def subElementRect(*args, **kwargs): ...
    def unpolish(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QDialogButtonBox(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addButton(*args, **kwargs): ...
    def button(*args, **kwargs): ...
    def buttonRole(*args, **kwargs): ...
    def buttons(*args, **kwargs): ...
    def centerButtons(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def clear(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def orientation(*args, **kwargs): ...
    def removeButton(*args, **kwargs): ...
    def setCenterButtons(*args, **kwargs): ...
    def setOrientation(*args, **kwargs): ...
    def setStandardButtons(*args, **kwargs): ...
    def standardButton(*args, **kwargs): ...
    def standardButtons(*args, **kwargs): ...
    Abort : StandardButton
    
    AcceptRole : ButtonRole
    
    ActionRole : ButtonRole
    
    Apply : StandardButton
    
    ApplyRole : ButtonRole
    
    ButtonLayout : Type[ButtonLayout]
    
    ButtonRole : Type[ButtonRole]
    
    Cancel : StandardButton
    
    Close : StandardButton
    
    DestructiveRole : ButtonRole
    
    Discard : StandardButton
    
    FirstButton : StandardButton
    
    GnomeLayout : ButtonLayout
    
    Help : StandardButton
    
    HelpRole : ButtonRole
    
    Ignore : StandardButton
    
    InvalidRole : ButtonRole
    
    KdeLayout : ButtonLayout
    
    LastButton : StandardButton
    
    MacLayout : ButtonLayout
    
    NRoles : ButtonRole
    
    No : StandardButton
    
    NoButton : StandardButton
    
    NoRole : ButtonRole
    
    NoToAll : StandardButton
    
    Ok : StandardButton
    
    Open : StandardButton
    
    RejectRole : ButtonRole
    
    Reset : StandardButton
    
    ResetRole : ButtonRole
    
    RestoreDefaults : StandardButton
    
    Retry : StandardButton
    
    Save : StandardButton
    
    SaveAll : StandardButton
    
    StandardButton : Type[StandardButton]
    
    StandardButtons : Type[StandardButtons]
    
    WinLayout : ButtonLayout
    
    Yes : StandardButton
    
    YesRole : ButtonRole
    
    YesToAll : StandardButton
    
    __new__ : builtin_function_or_method
    
    accepted : PySide2.QtCore.Signal
    
    clicked : PySide2.QtCore.Signal
    
    helpRequested : PySide2.QtCore.Signal
    
    rejected : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QGraphicsLayout(QGraphicsLayoutItem):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def activate(*args, **kwargs): ...
    def addChildLayoutItem(*args, **kwargs): ...
    def count(*args, **kwargs): ...
    def getContentsMargins(*args, **kwargs): ...
    def invalidate(*args, **kwargs): ...
    def isActivated(*args, **kwargs): ...
    def itemAt(*args, **kwargs): ...
    def removeAt(*args, **kwargs): ...
    def setContentsMargins(*args, **kwargs): ...
    def updateGeometry(*args, **kwargs): ...
    def widgetEvent(*args, **kwargs): ...
    @staticmethod
    def instantInvalidatePropagation(*args, **kwargs): ...
    @staticmethod
    def setInstantInvalidatePropagation(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QAbstractSpinBox(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def alignment(*args, **kwargs): ...
    def buttonSymbols(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def clear(*args, **kwargs): ...
    def closeEvent(*args, **kwargs): ...
    def contextMenuEvent(*args, **kwargs): ...
    def correctionMode(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def fixup(*args, **kwargs): ...
    def focusInEvent(*args, **kwargs): ...
    def focusOutEvent(*args, **kwargs): ...
    def hasAcceptableInput(*args, **kwargs): ...
    def hasFrame(*args, **kwargs): ...
    def hideEvent(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def inputMethodQuery(*args, **kwargs): ...
    def interpretText(*args, **kwargs): ...
    def isAccelerated(*args, **kwargs): ...
    def isGroupSeparatorShown(*args, **kwargs): ...
    def isReadOnly(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def keyReleaseEvent(*args, **kwargs): ...
    def keyboardTracking(*args, **kwargs): ...
    def lineEdit(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def selectAll(*args, **kwargs): ...
    def setAccelerated(*args, **kwargs): ...
    def setAlignment(*args, **kwargs): ...
    def setButtonSymbols(*args, **kwargs): ...
    def setCorrectionMode(*args, **kwargs): ...
    def setFrame(*args, **kwargs): ...
    def setGroupSeparatorShown(*args, **kwargs): ...
    def setKeyboardTracking(*args, **kwargs): ...
    def setLineEdit(*args, **kwargs): ...
    def setReadOnly(*args, **kwargs): ...
    def setSpecialValueText(*args, **kwargs): ...
    def setWrapping(*args, **kwargs): ...
    def showEvent(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def specialValueText(*args, **kwargs): ...
    def stepBy(*args, **kwargs): ...
    def stepDown(*args, **kwargs): ...
    def stepEnabled(*args, **kwargs): ...
    def stepUp(*args, **kwargs): ...
    def text(*args, **kwargs): ...
    def timerEvent(*args, **kwargs): ...
    def validate(*args, **kwargs): ...
    def wheelEvent(*args, **kwargs): ...
    def wrapping(*args, **kwargs): ...
    ButtonSymbols : Type[ButtonSymbols]
    
    CorrectToNearestValue : CorrectionMode
    
    CorrectToPreviousValue : CorrectionMode
    
    CorrectionMode : Type[CorrectionMode]
    
    NoButtons : ButtonSymbols
    
    PlusMinus : ButtonSymbols
    
    StepDownEnabled : StepEnabledFlag
    
    StepEnabled : Type[StepEnabled]
    
    StepEnabledFlag : Type[StepEnabledFlag]
    
    StepNone : StepEnabledFlag
    
    StepUpEnabled : StepEnabledFlag
    
    UpDownArrows : ButtonSymbols
    
    __new__ : builtin_function_or_method
    
    editingFinished : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QGraphicsOpacityEffect(QGraphicsEffect):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def draw(*args, **kwargs): ...
    def opacity(*args, **kwargs): ...
    def opacityMask(*args, **kwargs): ...
    def setOpacity(*args, **kwargs): ...
    def setOpacityMask(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    opacityChanged : PySide2.QtCore.Signal
    
    opacityMaskChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QGroupBox(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def alignment(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def childEvent(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def focusInEvent(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def isCheckable(*args, **kwargs): ...
    def isChecked(*args, **kwargs): ...
    def isFlat(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def setAlignment(*args, **kwargs): ...
    def setCheckable(*args, **kwargs): ...
    def setChecked(*args, **kwargs): ...
    def setFlat(*args, **kwargs): ...
    def setTitle(*args, **kwargs): ...
    def title(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    clicked : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    toggled : PySide2.QtCore.Signal


class QTabWidget(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addTab(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def clear(*args, **kwargs): ...
    def cornerWidget(*args, **kwargs): ...
    def count(*args, **kwargs): ...
    def currentIndex(*args, **kwargs): ...
    def currentWidget(*args, **kwargs): ...
    def documentMode(*args, **kwargs): ...
    def elideMode(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def hasHeightForWidth(*args, **kwargs): ...
    def heightForWidth(*args, **kwargs): ...
    def iconSize(*args, **kwargs): ...
    def indexOf(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def insertTab(*args, **kwargs): ...
    def isMovable(*args, **kwargs): ...
    def isTabEnabled(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def removeTab(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def setCornerWidget(*args, **kwargs): ...
    def setCurrentIndex(*args, **kwargs): ...
    def setCurrentWidget(*args, **kwargs): ...
    def setDocumentMode(*args, **kwargs): ...
    def setElideMode(*args, **kwargs): ...
    def setIconSize(*args, **kwargs): ...
    def setMovable(*args, **kwargs): ...
    def setTabBar(*args, **kwargs): ...
    def setTabBarAutoHide(*args, **kwargs): ...
    def setTabEnabled(*args, **kwargs): ...
    def setTabIcon(*args, **kwargs): ...
    def setTabPosition(*args, **kwargs): ...
    def setTabShape(*args, **kwargs): ...
    def setTabText(*args, **kwargs): ...
    def setTabToolTip(*args, **kwargs): ...
    def setTabWhatsThis(*args, **kwargs): ...
    def setTabsClosable(*args, **kwargs): ...
    def setUsesScrollButtons(*args, **kwargs): ...
    def showEvent(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def tabBar(*args, **kwargs): ...
    def tabBarAutoHide(*args, **kwargs): ...
    def tabIcon(*args, **kwargs): ...
    def tabInserted(*args, **kwargs): ...
    def tabPosition(*args, **kwargs): ...
    def tabRemoved(*args, **kwargs): ...
    def tabShape(*args, **kwargs): ...
    def tabText(*args, **kwargs): ...
    def tabToolTip(*args, **kwargs): ...
    def tabWhatsThis(*args, **kwargs): ...
    def tabsClosable(*args, **kwargs): ...
    def usesScrollButtons(*args, **kwargs): ...
    def widget(*args, **kwargs): ...
    East : TabPosition
    
    North : TabPosition
    
    Rounded : TabShape
    
    South : TabPosition
    
    TabPosition : Type[TabPosition]
    
    TabShape : Type[TabShape]
    
    Triangular : TabShape
    
    West : TabPosition
    
    __new__ : builtin_function_or_method
    
    currentChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    tabBarClicked : PySide2.QtCore.Signal
    
    tabBarDoubleClicked : PySide2.QtCore.Signal
    
    tabCloseRequested : PySide2.QtCore.Signal


class QMenu(QWidget):
    def __getattribute__(*args, **kwargs):
        """
        x.__getattribute__('name') <==> x.name
        """
        ...
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def actionAt(*args, **kwargs): ...
    def actionEvent(*args, **kwargs): ...
    def actionGeometry(*args, **kwargs): ...
    def activeAction(*args, **kwargs): ...
    def addAction(*args, **kwargs): ...
    def addMenu(*args, **kwargs): ...
    def addSection(*args, **kwargs): ...
    def addSeparator(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def clear(*args, **kwargs): ...
    def columnCount(*args, **kwargs): ...
    def defaultAction(*args, **kwargs): ...
    def enterEvent(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def focusNextPrevChild(*args, **kwargs): ...
    def hideEvent(*args, **kwargs): ...
    def hideTearOffMenu(*args, **kwargs): ...
    def icon(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def insertMenu(*args, **kwargs): ...
    def insertSection(*args, **kwargs): ...
    def insertSeparator(*args, **kwargs): ...
    def isEmpty(*args, **kwargs): ...
    def isTearOffEnabled(*args, **kwargs): ...
    def isTearOffMenuVisible(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def leaveEvent(*args, **kwargs): ...
    def menuAction(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def popup(*args, **kwargs): ...
    def separatorsCollapsible(*args, **kwargs): ...
    def setActiveAction(*args, **kwargs): ...
    def setDefaultAction(*args, **kwargs): ...
    def setIcon(*args, **kwargs): ...
    def setSeparatorsCollapsible(*args, **kwargs): ...
    def setTearOffEnabled(*args, **kwargs): ...
    def setTitle(*args, **kwargs): ...
    def setToolTipsVisible(*args, **kwargs): ...
    def showTearOffMenu(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def timerEvent(*args, **kwargs): ...
    def title(*args, **kwargs): ...
    def toolTipsVisible(*args, **kwargs): ...
    def wheelEvent(*args, **kwargs): ...
    @staticmethod
    def exec_(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    aboutToHide : PySide2.QtCore.Signal
    
    aboutToShow : PySide2.QtCore.Signal
    
    hovered : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    triggered : PySide2.QtCore.Signal


class QSizeGrip(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def event(*args, **kwargs): ...
    def eventFilter(*args, **kwargs): ...
    def hideEvent(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def moveEvent(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def setVisible(*args, **kwargs): ...
    def showEvent(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QStyleOptionHeader(QStyleOption):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    Beginning : SectionPosition
    
    End : SectionPosition
    
    Middle : SectionPosition
    
    NextAndPreviousAreSelected : SelectedPosition
    
    NextIsSelected : SelectedPosition
    
    locals()['None'] : SortIndicator
    
    NotAdjacent : SelectedPosition
    
    OnlyOneSection : SectionPosition
    
    PreviousIsSelected : SelectedPosition
    
    SectionPosition : Type[SectionPosition]
    
    SelectedPosition : Type[SelectedPosition]
    
    SortDown : SortIndicator
    
    SortIndicator : Type[SortIndicator]
    
    SortUp : SortIndicator
    
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    icon : getset_descriptor
    
    iconAlignment : getset_descriptor
    
    orientation : getset_descriptor
    
    position : getset_descriptor
    
    section : getset_descriptor
    
    selectedPosition : getset_descriptor
    
    sortIndicator : getset_descriptor
    
    text : getset_descriptor
    
    textAlignment : getset_descriptor


class QSplashScreen(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def clearMessage(*args, **kwargs): ...
    def drawContents(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def finish(*args, **kwargs): ...
    def message(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def pixmap(*args, **kwargs): ...
    def setPixmap(*args, **kwargs): ...
    def showMessage(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    messageChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QPanGesture(QGesture):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def acceleration(*args, **kwargs): ...
    def delta(*args, **kwargs): ...
    def lastOffset(*args, **kwargs): ...
    def offset(*args, **kwargs): ...
    def setAcceleration(*args, **kwargs): ...
    def setLastOffset(*args, **kwargs): ...
    def setOffset(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QFrame(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def changeEvent(*args, **kwargs): ...
    def drawFrame(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def frameRect(*args, **kwargs): ...
    def frameShadow(*args, **kwargs): ...
    def frameShape(*args, **kwargs): ...
    def frameStyle(*args, **kwargs): ...
    def frameWidth(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def lineWidth(*args, **kwargs): ...
    def midLineWidth(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def setFrameRect(*args, **kwargs): ...
    def setFrameShadow(*args, **kwargs): ...
    def setFrameShape(*args, **kwargs): ...
    def setFrameStyle(*args, **kwargs): ...
    def setLineWidth(*args, **kwargs): ...
    def setMidLineWidth(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    Box : Shape
    
    HLine : Shape
    
    NoFrame : Shape
    
    Panel : Shape
    
    Plain : Shadow
    
    Raised : Shadow
    
    Shadow : Type[Shadow]
    
    Shadow_Mask : StyleMask
    
    Shape : Type[Shape]
    
    Shape_Mask : StyleMask
    
    StyleMask : Type[StyleMask]
    
    StyledPanel : Shape
    
    Sunken : Shadow
    
    VLine : Shape
    
    WinPanel : Shape
    
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QStyleOptionToolBar(QStyleOption):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    Beginning : ToolBarPosition
    
    End : ToolBarPosition
    
    Middle : ToolBarPosition
    
    Movable : ToolBarFeature
    
    locals()['None'] : ToolBarFeature
    
    OnlyOne : ToolBarPosition
    
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    ToolBarFeature : Type[ToolBarFeature]
    
    ToolBarFeatures : Type[ToolBarFeatures]
    
    ToolBarPosition : Type[ToolBarPosition]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    features : getset_descriptor
    
    lineWidth : getset_descriptor
    
    midLineWidth : getset_descriptor
    
    positionOfLine : getset_descriptor
    
    positionWithinLine : getset_descriptor
    
    toolBarArea : getset_descriptor


class QFocusFrame(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def event(*args, **kwargs): ...
    def eventFilter(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def setWidget(*args, **kwargs): ...
    def widget(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QSwipeGesture(QGesture):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def horizontalDirection(*args, **kwargs): ...
    def setSwipeAngle(*args, **kwargs): ...
    def swipeAngle(*args, **kwargs): ...
    def verticalDirection(*args, **kwargs): ...
    Down : SwipeDirection
    
    Left : SwipeDirection
    
    NoDirection : SwipeDirection
    
    Right : SwipeDirection
    
    SwipeDirection : Type[SwipeDirection]
    
    Up : SwipeDirection
    
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QStyleOptionComplex(QStyleOption):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    activeSubControls : getset_descriptor
    
    subControls : getset_descriptor


class QGraphicsSceneMouseEvent(QGraphicsSceneEvent):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def button(*args, **kwargs): ...
    def buttonDownPos(*args, **kwargs): ...
    def buttonDownScenePos(*args, **kwargs): ...
    def buttonDownScreenPos(*args, **kwargs): ...
    def buttons(*args, **kwargs): ...
    def flags(*args, **kwargs): ...
    def lastPos(*args, **kwargs): ...
    def lastScenePos(*args, **kwargs): ...
    def lastScreenPos(*args, **kwargs): ...
    def modifiers(*args, **kwargs): ...
    def pos(*args, **kwargs): ...
    def scenePos(*args, **kwargs): ...
    def screenPos(*args, **kwargs): ...
    def setButton(*args, **kwargs): ...
    def setButtonDownPos(*args, **kwargs): ...
    def setButtonDownScenePos(*args, **kwargs): ...
    def setButtonDownScreenPos(*args, **kwargs): ...
    def setButtons(*args, **kwargs): ...
    def setFlags(*args, **kwargs): ...
    def setLastPos(*args, **kwargs): ...
    def setLastScenePos(*args, **kwargs): ...
    def setLastScreenPos(*args, **kwargs): ...
    def setModifiers(*args, **kwargs): ...
    def setPos(*args, **kwargs): ...
    def setScenePos(*args, **kwargs): ...
    def setScreenPos(*args, **kwargs): ...
    def setSource(*args, **kwargs): ...
    def source(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QStyleOptionGraphicsItem(QStyleOption):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    @staticmethod
    def levelOfDetailFromTransform(*args, **kwargs): ...
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    exposedRect : getset_descriptor
    
    levelOfDetail : getset_descriptor
    
    matrix : getset_descriptor


class QGraphicsSceneContextMenuEvent(QGraphicsSceneEvent):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def modifiers(*args, **kwargs): ...
    def pos(*args, **kwargs): ...
    def reason(*args, **kwargs): ...
    def scenePos(*args, **kwargs): ...
    def screenPos(*args, **kwargs): ...
    def setModifiers(*args, **kwargs): ...
    def setPos(*args, **kwargs): ...
    def setReason(*args, **kwargs): ...
    def setScenePos(*args, **kwargs): ...
    def setScreenPos(*args, **kwargs): ...
    Keyboard : Reason
    
    Mouse : Reason
    
    Other : Reason
    
    Reason : Type[Reason]
    
    __new__ : builtin_function_or_method


class QStyleHintReturnMask(QStyleHintReturn):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    region : getset_descriptor


class QStatusBar(QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addPermanentWidget(*args, **kwargs): ...
    def addWidget(*args, **kwargs): ...
    def clearMessage(*args, **kwargs): ...
    def currentMessage(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def hideOrShow(*args, **kwargs): ...
    def insertPermanentWidget(*args, **kwargs): ...
    def insertWidget(*args, **kwargs): ...
    def isSizeGripEnabled(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def reformat(*args, **kwargs): ...
    def removeWidget(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def setSizeGripEnabled(*args, **kwargs): ...
    def showEvent(*args, **kwargs): ...
    def showMessage(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    messageChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QStyleOptionDockWidget(QStyleOption):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    closable : getset_descriptor
    
    floatable : getset_descriptor
    
    movable : getset_descriptor
    
    title : getset_descriptor
    
    verticalTitleBar : getset_descriptor


class QGraphicsSceneHoverEvent(QGraphicsSceneEvent):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def lastPos(*args, **kwargs): ...
    def lastScenePos(*args, **kwargs): ...
    def lastScreenPos(*args, **kwargs): ...
    def modifiers(*args, **kwargs): ...
    def pos(*args, **kwargs): ...
    def scenePos(*args, **kwargs): ...
    def screenPos(*args, **kwargs): ...
    def setLastPos(*args, **kwargs): ...
    def setLastScenePos(*args, **kwargs): ...
    def setLastScreenPos(*args, **kwargs): ...
    def setModifiers(*args, **kwargs): ...
    def setPos(*args, **kwargs): ...
    def setScenePos(*args, **kwargs): ...
    def setScreenPos(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QFontComboBox(QComboBox):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def currentFont(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def fontFilters(*args, **kwargs): ...
    def setCurrentFont(*args, **kwargs): ...
    def setFontFilters(*args, **kwargs): ...
    def setWritingSystem(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def writingSystem(*args, **kwargs): ...
    AllFonts : FontFilter
    
    FontFilter : Type[FontFilter]
    
    FontFilters : Type[FontFilters]
    
    MonospacedFonts : FontFilter
    
    NonScalableFonts : FontFilter
    
    ProportionalFonts : FontFilter
    
    ScalableFonts : FontFilter
    
    __new__ : builtin_function_or_method
    
    currentFontChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QGraphicsGridLayout(QGraphicsLayout):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addItem(*args, **kwargs): ...
    def alignment(*args, **kwargs): ...
    def columnAlignment(*args, **kwargs): ...
    def columnCount(*args, **kwargs): ...
    def columnMaximumWidth(*args, **kwargs): ...
    def columnMinimumWidth(*args, **kwargs): ...
    def columnPreferredWidth(*args, **kwargs): ...
    def columnSpacing(*args, **kwargs): ...
    def columnStretchFactor(*args, **kwargs): ...
    def count(*args, **kwargs): ...
    def horizontalSpacing(*args, **kwargs): ...
    def invalidate(*args, **kwargs): ...
    def itemAt(*args, **kwargs): ...
    def removeAt(*args, **kwargs): ...
    def removeItem(*args, **kwargs): ...
    def rowAlignment(*args, **kwargs): ...
    def rowCount(*args, **kwargs): ...
    def rowMaximumHeight(*args, **kwargs): ...
    def rowMinimumHeight(*args, **kwargs): ...
    def rowPreferredHeight(*args, **kwargs): ...
    def rowSpacing(*args, **kwargs): ...
    def rowStretchFactor(*args, **kwargs): ...
    def setAlignment(*args, **kwargs): ...
    def setColumnAlignment(*args, **kwargs): ...
    def setColumnFixedWidth(*args, **kwargs): ...
    def setColumnMaximumWidth(*args, **kwargs): ...
    def setColumnMinimumWidth(*args, **kwargs): ...
    def setColumnPreferredWidth(*args, **kwargs): ...
    def setColumnSpacing(*args, **kwargs): ...
    def setColumnStretchFactor(*args, **kwargs): ...
    def setGeometry(*args, **kwargs): ...
    def setHorizontalSpacing(*args, **kwargs): ...
    def setRowAlignment(*args, **kwargs): ...
    def setRowFixedHeight(*args, **kwargs): ...
    def setRowMaximumHeight(*args, **kwargs): ...
    def setRowMinimumHeight(*args, **kwargs): ...
    def setRowPreferredHeight(*args, **kwargs): ...
    def setRowSpacing(*args, **kwargs): ...
    def setRowStretchFactor(*args, **kwargs): ...
    def setSpacing(*args, **kwargs): ...
    def setVerticalSpacing(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def verticalSpacing(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QSplitter(QFrame):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def __lshift__(*args, **kwargs):
        """
        x.__lshift__(y) <==> x<<y
        """
        ...
    def __rlshift__(*args, **kwargs):
        """
        x.__rlshift__(y) <==> y<<x
        """
        ...
    def __rrshift__(*args, **kwargs):
        """
        x.__rrshift__(y) <==> y>>x
        """
        ...
    def __rshift__(*args, **kwargs):
        """
        x.__rshift__(y) <==> x>>y
        """
        ...
    def addWidget(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def childEvent(*args, **kwargs): ...
    def childrenCollapsible(*args, **kwargs): ...
    def closestLegalPosition(*args, **kwargs): ...
    def count(*args, **kwargs): ...
    def createHandle(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def getRange(*args, **kwargs): ...
    def handle(*args, **kwargs): ...
    def handleWidth(*args, **kwargs): ...
    def indexOf(*args, **kwargs): ...
    def insertWidget(*args, **kwargs): ...
    def isCollapsible(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def moveSplitter(*args, **kwargs): ...
    def opaqueResize(*args, **kwargs): ...
    def orientation(*args, **kwargs): ...
    def refresh(*args, **kwargs): ...
    def replaceWidget(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def restoreState(*args, **kwargs): ...
    def saveState(*args, **kwargs): ...
    def setChildrenCollapsible(*args, **kwargs): ...
    def setCollapsible(*args, **kwargs): ...
    def setHandleWidth(*args, **kwargs): ...
    def setOpaqueResize(*args, **kwargs): ...
    def setOrientation(*args, **kwargs): ...
    def setRubberBand(*args, **kwargs): ...
    def setSizes(*args, **kwargs): ...
    def setStretchFactor(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def sizes(*args, **kwargs): ...
    def widget(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    splitterMoved : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QFileDialog(QDialog):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def accept(*args, **kwargs): ...
    def acceptMode(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def confirmOverwrite(*args, **kwargs): ...
    def defaultSuffix(*args, **kwargs): ...
    def directory(*args, **kwargs): ...
    def directoryUrl(*args, **kwargs): ...
    def done(*args, **kwargs): ...
    def fileMode(*args, **kwargs): ...
    def filter(*args, **kwargs): ...
    def history(*args, **kwargs): ...
    def iconProvider(*args, **kwargs): ...
    def isNameFilterDetailsVisible(*args, **kwargs): ...
    def isReadOnly(*args, **kwargs): ...
    def itemDelegate(*args, **kwargs): ...
    def labelText(*args, **kwargs): ...
    def mimeTypeFilters(*args, **kwargs): ...
    def nameFilters(*args, **kwargs): ...
    def open(*args, **kwargs): ...
    def options(*args, **kwargs): ...
    def proxyModel(*args, **kwargs): ...
    def resolveSymlinks(*args, **kwargs): ...
    def restoreState(*args, **kwargs): ...
    def saveState(*args, **kwargs): ...
    def selectFile(*args, **kwargs): ...
    def selectMimeTypeFilter(*args, **kwargs): ...
    def selectNameFilter(*args, **kwargs): ...
    def selectUrl(*args, **kwargs): ...
    def selectedFiles(*args, **kwargs): ...
    def selectedNameFilter(*args, **kwargs): ...
    def selectedUrls(*args, **kwargs): ...
    def setAcceptMode(*args, **kwargs): ...
    def setConfirmOverwrite(*args, **kwargs): ...
    def setDefaultSuffix(*args, **kwargs): ...
    def setDirectory(*args, **kwargs): ...
    def setDirectoryUrl(*args, **kwargs): ...
    def setFileMode(*args, **kwargs): ...
    def setFilter(*args, **kwargs): ...
    def setHistory(*args, **kwargs): ...
    def setIconProvider(*args, **kwargs): ...
    def setItemDelegate(*args, **kwargs): ...
    def setLabelText(*args, **kwargs): ...
    def setMimeTypeFilters(*args, **kwargs): ...
    def setNameFilter(*args, **kwargs): ...
    def setNameFilterDetailsVisible(*args, **kwargs): ...
    def setNameFilters(*args, **kwargs): ...
    def setOption(*args, **kwargs): ...
    def setOptions(*args, **kwargs): ...
    def setProxyModel(*args, **kwargs): ...
    def setReadOnly(*args, **kwargs): ...
    def setResolveSymlinks(*args, **kwargs): ...
    def setSidebarUrls(*args, **kwargs): ...
    def setSupportedSchemes(*args, **kwargs): ...
    def setViewMode(*args, **kwargs): ...
    def setVisible(*args, **kwargs): ...
    def sidebarUrls(*args, **kwargs): ...
    def supportedSchemes(*args, **kwargs): ...
    def testOption(*args, **kwargs): ...
    def viewMode(*args, **kwargs): ...
    @staticmethod
    def getExistingDirectory(*args, **kwargs): ...
    @staticmethod
    def getExistingDirectoryUrl(*args, **kwargs): ...
    @staticmethod
    def getOpenFileName(*args, **kwargs): ...
    @staticmethod
    def getOpenFileNames(*args, **kwargs): ...
    @staticmethod
    def getOpenFileUrl(*args, **kwargs): ...
    @staticmethod
    def getOpenFileUrls(*args, **kwargs): ...
    @staticmethod
    def getSaveFileName(*args, **kwargs): ...
    @staticmethod
    def getSaveFileUrl(*args, **kwargs): ...
    Accept : DialogLabel
    
    AcceptMode : Type[AcceptMode]
    
    AcceptOpen : AcceptMode
    
    AcceptSave : AcceptMode
    
    AnyFile : FileMode
    
    Detail : ViewMode
    
    DialogLabel : Type[DialogLabel]
    
    Directory : FileMode
    
    DirectoryOnly : FileMode
    
    DontConfirmOverwrite : Option
    
    DontResolveSymlinks : Option
    
    DontUseCustomDirectoryIcons : Option
    
    DontUseNativeDialog : Option
    
    DontUseSheet : Option
    
    ExistingFile : FileMode
    
    ExistingFiles : FileMode
    
    FileMode : Type[FileMode]
    
    FileName : DialogLabel
    
    FileType : DialogLabel
    
    HideNameFilterDetails : Option
    
    List : ViewMode
    
    LookIn : DialogLabel
    
    Option : Type[Option]
    
    Options : Type[Options]
    
    ReadOnly : Option
    
    Reject : DialogLabel
    
    ShowDirsOnly : Option
    
    ViewMode : Type[ViewMode]
    
    __new__ : builtin_function_or_method
    
    currentChanged : PySide2.QtCore.Signal
    
    currentUrlChanged : PySide2.QtCore.Signal
    
    directoryEntered : PySide2.QtCore.Signal
    
    directoryUrlEntered : PySide2.QtCore.Signal
    
    fileSelected : PySide2.QtCore.Signal
    
    filesSelected : PySide2.QtCore.Signal
    
    filterSelected : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    urlSelected : PySide2.QtCore.Signal
    
    urlsSelected : PySide2.QtCore.Signal


class QGraphicsWidget(QGraphicsObject, QGraphicsLayoutItem):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def actions(*args, **kwargs): ...
    def addAction(*args, **kwargs): ...
    def addActions(*args, **kwargs): ...
    def adjustSize(*args, **kwargs): ...
    def autoFillBackground(*args, **kwargs): ...
    def boundingRect(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def close(*args, **kwargs): ...
    def closeEvent(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def focusInEvent(*args, **kwargs): ...
    def focusNextPrevChild(*args, **kwargs): ...
    def focusOutEvent(*args, **kwargs): ...
    def focusPolicy(*args, **kwargs): ...
    def focusWidget(*args, **kwargs): ...
    def font(*args, **kwargs): ...
    def getContentsMargins(*args, **kwargs): ...
    def getWindowFrameMargins(*args, **kwargs): ...
    def grabKeyboardEvent(*args, **kwargs): ...
    def grabMouseEvent(*args, **kwargs): ...
    def grabShortcut(*args, **kwargs): ...
    def hideEvent(*args, **kwargs): ...
    def hoverLeaveEvent(*args, **kwargs): ...
    def hoverMoveEvent(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def insertAction(*args, **kwargs): ...
    def insertActions(*args, **kwargs): ...
    def isActiveWindow(*args, **kwargs): ...
    def itemChange(*args, **kwargs): ...
    def layout(*args, **kwargs): ...
    def layoutDirection(*args, **kwargs): ...
    def moveEvent(*args, **kwargs): ...
    def paint(*args, **kwargs): ...
    def paintWindowFrame(*args, **kwargs): ...
    def palette(*args, **kwargs): ...
    def polishEvent(*args, **kwargs): ...
    def propertyChange(*args, **kwargs): ...
    def rect(*args, **kwargs): ...
    def releaseShortcut(*args, **kwargs): ...
    def removeAction(*args, **kwargs): ...
    def resize(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def sceneEvent(*args, **kwargs): ...
    def setAttribute(*args, **kwargs): ...
    def setAutoFillBackground(*args, **kwargs): ...
    def setContentsMargins(*args, **kwargs): ...
    def setFocusPolicy(*args, **kwargs): ...
    def setFont(*args, **kwargs): ...
    def setGeometry(*args, **kwargs): ...
    def setLayout(*args, **kwargs): ...
    def setLayoutDirection(*args, **kwargs): ...
    def setPalette(*args, **kwargs): ...
    def setShortcutAutoRepeat(*args, **kwargs): ...
    def setShortcutEnabled(*args, **kwargs): ...
    def setStyle(*args, **kwargs): ...
    def setWindowFlags(*args, **kwargs): ...
    def setWindowFrameMargins(*args, **kwargs): ...
    def setWindowTitle(*args, **kwargs): ...
    def shape(*args, **kwargs): ...
    def showEvent(*args, **kwargs): ...
    def size(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def style(*args, **kwargs): ...
    def testAttribute(*args, **kwargs): ...
    def type(*args, **kwargs): ...
    def ungrabKeyboardEvent(*args, **kwargs): ...
    def ungrabMouseEvent(*args, **kwargs): ...
    def unsetLayoutDirection(*args, **kwargs): ...
    def unsetWindowFrameMargins(*args, **kwargs): ...
    def updateGeometry(*args, **kwargs): ...
    def windowFlags(*args, **kwargs): ...
    def windowFrameEvent(*args, **kwargs): ...
    def windowFrameGeometry(*args, **kwargs): ...
    def windowFrameRect(*args, **kwargs): ...
    def windowFrameSectionAt(*args, **kwargs): ...
    def windowTitle(*args, **kwargs): ...
    def windowType(*args, **kwargs): ...
    @staticmethod
    def setTabOrder(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    geometryChanged : PySide2.QtCore.Signal
    
    layoutChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QLabel(QFrame):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def alignment(*args, **kwargs): ...
    def buddy(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def clear(*args, **kwargs): ...
    def contextMenuEvent(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def focusInEvent(*args, **kwargs): ...
    def focusNextPrevChild(*args, **kwargs): ...
    def focusOutEvent(*args, **kwargs): ...
    def hasScaledContents(*args, **kwargs): ...
    def hasSelectedText(*args, **kwargs): ...
    def heightForWidth(*args, **kwargs): ...
    def indent(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def margin(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def movie(*args, **kwargs): ...
    def openExternalLinks(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def picture(*args, **kwargs): ...
    def pixmap(*args, **kwargs): ...
    def selectedText(*args, **kwargs): ...
    def selectionStart(*args, **kwargs): ...
    def setAlignment(*args, **kwargs): ...
    def setBuddy(*args, **kwargs): ...
    def setIndent(*args, **kwargs): ...
    def setMargin(*args, **kwargs): ...
    def setMovie(*args, **kwargs): ...
    def setNum(*args, **kwargs): ...
    def setOpenExternalLinks(*args, **kwargs): ...
    def setPicture(*args, **kwargs): ...
    def setPixmap(*args, **kwargs): ...
    def setScaledContents(*args, **kwargs): ...
    def setSelection(*args, **kwargs): ...
    def setText(*args, **kwargs): ...
    def setTextFormat(*args, **kwargs): ...
    def setTextInteractionFlags(*args, **kwargs): ...
    def setWordWrap(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def text(*args, **kwargs): ...
    def textFormat(*args, **kwargs): ...
    def textInteractionFlags(*args, **kwargs): ...
    def wordWrap(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    linkActivated : PySide2.QtCore.Signal
    
    linkHovered : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QDial(QAbstractSlider):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def event(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def notchSize(*args, **kwargs): ...
    def notchTarget(*args, **kwargs): ...
    def notchesVisible(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def setNotchTarget(*args, **kwargs): ...
    def setNotchesVisible(*args, **kwargs): ...
    def setWrapping(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def sliderChange(*args, **kwargs): ...
    def wrapping(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QGraphicsLinearLayout(QGraphicsLayout):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addItem(*args, **kwargs): ...
    def addStretch(*args, **kwargs): ...
    def alignment(*args, **kwargs): ...
    def count(*args, **kwargs): ...
    def dump(*args, **kwargs): ...
    def insertItem(*args, **kwargs): ...
    def insertStretch(*args, **kwargs): ...
    def invalidate(*args, **kwargs): ...
    def itemAt(*args, **kwargs): ...
    def itemSpacing(*args, **kwargs): ...
    def orientation(*args, **kwargs): ...
    def removeAt(*args, **kwargs): ...
    def removeItem(*args, **kwargs): ...
    def setAlignment(*args, **kwargs): ...
    def setGeometry(*args, **kwargs): ...
    def setItemSpacing(*args, **kwargs): ...
    def setOrientation(*args, **kwargs): ...
    def setSpacing(*args, **kwargs): ...
    def setStretchFactor(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def spacing(*args, **kwargs): ...
    def stretchFactor(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QBoxLayout(QLayout):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addItem(*args, **kwargs): ...
    def addLayout(*args, **kwargs): ...
    def addSpacerItem(*args, **kwargs): ...
    def addSpacing(*args, **kwargs): ...
    def addStretch(*args, **kwargs): ...
    def addStrut(*args, **kwargs): ...
    def addWidget(*args, **kwargs): ...
    def count(*args, **kwargs): ...
    def direction(*args, **kwargs): ...
    def expandingDirections(*args, **kwargs): ...
    def hasHeightForWidth(*args, **kwargs): ...
    def heightForWidth(*args, **kwargs): ...
    def insertItem(*args, **kwargs): ...
    def insertLayout(*args, **kwargs): ...
    def insertSpacerItem(*args, **kwargs): ...
    def insertSpacing(*args, **kwargs): ...
    def insertStretch(*args, **kwargs): ...
    def insertWidget(*args, **kwargs): ...
    def invalidate(*args, **kwargs): ...
    def itemAt(*args, **kwargs): ...
    def maximumSize(*args, **kwargs): ...
    def minimumHeightForWidth(*args, **kwargs): ...
    def minimumSize(*args, **kwargs): ...
    def setDirection(*args, **kwargs): ...
    def setGeometry(*args, **kwargs): ...
    def setSpacing(*args, **kwargs): ...
    def setStretch(*args, **kwargs): ...
    def setStretchFactor(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def spacing(*args, **kwargs): ...
    def stretch(*args, **kwargs): ...
    def takeAt(*args, **kwargs): ...
    BottomToTop : Direction
    
    Direction : Type[Direction]
    
    Down : Direction
    
    LeftToRight : Direction
    
    RightToLeft : Direction
    
    TopToBottom : Direction
    
    Up : Direction
    
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QSlider(QAbstractSlider):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def event(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def setTickInterval(*args, **kwargs): ...
    def setTickPosition(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def tickInterval(*args, **kwargs): ...
    def tickPosition(*args, **kwargs): ...
    NoTicks : TickPosition
    
    TickPosition : Type[TickPosition]
    
    TicksAbove : TickPosition
    
    TicksBelow : TickPosition
    
    TicksBothSides : TickPosition
    
    TicksLeft : TickPosition
    
    TicksRight : TickPosition
    
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QStyleOptionToolButton(QStyleOptionComplex):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    Arrow : ToolButtonFeature
    
    HasMenu : ToolButtonFeature
    
    Menu : ToolButtonFeature
    
    MenuButtonPopup : ToolButtonFeature
    
    locals()['None'] : ToolButtonFeature
    
    PopupDelay : ToolButtonFeature
    
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    ToolButtonFeature : Type[ToolButtonFeature]
    
    ToolButtonFeatures : Type[ToolButtonFeatures]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    arrowType : getset_descriptor
    
    features : getset_descriptor
    
    font : getset_descriptor
    
    icon : getset_descriptor
    
    iconSize : getset_descriptor
    
    pos : getset_descriptor
    
    text : getset_descriptor
    
    toolButtonStyle : getset_descriptor


class QCheckBox(QAbstractButton):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def checkState(*args, **kwargs): ...
    def checkStateSet(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def hitButton(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def isTristate(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def nextCheckState(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def setCheckState(*args, **kwargs): ...
    def setTristate(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    stateChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QFontDialog(QDialog):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def changeEvent(*args, **kwargs): ...
    def currentFont(*args, **kwargs): ...
    def done(*args, **kwargs): ...
    def eventFilter(*args, **kwargs): ...
    def open(*args, **kwargs): ...
    def options(*args, **kwargs): ...
    def selectedFont(*args, **kwargs): ...
    def setCurrentFont(*args, **kwargs): ...
    def setOption(*args, **kwargs): ...
    def setOptions(*args, **kwargs): ...
    def setVisible(*args, **kwargs): ...
    def testOption(*args, **kwargs): ...
    @staticmethod
    def getFont(*args, **kwargs): ...
    DontUseNativeDialog : FontDialogOption
    
    FontDialogOption : Type[FontDialogOption]
    
    FontDialogOptions : Type[FontDialogOptions]
    
    MonospacedFonts : FontDialogOption
    
    NoButtons : FontDialogOption
    
    NonScalableFonts : FontDialogOption
    
    ProportionalFonts : FontDialogOption
    
    ScalableFonts : FontDialogOption
    
    __new__ : builtin_function_or_method
    
    currentFontChanged : PySide2.QtCore.Signal
    
    fontSelected : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QGraphicsPolygonItem(QAbstractGraphicsShapeItem):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def boundingRect(*args, **kwargs): ...
    def contains(*args, **kwargs): ...
    def extension(*args, **kwargs): ...
    def fillRule(*args, **kwargs): ...
    def isObscuredBy(*args, **kwargs): ...
    def opaqueArea(*args, **kwargs): ...
    def paint(*args, **kwargs): ...
    def polygon(*args, **kwargs): ...
    def setFillRule(*args, **kwargs): ...
    def setPolygon(*args, **kwargs): ...
    def shape(*args, **kwargs): ...
    def type(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QScrollBar(QAbstractSlider):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def contextMenuEvent(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def hideEvent(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def sliderChange(*args, **kwargs): ...
    def wheelEvent(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QProgressDialog(QDialog):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def autoClose(*args, **kwargs): ...
    def autoReset(*args, **kwargs): ...
    def cancel(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def closeEvent(*args, **kwargs): ...
    def forceShow(*args, **kwargs): ...
    def labelText(*args, **kwargs): ...
    def maximum(*args, **kwargs): ...
    def minimum(*args, **kwargs): ...
    def minimumDuration(*args, **kwargs): ...
    def open(*args, **kwargs): ...
    def reset(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def setAutoClose(*args, **kwargs): ...
    def setAutoReset(*args, **kwargs): ...
    def setBar(*args, **kwargs): ...
    def setCancelButton(*args, **kwargs): ...
    def setCancelButtonText(*args, **kwargs): ...
    def setLabel(*args, **kwargs): ...
    def setLabelText(*args, **kwargs): ...
    def setMaximum(*args, **kwargs): ...
    def setMinimum(*args, **kwargs): ...
    def setMinimumDuration(*args, **kwargs): ...
    def setRange(*args, **kwargs): ...
    def setValue(*args, **kwargs): ...
    def showEvent(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def value(*args, **kwargs): ...
    def wasCanceled(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    canceled : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QMessageBox(QDialog):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addButton(*args, **kwargs): ...
    def button(*args, **kwargs): ...
    def buttonRole(*args, **kwargs): ...
    def buttonText(*args, **kwargs): ...
    def buttons(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def checkBox(*args, **kwargs): ...
    def clickedButton(*args, **kwargs): ...
    def closeEvent(*args, **kwargs): ...
    def defaultButton(*args, **kwargs): ...
    def detailedText(*args, **kwargs): ...
    def escapeButton(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def icon(*args, **kwargs): ...
    def iconPixmap(*args, **kwargs): ...
    def informativeText(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def open(*args, **kwargs): ...
    def removeButton(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def setButtonText(*args, **kwargs): ...
    def setCheckBox(*args, **kwargs): ...
    def setDefaultButton(*args, **kwargs): ...
    def setDetailedText(*args, **kwargs): ...
    def setEscapeButton(*args, **kwargs): ...
    def setIcon(*args, **kwargs): ...
    def setIconPixmap(*args, **kwargs): ...
    def setInformativeText(*args, **kwargs): ...
    def setStandardButtons(*args, **kwargs): ...
    def setText(*args, **kwargs): ...
    def setTextFormat(*args, **kwargs): ...
    def setTextInteractionFlags(*args, **kwargs): ...
    def setWindowModality(*args, **kwargs): ...
    def setWindowTitle(*args, **kwargs): ...
    def showEvent(*args, **kwargs): ...
    def standardButton(*args, **kwargs): ...
    def standardButtons(*args, **kwargs): ...
    def text(*args, **kwargs): ...
    def textFormat(*args, **kwargs): ...
    def textInteractionFlags(*args, **kwargs): ...
    @staticmethod
    def about(*args, **kwargs): ...
    @staticmethod
    def aboutQt(*args, **kwargs): ...
    @staticmethod
    def critical(*args, **kwargs): ...
    @staticmethod
    def information(*args, **kwargs): ...
    @staticmethod
    def question(*args, **kwargs): ...
    @staticmethod
    def standardIcon(*args, **kwargs): ...
    @staticmethod
    def warning(*args, **kwargs): ...
    Abort : StandardButton
    
    AcceptRole : ButtonRole
    
    ActionRole : ButtonRole
    
    Apply : StandardButton
    
    ApplyRole : ButtonRole
    
    ButtonMask : StandardButton
    
    ButtonRole : Type[ButtonRole]
    
    Cancel : StandardButton
    
    Close : StandardButton
    
    Critical : Icon
    
    Default : StandardButton
    
    DestructiveRole : ButtonRole
    
    Discard : StandardButton
    
    Escape : StandardButton
    
    FirstButton : StandardButton
    
    FlagMask : StandardButton
    
    Help : StandardButton
    
    HelpRole : ButtonRole
    
    Icon : Type[Icon]
    
    Ignore : StandardButton
    
    Information : Icon
    
    InvalidRole : ButtonRole
    
    LastButton : StandardButton
    
    NRoles : ButtonRole
    
    No : StandardButton
    
    NoAll : StandardButton
    
    NoButton : StandardButton
    
    NoIcon : Icon
    
    NoRole : ButtonRole
    
    NoToAll : StandardButton
    
    Ok : StandardButton
    
    Open : StandardButton
    
    Question : Icon
    
    RejectRole : ButtonRole
    
    Reset : StandardButton
    
    ResetRole : ButtonRole
    
    RestoreDefaults : StandardButton
    
    Retry : StandardButton
    
    Save : StandardButton
    
    SaveAll : StandardButton
    
    StandardButton : Type[StandardButton]
    
    StandardButtons : Type[StandardButtons]
    
    Warning : Icon
    
    Yes : StandardButton
    
    YesAll : StandardButton
    
    YesRole : ButtonRole
    
    YesToAll : StandardButton
    
    __new__ : builtin_function_or_method
    
    buttonClicked : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QStyleOptionSizeGrip(QStyleOptionComplex):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    corner : getset_descriptor


class QDoubleSpinBox(QAbstractSpinBox):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def cleanText(*args, **kwargs): ...
    def decimals(*args, **kwargs): ...
    def fixup(*args, **kwargs): ...
    def maximum(*args, **kwargs): ...
    def minimum(*args, **kwargs): ...
    def prefix(*args, **kwargs): ...
    def setDecimals(*args, **kwargs): ...
    def setMaximum(*args, **kwargs): ...
    def setMinimum(*args, **kwargs): ...
    def setPrefix(*args, **kwargs): ...
    def setRange(*args, **kwargs): ...
    def setSingleStep(*args, **kwargs): ...
    def setSuffix(*args, **kwargs): ...
    def setValue(*args, **kwargs): ...
    def singleStep(*args, **kwargs): ...
    def suffix(*args, **kwargs): ...
    def textFromValue(*args, **kwargs): ...
    def validate(*args, **kwargs): ...
    def value(*args, **kwargs): ...
    def valueFromText(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    valueChanged : PySide2.QtCore.Signal


class QGridLayout(QLayout):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addItem(*args, **kwargs): ...
    def addLayout(*args, **kwargs): ...
    def addWidget(*args, **kwargs): ...
    def cellRect(*args, **kwargs): ...
    def columnCount(*args, **kwargs): ...
    def columnMinimumWidth(*args, **kwargs): ...
    def columnStretch(*args, **kwargs): ...
    def count(*args, **kwargs): ...
    def expandingDirections(*args, **kwargs): ...
    def getItemPosition(*args, **kwargs): ...
    def hasHeightForWidth(*args, **kwargs): ...
    def heightForWidth(*args, **kwargs): ...
    def horizontalSpacing(*args, **kwargs): ...
    def invalidate(*args, **kwargs): ...
    def itemAt(*args, **kwargs): ...
    def itemAtPosition(*args, **kwargs): ...
    def maximumSize(*args, **kwargs): ...
    def minimumHeightForWidth(*args, **kwargs): ...
    def minimumSize(*args, **kwargs): ...
    def originCorner(*args, **kwargs): ...
    def rowCount(*args, **kwargs): ...
    def rowMinimumHeight(*args, **kwargs): ...
    def rowStretch(*args, **kwargs): ...
    def setColumnMinimumWidth(*args, **kwargs): ...
    def setColumnStretch(*args, **kwargs): ...
    def setDefaultPositioning(*args, **kwargs): ...
    def setGeometry(*args, **kwargs): ...
    def setHorizontalSpacing(*args, **kwargs): ...
    def setOriginCorner(*args, **kwargs): ...
    def setRowMinimumHeight(*args, **kwargs): ...
    def setRowStretch(*args, **kwargs): ...
    def setSpacing(*args, **kwargs): ...
    def setVerticalSpacing(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def spacing(*args, **kwargs): ...
    def takeAt(*args, **kwargs): ...
    def verticalSpacing(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QColorDialog(QDialog):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def changeEvent(*args, **kwargs): ...
    def currentColor(*args, **kwargs): ...
    def done(*args, **kwargs): ...
    def open(*args, **kwargs): ...
    def options(*args, **kwargs): ...
    def selectedColor(*args, **kwargs): ...
    def setCurrentColor(*args, **kwargs): ...
    def setOption(*args, **kwargs): ...
    def setOptions(*args, **kwargs): ...
    def setVisible(*args, **kwargs): ...
    def testOption(*args, **kwargs): ...
    @staticmethod
    def customColor(*args, **kwargs): ...
    @staticmethod
    def customCount(*args, **kwargs): ...
    @staticmethod
    def getColor(*args, **kwargs): ...
    @staticmethod
    def setCustomColor(*args, **kwargs): ...
    @staticmethod
    def setStandardColor(*args, **kwargs): ...
    @staticmethod
    def standardColor(*args, **kwargs): ...
    ColorDialogOption : Type[ColorDialogOption]
    
    ColorDialogOptions : Type[ColorDialogOptions]
    
    DontUseNativeDialog : ColorDialogOption
    
    NoButtons : ColorDialogOption
    
    ShowAlphaChannel : ColorDialogOption
    
    __new__ : builtin_function_or_method
    
    colorSelected : PySide2.QtCore.Signal
    
    currentColorChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QToolBox(QFrame):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addItem(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def count(*args, **kwargs): ...
    def currentIndex(*args, **kwargs): ...
    def currentWidget(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def indexOf(*args, **kwargs): ...
    def insertItem(*args, **kwargs): ...
    def isItemEnabled(*args, **kwargs): ...
    def itemIcon(*args, **kwargs): ...
    def itemInserted(*args, **kwargs): ...
    def itemRemoved(*args, **kwargs): ...
    def itemText(*args, **kwargs): ...
    def itemToolTip(*args, **kwargs): ...
    def removeItem(*args, **kwargs): ...
    def setCurrentIndex(*args, **kwargs): ...
    def setCurrentWidget(*args, **kwargs): ...
    def setItemEnabled(*args, **kwargs): ...
    def setItemIcon(*args, **kwargs): ...
    def setItemText(*args, **kwargs): ...
    def setItemToolTip(*args, **kwargs): ...
    def showEvent(*args, **kwargs): ...
    def widget(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    currentChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QStackedLayout(QLayout):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addItem(*args, **kwargs): ...
    def addWidget(*args, **kwargs): ...
    def count(*args, **kwargs): ...
    def currentIndex(*args, **kwargs): ...
    def currentWidget(*args, **kwargs): ...
    def hasHeightForWidth(*args, **kwargs): ...
    def heightForWidth(*args, **kwargs): ...
    def insertWidget(*args, **kwargs): ...
    def itemAt(*args, **kwargs): ...
    def minimumSize(*args, **kwargs): ...
    def setCurrentIndex(*args, **kwargs): ...
    def setCurrentWidget(*args, **kwargs): ...
    def setGeometry(*args, **kwargs): ...
    def setStackingMode(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def stackingMode(*args, **kwargs): ...
    def takeAt(*args, **kwargs): ...
    def widget(*args, **kwargs): ...
    StackAll : StackingMode
    
    StackOne : StackingMode
    
    StackingMode : Type[StackingMode]
    
    __new__ : builtin_function_or_method
    
    currentChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    widgetRemoved : PySide2.QtCore.Signal


class QAbstractScrollArea(QFrame):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addScrollBarWidget(*args, **kwargs): ...
    def contextMenuEvent(*args, **kwargs): ...
    def cornerWidget(*args, **kwargs): ...
    def dragEnterEvent(*args, **kwargs): ...
    def dragLeaveEvent(*args, **kwargs): ...
    def dragMoveEvent(*args, **kwargs): ...
    def dropEvent(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def eventFilter(*args, **kwargs): ...
    def horizontalScrollBar(*args, **kwargs): ...
    def horizontalScrollBarPolicy(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def maximumViewportSize(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def mouseDoubleClickEvent(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def scrollBarWidgets(*args, **kwargs): ...
    def scrollContentsBy(*args, **kwargs): ...
    def setCornerWidget(*args, **kwargs): ...
    def setHorizontalScrollBar(*args, **kwargs): ...
    def setHorizontalScrollBarPolicy(*args, **kwargs): ...
    def setSizeAdjustPolicy(*args, **kwargs): ...
    def setVerticalScrollBar(*args, **kwargs): ...
    def setVerticalScrollBarPolicy(*args, **kwargs): ...
    def setViewport(*args, **kwargs): ...
    def setViewportMargins(*args, **kwargs): ...
    def setupViewport(*args, **kwargs): ...
    def sizeAdjustPolicy(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def verticalScrollBar(*args, **kwargs): ...
    def verticalScrollBarPolicy(*args, **kwargs): ...
    def viewport(*args, **kwargs): ...
    def viewportEvent(*args, **kwargs): ...
    def viewportMargins(*args, **kwargs): ...
    def viewportSizeHint(*args, **kwargs): ...
    def wheelEvent(*args, **kwargs): ...
    AdjustIgnored : SizeAdjustPolicy
    
    AdjustToContents : SizeAdjustPolicy
    
    AdjustToContentsOnFirstShow : SizeAdjustPolicy
    
    SizeAdjustPolicy : Type[SizeAdjustPolicy]
    
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QGraphicsSimpleTextItem(QAbstractGraphicsShapeItem):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def boundingRect(*args, **kwargs): ...
    def contains(*args, **kwargs): ...
    def extension(*args, **kwargs): ...
    def font(*args, **kwargs): ...
    def isObscuredBy(*args, **kwargs): ...
    def opaqueArea(*args, **kwargs): ...
    def paint(*args, **kwargs): ...
    def setFont(*args, **kwargs): ...
    def setText(*args, **kwargs): ...
    def shape(*args, **kwargs): ...
    def text(*args, **kwargs): ...
    def type(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QFormLayout(QLayout):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addItem(*args, **kwargs): ...
    def addRow(*args, **kwargs): ...
    def count(*args, **kwargs): ...
    def expandingDirections(*args, **kwargs): ...
    def fieldGrowthPolicy(*args, **kwargs): ...
    def formAlignment(*args, **kwargs): ...
    def getItemPosition(*args, **kwargs): ...
    def getLayoutPosition(*args, **kwargs): ...
    def getWidgetPosition(*args, **kwargs): ...
    def hasHeightForWidth(*args, **kwargs): ...
    def heightForWidth(*args, **kwargs): ...
    def horizontalSpacing(*args, **kwargs): ...
    def insertRow(*args, **kwargs): ...
    def invalidate(*args, **kwargs): ...
    def itemAt(*args, **kwargs): ...
    def labelAlignment(*args, **kwargs): ...
    def labelForField(*args, **kwargs): ...
    def minimumSize(*args, **kwargs): ...
    def rowCount(*args, **kwargs): ...
    def rowWrapPolicy(*args, **kwargs): ...
    def setFieldGrowthPolicy(*args, **kwargs): ...
    def setFormAlignment(*args, **kwargs): ...
    def setGeometry(*args, **kwargs): ...
    def setHorizontalSpacing(*args, **kwargs): ...
    def setItem(*args, **kwargs): ...
    def setLabelAlignment(*args, **kwargs): ...
    def setLayout(*args, **kwargs): ...
    def setRowWrapPolicy(*args, **kwargs): ...
    def setSpacing(*args, **kwargs): ...
    def setVerticalSpacing(*args, **kwargs): ...
    def setWidget(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def spacing(*args, **kwargs): ...
    def takeAt(*args, **kwargs): ...
    def verticalSpacing(*args, **kwargs): ...
    AllNonFixedFieldsGrow : FieldGrowthPolicy
    
    DontWrapRows : RowWrapPolicy
    
    ExpandingFieldsGrow : FieldGrowthPolicy
    
    FieldGrowthPolicy : Type[FieldGrowthPolicy]
    
    FieldRole : ItemRole
    
    FieldsStayAtSizeHint : FieldGrowthPolicy
    
    ItemRole : Type[ItemRole]
    
    LabelRole : ItemRole
    
    RowWrapPolicy : Type[RowWrapPolicy]
    
    SpanningRole : ItemRole
    
    WrapAllRows : RowWrapPolicy
    
    WrapLongRows : RowWrapPolicy
    
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QStyleOptionGroupBox(QStyleOptionComplex):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    features : getset_descriptor
    
    lineWidth : getset_descriptor
    
    midLineWidth : getset_descriptor
    
    text : getset_descriptor
    
    textAlignment : getset_descriptor
    
    textColor : getset_descriptor


class QStyleOptionComboBox(QStyleOptionComplex):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    currentIcon : getset_descriptor
    
    currentText : getset_descriptor
    
    editable : getset_descriptor
    
    frame : getset_descriptor
    
    iconSize : getset_descriptor
    
    popupRect : getset_descriptor


class QPushButton(QAbstractButton):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def autoDefault(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def focusInEvent(*args, **kwargs): ...
    def focusOutEvent(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def isDefault(*args, **kwargs): ...
    def isFlat(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def menu(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def setAutoDefault(*args, **kwargs): ...
    def setDefault(*args, **kwargs): ...
    def setFlat(*args, **kwargs): ...
    def setMenu(*args, **kwargs): ...
    def showMenu(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QSpinBox(QAbstractSpinBox):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def cleanText(*args, **kwargs): ...
    def displayIntegerBase(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def fixup(*args, **kwargs): ...
    def maximum(*args, **kwargs): ...
    def minimum(*args, **kwargs): ...
    def prefix(*args, **kwargs): ...
    def setDisplayIntegerBase(*args, **kwargs): ...
    def setMaximum(*args, **kwargs): ...
    def setMinimum(*args, **kwargs): ...
    def setPrefix(*args, **kwargs): ...
    def setRange(*args, **kwargs): ...
    def setSingleStep(*args, **kwargs): ...
    def setSuffix(*args, **kwargs): ...
    def setValue(*args, **kwargs): ...
    def singleStep(*args, **kwargs): ...
    def suffix(*args, **kwargs): ...
    def textFromValue(*args, **kwargs): ...
    def validate(*args, **kwargs): ...
    def value(*args, **kwargs): ...
    def valueFromText(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    valueChanged : PySide2.QtCore.Signal


class QStyleOptionTitleBar(QStyleOptionComplex):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    icon : getset_descriptor
    
    text : getset_descriptor
    
    titleBarFlags : getset_descriptor
    
    titleBarState : getset_descriptor


class QLCDNumber(QFrame):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def checkOverflow(*args, **kwargs): ...
    def digitCount(*args, **kwargs): ...
    def display(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def intValue(*args, **kwargs): ...
    def mode(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def segmentStyle(*args, **kwargs): ...
    def setBinMode(*args, **kwargs): ...
    def setDecMode(*args, **kwargs): ...
    def setDigitCount(*args, **kwargs): ...
    def setHexMode(*args, **kwargs): ...
    def setMode(*args, **kwargs): ...
    def setOctMode(*args, **kwargs): ...
    def setSegmentStyle(*args, **kwargs): ...
    def setSmallDecimalPoint(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def smallDecimalPoint(*args, **kwargs): ...
    def value(*args, **kwargs): ...
    Bin : Mode
    
    Dec : Mode
    
    Filled : SegmentStyle
    
    Flat : SegmentStyle
    
    Hex : Mode
    
    Mode : Type[Mode]
    
    Oct : Mode
    
    Outline : SegmentStyle
    
    SegmentStyle : Type[SegmentStyle]
    
    __new__ : builtin_function_or_method
    
    overflow : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QErrorMessage(QDialog):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def changeEvent(*args, **kwargs): ...
    def done(*args, **kwargs): ...
    def showMessage(*args, **kwargs): ...
    @staticmethod
    def qtHandler(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QStyleOptionSlider(QStyleOptionComplex):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    dialWrapping : getset_descriptor
    
    maximum : getset_descriptor
    
    minimum : getset_descriptor
    
    notchTarget : getset_descriptor
    
    orientation : getset_descriptor
    
    pageStep : getset_descriptor
    
    singleStep : getset_descriptor
    
    sliderPosition : getset_descriptor
    
    sliderValue : getset_descriptor
    
    tickInterval : getset_descriptor
    
    tickPosition : getset_descriptor
    
    upsideDown : getset_descriptor


class QGraphicsPathItem(QAbstractGraphicsShapeItem):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def boundingRect(*args, **kwargs): ...
    def contains(*args, **kwargs): ...
    def extension(*args, **kwargs): ...
    def isObscuredBy(*args, **kwargs): ...
    def opaqueArea(*args, **kwargs): ...
    def paint(*args, **kwargs): ...
    def path(*args, **kwargs): ...
    def setPath(*args, **kwargs): ...
    def shape(*args, **kwargs): ...
    def type(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QStackedWidget(QFrame):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addWidget(*args, **kwargs): ...
    def count(*args, **kwargs): ...
    def currentIndex(*args, **kwargs): ...
    def currentWidget(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def indexOf(*args, **kwargs): ...
    def insertWidget(*args, **kwargs): ...
    def removeWidget(*args, **kwargs): ...
    def setCurrentIndex(*args, **kwargs): ...
    def setCurrentWidget(*args, **kwargs): ...
    def widget(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    currentChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    widgetRemoved : PySide2.QtCore.Signal


class QWizard(QDialog):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addPage(*args, **kwargs): ...
    def back(*args, **kwargs): ...
    def button(*args, **kwargs): ...
    def buttonText(*args, **kwargs): ...
    def cleanupPage(*args, **kwargs): ...
    def currentId(*args, **kwargs): ...
    def currentPage(*args, **kwargs): ...
    def done(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def field(*args, **kwargs): ...
    def hasVisitedPage(*args, **kwargs): ...
    def initializePage(*args, **kwargs): ...
    def next(*args, **kwargs): ...
    def nextId(*args, **kwargs): ...
    def options(*args, **kwargs): ...
    def page(*args, **kwargs): ...
    def pageIds(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def pixmap(*args, **kwargs): ...
    def removePage(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def restart(*args, **kwargs): ...
    def setButton(*args, **kwargs): ...
    def setButtonLayout(*args, **kwargs): ...
    def setButtonText(*args, **kwargs): ...
    def setDefaultProperty(*args, **kwargs): ...
    def setField(*args, **kwargs): ...
    def setOption(*args, **kwargs): ...
    def setOptions(*args, **kwargs): ...
    def setPage(*args, **kwargs): ...
    def setPixmap(*args, **kwargs): ...
    def setSideWidget(*args, **kwargs): ...
    def setStartId(*args, **kwargs): ...
    def setSubTitleFormat(*args, **kwargs): ...
    def setTitleFormat(*args, **kwargs): ...
    def setVisible(*args, **kwargs): ...
    def setWizardStyle(*args, **kwargs): ...
    def sideWidget(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def startId(*args, **kwargs): ...
    def subTitleFormat(*args, **kwargs): ...
    def testOption(*args, **kwargs): ...
    def titleFormat(*args, **kwargs): ...
    def validateCurrentPage(*args, **kwargs): ...
    def visitedPages(*args, **kwargs): ...
    def wizardStyle(*args, **kwargs): ...
    AeroStyle : WizardStyle
    
    BackButton : WizardButton
    
    BackgroundPixmap : WizardPixmap
    
    BannerPixmap : WizardPixmap
    
    CancelButton : WizardButton
    
    CancelButtonOnLeft : WizardOption
    
    ClassicStyle : WizardStyle
    
    CommitButton : WizardButton
    
    CustomButton1 : WizardButton
    
    CustomButton2 : WizardButton
    
    CustomButton3 : WizardButton
    
    DisabledBackButtonOnLastPage : WizardOption
    
    ExtendedWatermarkPixmap : WizardOption
    
    FinishButton : WizardButton
    
    HaveCustomButton1 : WizardOption
    
    HaveCustomButton2 : WizardOption
    
    HaveCustomButton3 : WizardOption
    
    HaveFinishButtonOnEarlyPages : WizardOption
    
    HaveHelpButton : WizardOption
    
    HaveNextButtonOnLastPage : WizardOption
    
    HelpButton : WizardButton
    
    HelpButtonOnRight : WizardOption
    
    IgnoreSubTitles : WizardOption
    
    IndependentPages : WizardOption
    
    LogoPixmap : WizardPixmap
    
    MacStyle : WizardStyle
    
    ModernStyle : WizardStyle
    
    NButtons : WizardButton
    
    NPixmaps : WizardPixmap
    
    NStandardButtons : WizardButton
    
    NStyles : WizardStyle
    
    NextButton : WizardButton
    
    NoBackButtonOnLastPage : WizardOption
    
    NoBackButtonOnStartPage : WizardOption
    
    NoButton : WizardButton
    
    NoCancelButton : WizardOption
    
    NoCancelButtonOnLastPage : WizardOption
    
    NoDefaultButton : WizardOption
    
    Stretch : WizardButton
    
    WatermarkPixmap : WizardPixmap
    
    WizardButton : Type[WizardButton]
    
    WizardOption : Type[WizardOption]
    
    WizardOptions : Type[WizardOptions]
    
    WizardPixmap : Type[WizardPixmap]
    
    WizardStyle : Type[WizardStyle]
    
    __new__ : builtin_function_or_method
    
    currentIdChanged : PySide2.QtCore.Signal
    
    customButtonClicked : PySide2.QtCore.Signal
    
    helpRequested : PySide2.QtCore.Signal
    
    pageAdded : PySide2.QtCore.Signal
    
    pageRemoved : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QGraphicsEllipseItem(QAbstractGraphicsShapeItem):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def boundingRect(*args, **kwargs): ...
    def contains(*args, **kwargs): ...
    def extension(*args, **kwargs): ...
    def isObscuredBy(*args, **kwargs): ...
    def opaqueArea(*args, **kwargs): ...
    def paint(*args, **kwargs): ...
    def rect(*args, **kwargs): ...
    def setRect(*args, **kwargs): ...
    def setSpanAngle(*args, **kwargs): ...
    def setStartAngle(*args, **kwargs): ...
    def shape(*args, **kwargs): ...
    def spanAngle(*args, **kwargs): ...
    def startAngle(*args, **kwargs): ...
    def type(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QGraphicsAnchorLayout(QGraphicsLayout):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addAnchor(*args, **kwargs): ...
    def addAnchors(*args, **kwargs): ...
    def addCornerAnchors(*args, **kwargs): ...
    def anchor(*args, **kwargs): ...
    def count(*args, **kwargs): ...
    def horizontalSpacing(*args, **kwargs): ...
    def invalidate(*args, **kwargs): ...
    def itemAt(*args, **kwargs): ...
    def removeAt(*args, **kwargs): ...
    def setGeometry(*args, **kwargs): ...
    def setHorizontalSpacing(*args, **kwargs): ...
    def setSpacing(*args, **kwargs): ...
    def setVerticalSpacing(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def verticalSpacing(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QToolButton(QAbstractButton):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def actionEvent(*args, **kwargs): ...
    def arrowType(*args, **kwargs): ...
    def autoRaise(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def defaultAction(*args, **kwargs): ...
    def enterEvent(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def hitButton(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def leaveEvent(*args, **kwargs): ...
    def menu(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def nextCheckState(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def popupMode(*args, **kwargs): ...
    def setArrowType(*args, **kwargs): ...
    def setAutoRaise(*args, **kwargs): ...
    def setDefaultAction(*args, **kwargs): ...
    def setMenu(*args, **kwargs): ...
    def setPopupMode(*args, **kwargs): ...
    def setToolButtonStyle(*args, **kwargs): ...
    def showMenu(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def timerEvent(*args, **kwargs): ...
    def toolButtonStyle(*args, **kwargs): ...
    DelayedPopup : ToolButtonPopupMode
    
    InstantPopup : ToolButtonPopupMode
    
    MenuButtonPopup : ToolButtonPopupMode
    
    ToolButtonPopupMode : Type[ToolButtonPopupMode]
    
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    triggered : PySide2.QtCore.Signal


class QInputDialog(QDialog):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def cancelButtonText(*args, **kwargs): ...
    def comboBoxItems(*args, **kwargs): ...
    def done(*args, **kwargs): ...
    def doubleDecimals(*args, **kwargs): ...
    def doubleMaximum(*args, **kwargs): ...
    def doubleMinimum(*args, **kwargs): ...
    def doubleValue(*args, **kwargs): ...
    def inputMode(*args, **kwargs): ...
    def intMaximum(*args, **kwargs): ...
    def intMinimum(*args, **kwargs): ...
    def intStep(*args, **kwargs): ...
    def intValue(*args, **kwargs): ...
    def isComboBoxEditable(*args, **kwargs): ...
    def labelText(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def okButtonText(*args, **kwargs): ...
    def open(*args, **kwargs): ...
    def setCancelButtonText(*args, **kwargs): ...
    def setComboBoxEditable(*args, **kwargs): ...
    def setComboBoxItems(*args, **kwargs): ...
    def setDoubleDecimals(*args, **kwargs): ...
    def setDoubleMaximum(*args, **kwargs): ...
    def setDoubleMinimum(*args, **kwargs): ...
    def setDoubleRange(*args, **kwargs): ...
    def setDoubleValue(*args, **kwargs): ...
    def setInputMode(*args, **kwargs): ...
    def setIntMaximum(*args, **kwargs): ...
    def setIntMinimum(*args, **kwargs): ...
    def setIntRange(*args, **kwargs): ...
    def setIntStep(*args, **kwargs): ...
    def setIntValue(*args, **kwargs): ...
    def setLabelText(*args, **kwargs): ...
    def setOkButtonText(*args, **kwargs): ...
    def setOption(*args, **kwargs): ...
    def setTextEchoMode(*args, **kwargs): ...
    def setTextValue(*args, **kwargs): ...
    def setVisible(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def testOption(*args, **kwargs): ...
    def textEchoMode(*args, **kwargs): ...
    def textValue(*args, **kwargs): ...
    @staticmethod
    def getDouble(*args, **kwargs): ...
    @staticmethod
    def getInt(*args, **kwargs): ...
    @staticmethod
    def getItem(*args, **kwargs): ...
    @staticmethod
    def getMultiLineText(*args, **kwargs): ...
    @staticmethod
    def getText(*args, **kwargs): ...
    DoubleInput : InputMode
    
    InputDialogOption : Type[InputDialogOption]
    
    InputMode : Type[InputMode]
    
    IntInput : InputMode
    
    NoButtons : InputDialogOption
    
    TextInput : InputMode
    
    UseListViewForComboBoxItems : InputDialogOption
    
    UsePlainTextEditForTextInput : InputDialogOption
    
    __new__ : builtin_function_or_method
    
    doubleValueChanged : PySide2.QtCore.Signal
    
    doubleValueSelected : PySide2.QtCore.Signal
    
    intValueChanged : PySide2.QtCore.Signal
    
    intValueSelected : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    textValueChanged : PySide2.QtCore.Signal
    
    textValueSelected : PySide2.QtCore.Signal


class QDateTimeEdit(QAbstractSpinBox):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def calendarPopup(*args, **kwargs): ...
    def calendarWidget(*args, **kwargs): ...
    def clear(*args, **kwargs): ...
    def clearMaximumDate(*args, **kwargs): ...
    def clearMaximumDateTime(*args, **kwargs): ...
    def clearMaximumTime(*args, **kwargs): ...
    def clearMinimumDate(*args, **kwargs): ...
    def clearMinimumDateTime(*args, **kwargs): ...
    def clearMinimumTime(*args, **kwargs): ...
    def currentSection(*args, **kwargs): ...
    def currentSectionIndex(*args, **kwargs): ...
    def date(*args, **kwargs): ...
    def dateTime(*args, **kwargs): ...
    def dateTimeFromText(*args, **kwargs): ...
    def displayFormat(*args, **kwargs): ...
    def displayedSections(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def fixup(*args, **kwargs): ...
    def focusInEvent(*args, **kwargs): ...
    def focusNextPrevChild(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def maximumDate(*args, **kwargs): ...
    def maximumDateTime(*args, **kwargs): ...
    def maximumTime(*args, **kwargs): ...
    def minimumDate(*args, **kwargs): ...
    def minimumDateTime(*args, **kwargs): ...
    def minimumTime(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def sectionAt(*args, **kwargs): ...
    def sectionCount(*args, **kwargs): ...
    def sectionText(*args, **kwargs): ...
    def setCalendarPopup(*args, **kwargs): ...
    def setCalendarWidget(*args, **kwargs): ...
    def setCurrentSection(*args, **kwargs): ...
    def setCurrentSectionIndex(*args, **kwargs): ...
    def setDate(*args, **kwargs): ...
    def setDateRange(*args, **kwargs): ...
    def setDateTime(*args, **kwargs): ...
    def setDateTimeRange(*args, **kwargs): ...
    def setDisplayFormat(*args, **kwargs): ...
    def setMaximumDate(*args, **kwargs): ...
    def setMaximumDateTime(*args, **kwargs): ...
    def setMaximumTime(*args, **kwargs): ...
    def setMinimumDate(*args, **kwargs): ...
    def setMinimumDateTime(*args, **kwargs): ...
    def setMinimumTime(*args, **kwargs): ...
    def setSelectedSection(*args, **kwargs): ...
    def setTime(*args, **kwargs): ...
    def setTimeRange(*args, **kwargs): ...
    def setTimeSpec(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def stepBy(*args, **kwargs): ...
    def stepEnabled(*args, **kwargs): ...
    def textFromDateTime(*args, **kwargs): ...
    def time(*args, **kwargs): ...
    def timeSpec(*args, **kwargs): ...
    def validate(*args, **kwargs): ...
    def wheelEvent(*args, **kwargs): ...
    AmPmSection : Section
    
    DateSections_Mask : Section
    
    DaySection : Section
    
    HourSection : Section
    
    MSecSection : Section
    
    MinuteSection : Section
    
    MonthSection : Section
    
    NoSection : Section
    
    SecondSection : Section
    
    Section : Type[Section]
    
    Sections : Type[Sections]
    
    TimeSections_Mask : Section
    
    YearSection : Section
    
    __new__ : builtin_function_or_method
    
    dateChanged : PySide2.QtCore.Signal
    
    dateTimeChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    timeChanged : PySide2.QtCore.Signal


class QGraphicsRectItem(QAbstractGraphicsShapeItem):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def boundingRect(*args, **kwargs): ...
    def contains(*args, **kwargs): ...
    def extension(*args, **kwargs): ...
    def isObscuredBy(*args, **kwargs): ...
    def opaqueArea(*args, **kwargs): ...
    def paint(*args, **kwargs): ...
    def rect(*args, **kwargs): ...
    def setRect(*args, **kwargs): ...
    def shape(*args, **kwargs): ...
    def type(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QRadioButton(QAbstractButton):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def event(*args, **kwargs): ...
    def hitButton(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QStyleOptionSpinBox(QStyleOptionComplex):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    StyleOptionType : Type[StyleOptionType]
    
    StyleOptionVersion : Type[StyleOptionVersion]
    
    Type : StyleOptionType
    
    Version : StyleOptionVersion
    
    __new__ : builtin_function_or_method
    
    buttonSymbols : getset_descriptor
    
    frame : getset_descriptor
    
    stepEnabled : getset_descriptor


class QGraphicsTextItem(QGraphicsObject):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def adjustSize(*args, **kwargs): ...
    def boundingRect(*args, **kwargs): ...
    def contains(*args, **kwargs): ...
    def contextMenuEvent(*args, **kwargs): ...
    def defaultTextColor(*args, **kwargs): ...
    def document(*args, **kwargs): ...
    def dragEnterEvent(*args, **kwargs): ...
    def dragLeaveEvent(*args, **kwargs): ...
    def dragMoveEvent(*args, **kwargs): ...
    def dropEvent(*args, **kwargs): ...
    def extension(*args, **kwargs): ...
    def focusInEvent(*args, **kwargs): ...
    def focusOutEvent(*args, **kwargs): ...
    def font(*args, **kwargs): ...
    def hoverEnterEvent(*args, **kwargs): ...
    def hoverLeaveEvent(*args, **kwargs): ...
    def hoverMoveEvent(*args, **kwargs): ...
    def inputMethodEvent(*args, **kwargs): ...
    def inputMethodQuery(*args, **kwargs): ...
    def isObscuredBy(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def keyReleaseEvent(*args, **kwargs): ...
    def mouseDoubleClickEvent(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def opaqueArea(*args, **kwargs): ...
    def openExternalLinks(*args, **kwargs): ...
    def paint(*args, **kwargs): ...
    def sceneEvent(*args, **kwargs): ...
    def setDefaultTextColor(*args, **kwargs): ...
    def setDocument(*args, **kwargs): ...
    def setFont(*args, **kwargs): ...
    def setHtml(*args, **kwargs): ...
    def setOpenExternalLinks(*args, **kwargs): ...
    def setPlainText(*args, **kwargs): ...
    def setTabChangesFocus(*args, **kwargs): ...
    def setTextCursor(*args, **kwargs): ...
    def setTextInteractionFlags(*args, **kwargs): ...
    def setTextWidth(*args, **kwargs): ...
    def shape(*args, **kwargs): ...
    def tabChangesFocus(*args, **kwargs): ...
    def textCursor(*args, **kwargs): ...
    def textInteractionFlags(*args, **kwargs): ...
    def textWidth(*args, **kwargs): ...
    def toHtml(*args, **kwargs): ...
    def toPlainText(*args, **kwargs): ...
    def type(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    linkActivated : PySide2.QtCore.Signal
    
    linkHovered : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QGraphicsView(QAbstractScrollArea):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def alignment(*args, **kwargs): ...
    def backgroundBrush(*args, **kwargs): ...
    def cacheMode(*args, **kwargs): ...
    def centerOn(*args, **kwargs): ...
    def contextMenuEvent(*args, **kwargs): ...
    def dragEnterEvent(*args, **kwargs): ...
    def dragLeaveEvent(*args, **kwargs): ...
    def dragMode(*args, **kwargs): ...
    def dragMoveEvent(*args, **kwargs): ...
    def drawBackground(*args, **kwargs): ...
    def drawForeground(*args, **kwargs): ...
    def drawItems(*args, **kwargs): ...
    def dropEvent(*args, **kwargs): ...
    def ensureVisible(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def fitInView(*args, **kwargs): ...
    def focusInEvent(*args, **kwargs): ...
    def focusNextPrevChild(*args, **kwargs): ...
    def focusOutEvent(*args, **kwargs): ...
    def foregroundBrush(*args, **kwargs): ...
    def inputMethodEvent(*args, **kwargs): ...
    def inputMethodQuery(*args, **kwargs): ...
    def invalidateScene(*args, **kwargs): ...
    def isInteractive(*args, **kwargs): ...
    def isTransformed(*args, **kwargs): ...
    def itemAt(*args, **kwargs): ...
    def items(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def keyReleaseEvent(*args, **kwargs): ...
    def mapFromScene(*args, **kwargs): ...
    def mapToScene(*args, **kwargs): ...
    def matrix(*args, **kwargs): ...
    def mouseDoubleClickEvent(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def optimizationFlags(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def render(*args, **kwargs): ...
    def renderHints(*args, **kwargs): ...
    def resetCachedContent(*args, **kwargs): ...
    def resetMatrix(*args, **kwargs): ...
    def resetTransform(*args, **kwargs): ...
    def resizeAnchor(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def rotate(*args, **kwargs): ...
    def rubberBandRect(*args, **kwargs): ...
    def rubberBandSelectionMode(*args, **kwargs): ...
    def scale(*args, **kwargs): ...
    def scene(*args, **kwargs): ...
    def sceneRect(*args, **kwargs): ...
    def scrollContentsBy(*args, **kwargs): ...
    def setAlignment(*args, **kwargs): ...
    def setBackgroundBrush(*args, **kwargs): ...
    def setCacheMode(*args, **kwargs): ...
    def setDragMode(*args, **kwargs): ...
    def setForegroundBrush(*args, **kwargs): ...
    def setInteractive(*args, **kwargs): ...
    def setMatrix(*args, **kwargs): ...
    def setOptimizationFlag(*args, **kwargs): ...
    def setOptimizationFlags(*args, **kwargs): ...
    def setRenderHint(*args, **kwargs): ...
    def setRenderHints(*args, **kwargs): ...
    def setResizeAnchor(*args, **kwargs): ...
    def setRubberBandSelectionMode(*args, **kwargs): ...
    def setScene(*args, **kwargs): ...
    def setSceneRect(*args, **kwargs): ...
    def setTransform(*args, **kwargs): ...
    def setTransformationAnchor(*args, **kwargs): ...
    def setViewportUpdateMode(*args, **kwargs): ...
    def setupViewport(*args, **kwargs): ...
    def shear(*args, **kwargs): ...
    def showEvent(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def transform(*args, **kwargs): ...
    def transformationAnchor(*args, **kwargs): ...
    def translate(*args, **kwargs): ...
    def updateScene(*args, **kwargs): ...
    def updateSceneRect(*args, **kwargs): ...
    def viewportEvent(*args, **kwargs): ...
    def viewportTransform(*args, **kwargs): ...
    def viewportUpdateMode(*args, **kwargs): ...
    def wheelEvent(*args, **kwargs): ...
    AnchorUnderMouse : ViewportAnchor
    
    AnchorViewCenter : ViewportAnchor
    
    BoundingRectViewportUpdate : ViewportUpdateMode
    
    CacheBackground : CacheModeFlag
    
    CacheMode : Type[CacheMode]
    
    CacheModeFlag : Type[CacheModeFlag]
    
    CacheNone : CacheModeFlag
    
    DontAdjustForAntialiasing : OptimizationFlag
    
    DontClipPainter : OptimizationFlag
    
    DontSavePainterState : OptimizationFlag
    
    DragMode : Type[DragMode]
    
    FullViewportUpdate : ViewportUpdateMode
    
    IndirectPainting : OptimizationFlag
    
    MinimalViewportUpdate : ViewportUpdateMode
    
    NoAnchor : ViewportAnchor
    
    NoDrag : DragMode
    
    NoViewportUpdate : ViewportUpdateMode
    
    OptimizationFlag : Type[OptimizationFlag]
    
    OptimizationFlags : Type[OptimizationFlags]
    
    RubberBandDrag : DragMode
    
    ScrollHandDrag : DragMode
    
    SmartViewportUpdate : ViewportUpdateMode
    
    ViewportAnchor : Type[ViewportAnchor]
    
    ViewportUpdateMode : Type[ViewportUpdateMode]
    
    __new__ : builtin_function_or_method
    
    rubberBandChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QTimeEdit(QDateTimeEdit):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    userTimeChanged : PySide2.QtCore.Signal


class QTextEdit(QAbstractScrollArea):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def acceptRichText(*args, **kwargs): ...
    def alignment(*args, **kwargs): ...
    def anchorAt(*args, **kwargs): ...
    def append(*args, **kwargs): ...
    def autoFormatting(*args, **kwargs): ...
    def canInsertFromMimeData(*args, **kwargs): ...
    def canPaste(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def clear(*args, **kwargs): ...
    def contextMenuEvent(*args, **kwargs): ...
    def copy(*args, **kwargs): ...
    def createMimeDataFromSelection(*args, **kwargs): ...
    def createStandardContextMenu(*args, **kwargs): ...
    def currentCharFormat(*args, **kwargs): ...
    def currentFont(*args, **kwargs): ...
    def cursorForPosition(*args, **kwargs): ...
    def cursorRect(*args, **kwargs): ...
    def cursorWidth(*args, **kwargs): ...
    def cut(*args, **kwargs): ...
    def doSetTextCursor(*args, **kwargs): ...
    def document(*args, **kwargs): ...
    def documentTitle(*args, **kwargs): ...
    def dragEnterEvent(*args, **kwargs): ...
    def dragLeaveEvent(*args, **kwargs): ...
    def dragMoveEvent(*args, **kwargs): ...
    def dropEvent(*args, **kwargs): ...
    def ensureCursorVisible(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def extraSelections(*args, **kwargs): ...
    def focusInEvent(*args, **kwargs): ...
    def focusNextPrevChild(*args, **kwargs): ...
    def focusOutEvent(*args, **kwargs): ...
    def fontFamily(*args, **kwargs): ...
    def fontItalic(*args, **kwargs): ...
    def fontPointSize(*args, **kwargs): ...
    def fontUnderline(*args, **kwargs): ...
    def fontWeight(*args, **kwargs): ...
    def inputMethodEvent(*args, **kwargs): ...
    def inputMethodQuery(*args, **kwargs): ...
    def insertFromMimeData(*args, **kwargs): ...
    def insertHtml(*args, **kwargs): ...
    def insertPlainText(*args, **kwargs): ...
    def isReadOnly(*args, **kwargs): ...
    def isUndoRedoEnabled(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def keyReleaseEvent(*args, **kwargs): ...
    def lineWrapColumnOrWidth(*args, **kwargs): ...
    def lineWrapMode(*args, **kwargs): ...
    def loadResource(*args, **kwargs): ...
    def mergeCurrentCharFormat(*args, **kwargs): ...
    def mouseDoubleClickEvent(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def moveCursor(*args, **kwargs): ...
    def overwriteMode(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def paste(*args, **kwargs): ...
    def placeholderText(*args, **kwargs): ...
    def print_(*args, **kwargs): ...
    def redo(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def scrollContentsBy(*args, **kwargs): ...
    def scrollToAnchor(*args, **kwargs): ...
    def selectAll(*args, **kwargs): ...
    def setAcceptRichText(*args, **kwargs): ...
    def setAlignment(*args, **kwargs): ...
    def setAutoFormatting(*args, **kwargs): ...
    def setCurrentCharFormat(*args, **kwargs): ...
    def setCurrentFont(*args, **kwargs): ...
    def setCursorWidth(*args, **kwargs): ...
    def setDocument(*args, **kwargs): ...
    def setDocumentTitle(*args, **kwargs): ...
    def setExtraSelections(*args, **kwargs): ...
    def setFontFamily(*args, **kwargs): ...
    def setFontItalic(*args, **kwargs): ...
    def setFontPointSize(*args, **kwargs): ...
    def setFontUnderline(*args, **kwargs): ...
    def setFontWeight(*args, **kwargs): ...
    def setHtml(*args, **kwargs): ...
    def setLineWrapColumnOrWidth(*args, **kwargs): ...
    def setLineWrapMode(*args, **kwargs): ...
    def setOverwriteMode(*args, **kwargs): ...
    def setPlaceholderText(*args, **kwargs): ...
    def setPlainText(*args, **kwargs): ...
    def setReadOnly(*args, **kwargs): ...
    def setTabChangesFocus(*args, **kwargs): ...
    def setTabStopWidth(*args, **kwargs): ...
    def setText(*args, **kwargs): ...
    def setTextBackgroundColor(*args, **kwargs): ...
    def setTextColor(*args, **kwargs): ...
    def setTextCursor(*args, **kwargs): ...
    def setTextInteractionFlags(*args, **kwargs): ...
    def setUndoRedoEnabled(*args, **kwargs): ...
    def setWordWrapMode(*args, **kwargs): ...
    def showEvent(*args, **kwargs): ...
    def tabChangesFocus(*args, **kwargs): ...
    def tabStopWidth(*args, **kwargs): ...
    def textBackgroundColor(*args, **kwargs): ...
    def textColor(*args, **kwargs): ...
    def textCursor(*args, **kwargs): ...
    def textInteractionFlags(*args, **kwargs): ...
    def timerEvent(*args, **kwargs): ...
    def toHtml(*args, **kwargs): ...
    def toPlainText(*args, **kwargs): ...
    def undo(*args, **kwargs): ...
    def wheelEvent(*args, **kwargs): ...
    def wordWrapMode(*args, **kwargs): ...
    def zoomIn(*args, **kwargs): ...
    def zoomInF(*args, **kwargs): ...
    def zoomOut(*args, **kwargs): ...
    @staticmethod
    def find(*args, **kwargs): ...
    AutoAll : AutoFormattingFlag
    
    AutoBulletList : AutoFormattingFlag
    
    AutoFormatting : Type[AutoFormatting]
    
    AutoFormattingFlag : Type[AutoFormattingFlag]
    
    AutoNone : AutoFormattingFlag
    
    ExtraSelection : Type[ExtraSelection]
    
    FixedColumnWidth : LineWrapMode
    
    FixedPixelWidth : LineWrapMode
    
    LineWrapMode : Type[LineWrapMode]
    
    NoWrap : LineWrapMode
    
    WidgetWidth : LineWrapMode
    
    __new__ : builtin_function_or_method
    
    copyAvailable : PySide2.QtCore.Signal
    
    currentCharFormatChanged : PySide2.QtCore.Signal
    
    cursorPositionChanged : PySide2.QtCore.Signal
    
    redoAvailable : PySide2.QtCore.Signal
    
    selectionChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    textChanged : PySide2.QtCore.Signal
    
    undoAvailable : PySide2.QtCore.Signal


class QMdiArea(QAbstractScrollArea):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def activateNextSubWindow(*args, **kwargs): ...
    def activatePreviousSubWindow(*args, **kwargs): ...
    def activationOrder(*args, **kwargs): ...
    def activeSubWindow(*args, **kwargs): ...
    def addSubWindow(*args, **kwargs): ...
    def background(*args, **kwargs): ...
    def cascadeSubWindows(*args, **kwargs): ...
    def childEvent(*args, **kwargs): ...
    def closeActiveSubWindow(*args, **kwargs): ...
    def closeAllSubWindows(*args, **kwargs): ...
    def currentSubWindow(*args, **kwargs): ...
    def documentMode(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def eventFilter(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def removeSubWindow(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def scrollContentsBy(*args, **kwargs): ...
    def setActivationOrder(*args, **kwargs): ...
    def setActiveSubWindow(*args, **kwargs): ...
    def setBackground(*args, **kwargs): ...
    def setDocumentMode(*args, **kwargs): ...
    def setOption(*args, **kwargs): ...
    def setTabPosition(*args, **kwargs): ...
    def setTabShape(*args, **kwargs): ...
    def setTabsClosable(*args, **kwargs): ...
    def setTabsMovable(*args, **kwargs): ...
    def setViewMode(*args, **kwargs): ...
    def setupViewport(*args, **kwargs): ...
    def showEvent(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def subWindowList(*args, **kwargs): ...
    def tabPosition(*args, **kwargs): ...
    def tabShape(*args, **kwargs): ...
    def tabsClosable(*args, **kwargs): ...
    def tabsMovable(*args, **kwargs): ...
    def testOption(*args, **kwargs): ...
    def tileSubWindows(*args, **kwargs): ...
    def timerEvent(*args, **kwargs): ...
    def viewMode(*args, **kwargs): ...
    def viewportEvent(*args, **kwargs): ...
    ActivationHistoryOrder : WindowOrder
    
    AreaOption : Type[AreaOption]
    
    AreaOptions : Type[AreaOptions]
    
    CreationOrder : WindowOrder
    
    DontMaximizeSubWindowOnActivation : AreaOption
    
    StackingOrder : WindowOrder
    
    SubWindowView : ViewMode
    
    TabbedView : ViewMode
    
    ViewMode : Type[ViewMode]
    
    WindowOrder : Type[WindowOrder]
    
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    subWindowActivated : PySide2.QtCore.Signal


class QAbstractItemView(QAbstractScrollArea):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def alternatingRowColors(*args, **kwargs): ...
    def autoScrollMargin(*args, **kwargs): ...
    def clearSelection(*args, **kwargs): ...
    def closeEditor(*args, **kwargs): ...
    def closePersistentEditor(*args, **kwargs): ...
    def commitData(*args, **kwargs): ...
    def currentChanged(*args, **kwargs): ...
    def currentIndex(*args, **kwargs): ...
    def dataChanged(*args, **kwargs): ...
    def defaultDropAction(*args, **kwargs): ...
    def dirtyRegionOffset(*args, **kwargs): ...
    def doAutoScroll(*args, **kwargs): ...
    def doItemsLayout(*args, **kwargs): ...
    def dragDropMode(*args, **kwargs): ...
    def dragDropOverwriteMode(*args, **kwargs): ...
    def dragEnabled(*args, **kwargs): ...
    def dragEnterEvent(*args, **kwargs): ...
    def dragLeaveEvent(*args, **kwargs): ...
    def dragMoveEvent(*args, **kwargs): ...
    def dropEvent(*args, **kwargs): ...
    def dropIndicatorPosition(*args, **kwargs): ...
    def edit(*args, **kwargs): ...
    def editTriggers(*args, **kwargs): ...
    def editorDestroyed(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def executeDelayedItemsLayout(*args, **kwargs): ...
    def focusInEvent(*args, **kwargs): ...
    def focusNextPrevChild(*args, **kwargs): ...
    def focusOutEvent(*args, **kwargs): ...
    def hasAutoScroll(*args, **kwargs): ...
    def horizontalOffset(*args, **kwargs): ...
    def horizontalScrollMode(*args, **kwargs): ...
    def horizontalScrollbarAction(*args, **kwargs): ...
    def horizontalScrollbarValueChanged(*args, **kwargs): ...
    def horizontalStepsPerItem(*args, **kwargs): ...
    def iconSize(*args, **kwargs): ...
    def indexAt(*args, **kwargs): ...
    def indexWidget(*args, **kwargs): ...
    def inputMethodEvent(*args, **kwargs): ...
    def inputMethodQuery(*args, **kwargs): ...
    def isIndexHidden(*args, **kwargs): ...
    def itemDelegate(*args, **kwargs): ...
    def itemDelegateForColumn(*args, **kwargs): ...
    def itemDelegateForRow(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def keyboardSearch(*args, **kwargs): ...
    def model(*args, **kwargs): ...
    def mouseDoubleClickEvent(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def moveCursor(*args, **kwargs): ...
    def openPersistentEditor(*args, **kwargs): ...
    def reset(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def rootIndex(*args, **kwargs): ...
    def rowsAboutToBeRemoved(*args, **kwargs): ...
    def rowsInserted(*args, **kwargs): ...
    def scheduleDelayedItemsLayout(*args, **kwargs): ...
    def scrollDirtyRegion(*args, **kwargs): ...
    def scrollTo(*args, **kwargs): ...
    def scrollToBottom(*args, **kwargs): ...
    def scrollToTop(*args, **kwargs): ...
    def selectAll(*args, **kwargs): ...
    def selectedIndexes(*args, **kwargs): ...
    def selectionBehavior(*args, **kwargs): ...
    def selectionChanged(*args, **kwargs): ...
    def selectionCommand(*args, **kwargs): ...
    def selectionMode(*args, **kwargs): ...
    def selectionModel(*args, **kwargs): ...
    def setAlternatingRowColors(*args, **kwargs): ...
    def setAutoScroll(*args, **kwargs): ...
    def setAutoScrollMargin(*args, **kwargs): ...
    def setCurrentIndex(*args, **kwargs): ...
    def setDefaultDropAction(*args, **kwargs): ...
    def setDirtyRegion(*args, **kwargs): ...
    def setDragDropMode(*args, **kwargs): ...
    def setDragDropOverwriteMode(*args, **kwargs): ...
    def setDragEnabled(*args, **kwargs): ...
    def setDropIndicatorShown(*args, **kwargs): ...
    def setEditTriggers(*args, **kwargs): ...
    def setHorizontalScrollMode(*args, **kwargs): ...
    def setHorizontalStepsPerItem(*args, **kwargs): ...
    def setIconSize(*args, **kwargs): ...
    def setIndexWidget(*args, **kwargs): ...
    def setItemDelegate(*args, **kwargs): ...
    def setItemDelegateForColumn(*args, **kwargs): ...
    def setItemDelegateForRow(*args, **kwargs): ...
    def setModel(*args, **kwargs): ...
    def setRootIndex(*args, **kwargs): ...
    def setSelection(*args, **kwargs): ...
    def setSelectionBehavior(*args, **kwargs): ...
    def setSelectionMode(*args, **kwargs): ...
    def setSelectionModel(*args, **kwargs): ...
    def setState(*args, **kwargs): ...
    def setTabKeyNavigation(*args, **kwargs): ...
    def setTextElideMode(*args, **kwargs): ...
    def setVerticalScrollMode(*args, **kwargs): ...
    def setVerticalStepsPerItem(*args, **kwargs): ...
    def showDropIndicator(*args, **kwargs): ...
    def sizeHintForColumn(*args, **kwargs): ...
    def sizeHintForIndex(*args, **kwargs): ...
    def sizeHintForRow(*args, **kwargs): ...
    def startAutoScroll(*args, **kwargs): ...
    def startDrag(*args, **kwargs): ...
    def state(*args, **kwargs): ...
    def stopAutoScroll(*args, **kwargs): ...
    def tabKeyNavigation(*args, **kwargs): ...
    def textElideMode(*args, **kwargs): ...
    def timerEvent(*args, **kwargs): ...
    def update(*args, **kwargs): ...
    def updateEditorData(*args, **kwargs): ...
    def updateEditorGeometries(*args, **kwargs): ...
    def updateGeometries(*args, **kwargs): ...
    def verticalOffset(*args, **kwargs): ...
    def verticalScrollMode(*args, **kwargs): ...
    def verticalScrollbarAction(*args, **kwargs): ...
    def verticalScrollbarValueChanged(*args, **kwargs): ...
    def verticalStepsPerItem(*args, **kwargs): ...
    def viewOptions(*args, **kwargs): ...
    def viewportEvent(*args, **kwargs): ...
    def viewportSizeHint(*args, **kwargs): ...
    def visualRect(*args, **kwargs): ...
    def visualRegionForSelection(*args, **kwargs): ...
    AboveItem : DropIndicatorPosition
    
    AllEditTriggers : EditTrigger
    
    AnimatingState : State
    
    AnyKeyPressed : EditTrigger
    
    BelowItem : DropIndicatorPosition
    
    CollapsingState : State
    
    ContiguousSelection : SelectionMode
    
    CurrentChanged : EditTrigger
    
    CursorAction : Type[CursorAction]
    
    DoubleClicked : EditTrigger
    
    DragDrop : DragDropMode
    
    DragDropMode : Type[DragDropMode]
    
    DragOnly : DragDropMode
    
    DragSelectingState : State
    
    DraggingState : State
    
    DropIndicatorPosition : Type[DropIndicatorPosition]
    
    DropOnly : DragDropMode
    
    EditKeyPressed : EditTrigger
    
    EditTrigger : Type[EditTrigger]
    
    EditTriggers : Type[EditTriggers]
    
    EditingState : State
    
    EnsureVisible : ScrollHint
    
    ExpandingState : State
    
    ExtendedSelection : SelectionMode
    
    InternalMove : DragDropMode
    
    MoveDown : CursorAction
    
    MoveEnd : CursorAction
    
    MoveHome : CursorAction
    
    MoveLeft : CursorAction
    
    MoveNext : CursorAction
    
    MovePageDown : CursorAction
    
    MovePageUp : CursorAction
    
    MovePrevious : CursorAction
    
    MoveRight : CursorAction
    
    MoveUp : CursorAction
    
    MultiSelection : SelectionMode
    
    NoDragDrop : DragDropMode
    
    NoEditTriggers : EditTrigger
    
    NoSelection : SelectionMode
    
    NoState : State
    
    OnItem : DropIndicatorPosition
    
    OnViewport : DropIndicatorPosition
    
    PositionAtBottom : ScrollHint
    
    PositionAtCenter : ScrollHint
    
    PositionAtTop : ScrollHint
    
    ScrollHint : Type[ScrollHint]
    
    ScrollMode : Type[ScrollMode]
    
    ScrollPerItem : ScrollMode
    
    ScrollPerPixel : ScrollMode
    
    SelectColumns : SelectionBehavior
    
    SelectItems : SelectionBehavior
    
    SelectRows : SelectionBehavior
    
    SelectedClicked : EditTrigger
    
    SelectionBehavior : Type[SelectionBehavior]
    
    SelectionMode : Type[SelectionMode]
    
    SingleSelection : SelectionMode
    
    State : Type[State]
    
    __new__ : builtin_function_or_method
    
    activated : PySide2.QtCore.Signal
    
    clicked : PySide2.QtCore.Signal
    
    doubleClicked : PySide2.QtCore.Signal
    
    entered : PySide2.QtCore.Signal
    
    iconSizeChanged : PySide2.QtCore.Signal
    
    pressed : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    viewportEntered : PySide2.QtCore.Signal


class QScrollArea(QAbstractScrollArea):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def alignment(*args, **kwargs): ...
    def ensureVisible(*args, **kwargs): ...
    def ensureWidgetVisible(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def eventFilter(*args, **kwargs): ...
    def focusNextPrevChild(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def scrollContentsBy(*args, **kwargs): ...
    def setAlignment(*args, **kwargs): ...
    def setWidget(*args, **kwargs): ...
    def setWidgetResizable(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def takeWidget(*args, **kwargs): ...
    def viewportSizeHint(*args, **kwargs): ...
    def widget(*args, **kwargs): ...
    def widgetResizable(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QDateEdit(QDateTimeEdit):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    userDateChanged : PySide2.QtCore.Signal


class QCommandLinkButton(QPushButton):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def description(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def heightForWidth(*args, **kwargs): ...
    def minimumSizeHint(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def setDescription(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QVBoxLayout(QBoxLayout):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QGraphicsProxyWidget(QGraphicsWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def contextMenuEvent(*args, **kwargs): ...
    def createProxyForChildWidget(*args, **kwargs): ...
    def dragEnterEvent(*args, **kwargs): ...
    def dragLeaveEvent(*args, **kwargs): ...
    def dragMoveEvent(*args, **kwargs): ...
    def dropEvent(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def eventFilter(*args, **kwargs): ...
    def focusInEvent(*args, **kwargs): ...
    def focusNextPrevChild(*args, **kwargs): ...
    def focusOutEvent(*args, **kwargs): ...
    def grabMouseEvent(*args, **kwargs): ...
    def hideEvent(*args, **kwargs): ...
    def hoverEnterEvent(*args, **kwargs): ...
    def hoverLeaveEvent(*args, **kwargs): ...
    def hoverMoveEvent(*args, **kwargs): ...
    def inputMethodEvent(*args, **kwargs): ...
    def inputMethodQuery(*args, **kwargs): ...
    def itemChange(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def keyReleaseEvent(*args, **kwargs): ...
    def mouseDoubleClickEvent(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def newProxyWidget(*args, **kwargs): ...
    def paint(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def setGeometry(*args, **kwargs): ...
    def setWidget(*args, **kwargs): ...
    def showEvent(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def subWidgetRect(*args, **kwargs): ...
    def type(*args, **kwargs): ...
    def ungrabMouseEvent(*args, **kwargs): ...
    def wheelEvent(*args, **kwargs): ...
    def widget(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QPlainTextEdit(QAbstractScrollArea):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def anchorAt(*args, **kwargs): ...
    def appendHtml(*args, **kwargs): ...
    def appendPlainText(*args, **kwargs): ...
    def backgroundVisible(*args, **kwargs): ...
    def blockBoundingGeometry(*args, **kwargs): ...
    def blockBoundingRect(*args, **kwargs): ...
    def blockCount(*args, **kwargs): ...
    def canInsertFromMimeData(*args, **kwargs): ...
    def canPaste(*args, **kwargs): ...
    def centerCursor(*args, **kwargs): ...
    def centerOnScroll(*args, **kwargs): ...
    def changeEvent(*args, **kwargs): ...
    def clear(*args, **kwargs): ...
    def contentOffset(*args, **kwargs): ...
    def contextMenuEvent(*args, **kwargs): ...
    def copy(*args, **kwargs): ...
    def createMimeDataFromSelection(*args, **kwargs): ...
    def createStandardContextMenu(*args, **kwargs): ...
    def currentCharFormat(*args, **kwargs): ...
    def cursorForPosition(*args, **kwargs): ...
    def cursorRect(*args, **kwargs): ...
    def cursorWidth(*args, **kwargs): ...
    def cut(*args, **kwargs): ...
    def doSetTextCursor(*args, **kwargs): ...
    def document(*args, **kwargs): ...
    def documentTitle(*args, **kwargs): ...
    def dragEnterEvent(*args, **kwargs): ...
    def dragLeaveEvent(*args, **kwargs): ...
    def dragMoveEvent(*args, **kwargs): ...
    def dropEvent(*args, **kwargs): ...
    def ensureCursorVisible(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def extraSelections(*args, **kwargs): ...
    def firstVisibleBlock(*args, **kwargs): ...
    def focusInEvent(*args, **kwargs): ...
    def focusNextPrevChild(*args, **kwargs): ...
    def focusOutEvent(*args, **kwargs): ...
    def getPaintContext(*args, **kwargs): ...
    def inputMethodEvent(*args, **kwargs): ...
    def inputMethodQuery(*args, **kwargs): ...
    def insertFromMimeData(*args, **kwargs): ...
    def insertPlainText(*args, **kwargs): ...
    def isReadOnly(*args, **kwargs): ...
    def isUndoRedoEnabled(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def keyReleaseEvent(*args, **kwargs): ...
    def lineWrapMode(*args, **kwargs): ...
    def loadResource(*args, **kwargs): ...
    def maximumBlockCount(*args, **kwargs): ...
    def mergeCurrentCharFormat(*args, **kwargs): ...
    def mouseDoubleClickEvent(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def moveCursor(*args, **kwargs): ...
    def overwriteMode(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def paste(*args, **kwargs): ...
    def placeholderText(*args, **kwargs): ...
    def print_(*args, **kwargs): ...
    def redo(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def scrollContentsBy(*args, **kwargs): ...
    def selectAll(*args, **kwargs): ...
    def setBackgroundVisible(*args, **kwargs): ...
    def setCenterOnScroll(*args, **kwargs): ...
    def setCurrentCharFormat(*args, **kwargs): ...
    def setCursorWidth(*args, **kwargs): ...
    def setDocument(*args, **kwargs): ...
    def setDocumentTitle(*args, **kwargs): ...
    def setExtraSelections(*args, **kwargs): ...
    def setLineWrapMode(*args, **kwargs): ...
    def setMaximumBlockCount(*args, **kwargs): ...
    def setOverwriteMode(*args, **kwargs): ...
    def setPlaceholderText(*args, **kwargs): ...
    def setPlainText(*args, **kwargs): ...
    def setReadOnly(*args, **kwargs): ...
    def setTabChangesFocus(*args, **kwargs): ...
    def setTabStopWidth(*args, **kwargs): ...
    def setTextCursor(*args, **kwargs): ...
    def setTextInteractionFlags(*args, **kwargs): ...
    def setUndoRedoEnabled(*args, **kwargs): ...
    def setWordWrapMode(*args, **kwargs): ...
    def showEvent(*args, **kwargs): ...
    def tabChangesFocus(*args, **kwargs): ...
    def tabStopWidth(*args, **kwargs): ...
    def textCursor(*args, **kwargs): ...
    def textInteractionFlags(*args, **kwargs): ...
    def timerEvent(*args, **kwargs): ...
    def toPlainText(*args, **kwargs): ...
    def undo(*args, **kwargs): ...
    def wheelEvent(*args, **kwargs): ...
    def wordWrapMode(*args, **kwargs): ...
    def zoomIn(*args, **kwargs): ...
    def zoomInF(*args, **kwargs): ...
    def zoomOut(*args, **kwargs): ...
    @staticmethod
    def find(*args, **kwargs): ...
    LineWrapMode : Type[LineWrapMode]
    
    NoWrap : LineWrapMode
    
    WidgetWidth : LineWrapMode
    
    __new__ : builtin_function_or_method
    
    blockCountChanged : PySide2.QtCore.Signal
    
    copyAvailable : PySide2.QtCore.Signal
    
    cursorPositionChanged : PySide2.QtCore.Signal
    
    modificationChanged : PySide2.QtCore.Signal
    
    redoAvailable : PySide2.QtCore.Signal
    
    selectionChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    textChanged : PySide2.QtCore.Signal
    
    undoAvailable : PySide2.QtCore.Signal
    
    updateRequest : PySide2.QtCore.Signal


class QHBoxLayout(QBoxLayout):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QTextBrowser(QTextEdit):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def backward(*args, **kwargs): ...
    def backwardHistoryCount(*args, **kwargs): ...
    def clearHistory(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def focusNextPrevChild(*args, **kwargs): ...
    def focusOutEvent(*args, **kwargs): ...
    def forward(*args, **kwargs): ...
    def forwardHistoryCount(*args, **kwargs): ...
    def historyTitle(*args, **kwargs): ...
    def historyUrl(*args, **kwargs): ...
    def home(*args, **kwargs): ...
    def isBackwardAvailable(*args, **kwargs): ...
    def isForwardAvailable(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def loadResource(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def openExternalLinks(*args, **kwargs): ...
    def openLinks(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def reload(*args, **kwargs): ...
    def searchPaths(*args, **kwargs): ...
    def setOpenExternalLinks(*args, **kwargs): ...
    def setOpenLinks(*args, **kwargs): ...
    def setSearchPaths(*args, **kwargs): ...
    def setSource(*args, **kwargs): ...
    def source(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    anchorClicked : PySide2.QtCore.Signal
    
    backwardAvailable : PySide2.QtCore.Signal
    
    forwardAvailable : PySide2.QtCore.Signal
    
    highlighted : PySide2.QtCore.Signal
    
    historyChanged : PySide2.QtCore.Signal
    
    sourceChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QHeaderView(QAbstractItemView):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def cascadingSectionResizes(*args, **kwargs): ...
    def count(*args, **kwargs): ...
    def currentChanged(*args, **kwargs): ...
    def dataChanged(*args, **kwargs): ...
    def defaultAlignment(*args, **kwargs): ...
    def defaultSectionSize(*args, **kwargs): ...
    def doItemsLayout(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def headerDataChanged(*args, **kwargs): ...
    def hiddenSectionCount(*args, **kwargs): ...
    def hideSection(*args, **kwargs): ...
    def highlightSections(*args, **kwargs): ...
    def horizontalOffset(*args, **kwargs): ...
    def indexAt(*args, **kwargs): ...
    def initStyleOption(*args, **kwargs): ...
    def initialize(*args, **kwargs): ...
    def initializeSections(*args, **kwargs): ...
    def isIndexHidden(*args, **kwargs): ...
    def isSectionHidden(*args, **kwargs): ...
    def isSortIndicatorShown(*args, **kwargs): ...
    def length(*args, **kwargs): ...
    def logicalIndex(*args, **kwargs): ...
    def logicalIndexAt(*args, **kwargs): ...
    def maximumSectionSize(*args, **kwargs): ...
    def minimumSectionSize(*args, **kwargs): ...
    def mouseDoubleClickEvent(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def moveCursor(*args, **kwargs): ...
    def moveSection(*args, **kwargs): ...
    def offset(*args, **kwargs): ...
    def orientation(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def paintSection(*args, **kwargs): ...
    def reset(*args, **kwargs): ...
    def resetDefaultSectionSize(*args, **kwargs): ...
    def resizeContentsPrecision(*args, **kwargs): ...
    def resizeSection(*args, **kwargs): ...
    def resizeSections(*args, **kwargs): ...
    def restoreState(*args, **kwargs): ...
    def rowsInserted(*args, **kwargs): ...
    def saveState(*args, **kwargs): ...
    def scrollContentsBy(*args, **kwargs): ...
    def scrollTo(*args, **kwargs): ...
    def sectionPosition(*args, **kwargs): ...
    def sectionResizeMode(*args, **kwargs): ...
    def sectionSize(*args, **kwargs): ...
    def sectionSizeFromContents(*args, **kwargs): ...
    def sectionSizeHint(*args, **kwargs): ...
    def sectionViewportPosition(*args, **kwargs): ...
    def sectionsAboutToBeRemoved(*args, **kwargs): ...
    def sectionsClickable(*args, **kwargs): ...
    def sectionsHidden(*args, **kwargs): ...
    def sectionsInserted(*args, **kwargs): ...
    def sectionsMovable(*args, **kwargs): ...
    def sectionsMoved(*args, **kwargs): ...
    def setCascadingSectionResizes(*args, **kwargs): ...
    def setDefaultAlignment(*args, **kwargs): ...
    def setDefaultSectionSize(*args, **kwargs): ...
    def setHighlightSections(*args, **kwargs): ...
    def setMaximumSectionSize(*args, **kwargs): ...
    def setMinimumSectionSize(*args, **kwargs): ...
    def setModel(*args, **kwargs): ...
    def setOffset(*args, **kwargs): ...
    def setOffsetToLastSection(*args, **kwargs): ...
    def setOffsetToSectionPosition(*args, **kwargs): ...
    def setResizeContentsPrecision(*args, **kwargs): ...
    def setSectionHidden(*args, **kwargs): ...
    def setSectionResizeMode(*args, **kwargs): ...
    def setSectionsClickable(*args, **kwargs): ...
    def setSectionsMovable(*args, **kwargs): ...
    def setSelection(*args, **kwargs): ...
    def setSortIndicator(*args, **kwargs): ...
    def setSortIndicatorShown(*args, **kwargs): ...
    def setStretchLastSection(*args, **kwargs): ...
    def setVisible(*args, **kwargs): ...
    def showSection(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def sortIndicatorOrder(*args, **kwargs): ...
    def sortIndicatorSection(*args, **kwargs): ...
    def stretchLastSection(*args, **kwargs): ...
    def stretchSectionCount(*args, **kwargs): ...
    def swapSections(*args, **kwargs): ...
    def updateGeometries(*args, **kwargs): ...
    def updateSection(*args, **kwargs): ...
    def verticalOffset(*args, **kwargs): ...
    def viewportEvent(*args, **kwargs): ...
    def visualIndex(*args, **kwargs): ...
    def visualIndexAt(*args, **kwargs): ...
    def visualRect(*args, **kwargs): ...
    def visualRegionForSelection(*args, **kwargs): ...
    Custom : ResizeMode
    
    Fixed : ResizeMode
    
    Interactive : ResizeMode
    
    ResizeMode : Type[ResizeMode]
    
    ResizeToContents : ResizeMode
    
    Stretch : ResizeMode
    
    __new__ : builtin_function_or_method
    
    geometriesChanged : PySide2.QtCore.Signal
    
    sectionClicked : PySide2.QtCore.Signal
    
    sectionCountChanged : PySide2.QtCore.Signal
    
    sectionDoubleClicked : PySide2.QtCore.Signal
    
    sectionEntered : PySide2.QtCore.Signal
    
    sectionHandleDoubleClicked : PySide2.QtCore.Signal
    
    sectionMoved : PySide2.QtCore.Signal
    
    sectionPressed : PySide2.QtCore.Signal
    
    sectionResized : PySide2.QtCore.Signal
    
    sortIndicatorChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QTreeView(QAbstractItemView):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def allColumnsShowFocus(*args, **kwargs): ...
    def autoExpandDelay(*args, **kwargs): ...
    def collapse(*args, **kwargs): ...
    def collapseAll(*args, **kwargs): ...
    def columnAt(*args, **kwargs): ...
    def columnCountChanged(*args, **kwargs): ...
    def columnMoved(*args, **kwargs): ...
    def columnResized(*args, **kwargs): ...
    def columnViewportPosition(*args, **kwargs): ...
    def columnWidth(*args, **kwargs): ...
    def currentChanged(*args, **kwargs): ...
    def dataChanged(*args, **kwargs): ...
    def doItemsLayout(*args, **kwargs): ...
    def dragMoveEvent(*args, **kwargs): ...
    def drawBranches(*args, **kwargs): ...
    def drawRow(*args, **kwargs): ...
    def drawTree(*args, **kwargs): ...
    def expand(*args, **kwargs): ...
    def expandAll(*args, **kwargs): ...
    def expandToDepth(*args, **kwargs): ...
    def expandsOnDoubleClick(*args, **kwargs): ...
    def header(*args, **kwargs): ...
    def hideColumn(*args, **kwargs): ...
    def horizontalOffset(*args, **kwargs): ...
    def horizontalScrollbarAction(*args, **kwargs): ...
    def indentation(*args, **kwargs): ...
    def indexAbove(*args, **kwargs): ...
    def indexAt(*args, **kwargs): ...
    def indexBelow(*args, **kwargs): ...
    def indexRowSizeHint(*args, **kwargs): ...
    def isAnimated(*args, **kwargs): ...
    def isColumnHidden(*args, **kwargs): ...
    def isExpanded(*args, **kwargs): ...
    def isFirstColumnSpanned(*args, **kwargs): ...
    def isHeaderHidden(*args, **kwargs): ...
    def isIndexHidden(*args, **kwargs): ...
    def isRowHidden(*args, **kwargs): ...
    def isSortingEnabled(*args, **kwargs): ...
    def itemsExpandable(*args, **kwargs): ...
    def keyPressEvent(*args, **kwargs): ...
    def keyboardSearch(*args, **kwargs): ...
    def mouseDoubleClickEvent(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mousePressEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def moveCursor(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def reexpand(*args, **kwargs): ...
    def reset(*args, **kwargs): ...
    def resetIndentation(*args, **kwargs): ...
    def resizeColumnToContents(*args, **kwargs): ...
    def rootIsDecorated(*args, **kwargs): ...
    def rowHeight(*args, **kwargs): ...
    def rowsAboutToBeRemoved(*args, **kwargs): ...
    def rowsInserted(*args, **kwargs): ...
    def rowsRemoved(*args, **kwargs): ...
    def scrollContentsBy(*args, **kwargs): ...
    def scrollTo(*args, **kwargs): ...
    def selectAll(*args, **kwargs): ...
    def selectedIndexes(*args, **kwargs): ...
    def selectionChanged(*args, **kwargs): ...
    def setAllColumnsShowFocus(*args, **kwargs): ...
    def setAnimated(*args, **kwargs): ...
    def setAutoExpandDelay(*args, **kwargs): ...
    def setColumnHidden(*args, **kwargs): ...
    def setColumnWidth(*args, **kwargs): ...
    def setExpanded(*args, **kwargs): ...
    def setExpandsOnDoubleClick(*args, **kwargs): ...
    def setFirstColumnSpanned(*args, **kwargs): ...
    def setHeader(*args, **kwargs): ...
    def setHeaderHidden(*args, **kwargs): ...
    def setIndentation(*args, **kwargs): ...
    def setItemsExpandable(*args, **kwargs): ...
    def setModel(*args, **kwargs): ...
    def setRootIndex(*args, **kwargs): ...
    def setRootIsDecorated(*args, **kwargs): ...
    def setRowHidden(*args, **kwargs): ...
    def setSelection(*args, **kwargs): ...
    def setSelectionModel(*args, **kwargs): ...
    def setSortingEnabled(*args, **kwargs): ...
    def setTreePosition(*args, **kwargs): ...
    def setUniformRowHeights(*args, **kwargs): ...
    def setWordWrap(*args, **kwargs): ...
    def showColumn(*args, **kwargs): ...
    def sizeHintForColumn(*args, **kwargs): ...
    def sortByColumn(*args, **kwargs): ...
    def timerEvent(*args, **kwargs): ...
    def treePosition(*args, **kwargs): ...
    def uniformRowHeights(*args, **kwargs): ...
    def updateGeometries(*args, **kwargs): ...
    def verticalOffset(*args, **kwargs): ...
    def viewportEvent(*args, **kwargs): ...
    def viewportSizeHint(*args, **kwargs): ...
    def visualRect(*args, **kwargs): ...
    def visualRegionForSelection(*args, **kwargs): ...
    def wordWrap(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    collapsed : PySide2.QtCore.Signal
    
    expanded : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QListView(QAbstractItemView):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def batchSize(*args, **kwargs): ...
    def clearPropertyFlags(*args, **kwargs): ...
    def contentsSize(*args, **kwargs): ...
    def currentChanged(*args, **kwargs): ...
    def dataChanged(*args, **kwargs): ...
    def doItemsLayout(*args, **kwargs): ...
    def dragLeaveEvent(*args, **kwargs): ...
    def dragMoveEvent(*args, **kwargs): ...
    def dropEvent(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def flow(*args, **kwargs): ...
    def gridSize(*args, **kwargs): ...
    def horizontalOffset(*args, **kwargs): ...
    def indexAt(*args, **kwargs): ...
    def isIndexHidden(*args, **kwargs): ...
    def isRowHidden(*args, **kwargs): ...
    def isSelectionRectVisible(*args, **kwargs): ...
    def isWrapping(*args, **kwargs): ...
    def layoutMode(*args, **kwargs): ...
    def modelColumn(*args, **kwargs): ...
    def mouseMoveEvent(*args, **kwargs): ...
    def mouseReleaseEvent(*args, **kwargs): ...
    def moveCursor(*args, **kwargs): ...
    def movement(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def rectForIndex(*args, **kwargs): ...
    def reset(*args, **kwargs): ...
    def resizeContents(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def resizeMode(*args, **kwargs): ...
    def rowsAboutToBeRemoved(*args, **kwargs): ...
    def rowsInserted(*args, **kwargs): ...
    def scrollContentsBy(*args, **kwargs): ...
    def scrollTo(*args, **kwargs): ...
    def selectedIndexes(*args, **kwargs): ...
    def selectionChanged(*args, **kwargs): ...
    def setBatchSize(*args, **kwargs): ...
    def setFlow(*args, **kwargs): ...
    def setGridSize(*args, **kwargs): ...
    def setLayoutMode(*args, **kwargs): ...
    def setModelColumn(*args, **kwargs): ...
    def setMovement(*args, **kwargs): ...
    def setPositionForIndex(*args, **kwargs): ...
    def setResizeMode(*args, **kwargs): ...
    def setRootIndex(*args, **kwargs): ...
    def setRowHidden(*args, **kwargs): ...
    def setSelection(*args, **kwargs): ...
    def setSelectionRectVisible(*args, **kwargs): ...
    def setSpacing(*args, **kwargs): ...
    def setUniformItemSizes(*args, **kwargs): ...
    def setViewMode(*args, **kwargs): ...
    def setWordWrap(*args, **kwargs): ...
    def setWrapping(*args, **kwargs): ...
    def spacing(*args, **kwargs): ...
    def startDrag(*args, **kwargs): ...
    def timerEvent(*args, **kwargs): ...
    def uniformItemSizes(*args, **kwargs): ...
    def updateGeometries(*args, **kwargs): ...
    def verticalOffset(*args, **kwargs): ...
    def viewMode(*args, **kwargs): ...
    def viewOptions(*args, **kwargs): ...
    def viewportSizeHint(*args, **kwargs): ...
    def visualRect(*args, **kwargs): ...
    def visualRegionForSelection(*args, **kwargs): ...
    def wheelEvent(*args, **kwargs): ...
    def wordWrap(*args, **kwargs): ...
    Adjust : ResizeMode
    
    Batched : LayoutMode
    
    Fixed : ResizeMode
    
    Flow : Type[Flow]
    
    Free : Movement
    
    IconMode : ViewMode
    
    LayoutMode : Type[LayoutMode]
    
    LeftToRight : Flow
    
    ListMode : ViewMode
    
    Movement : Type[Movement]
    
    ResizeMode : Type[ResizeMode]
    
    SinglePass : LayoutMode
    
    Snap : Movement
    
    Static : Movement
    
    TopToBottom : Flow
    
    ViewMode : Type[ViewMode]
    
    __new__ : builtin_function_or_method
    
    indexesMoved : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QColumnView(QAbstractItemView):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def columnWidths(*args, **kwargs): ...
    def createColumn(*args, **kwargs): ...
    def currentChanged(*args, **kwargs): ...
    def horizontalOffset(*args, **kwargs): ...
    def indexAt(*args, **kwargs): ...
    def initializeColumn(*args, **kwargs): ...
    def isIndexHidden(*args, **kwargs): ...
    def moveCursor(*args, **kwargs): ...
    def previewWidget(*args, **kwargs): ...
    def resizeEvent(*args, **kwargs): ...
    def resizeGripsVisible(*args, **kwargs): ...
    def rowsInserted(*args, **kwargs): ...
    def scrollContentsBy(*args, **kwargs): ...
    def scrollTo(*args, **kwargs): ...
    def selectAll(*args, **kwargs): ...
    def setColumnWidths(*args, **kwargs): ...
    def setModel(*args, **kwargs): ...
    def setPreviewWidget(*args, **kwargs): ...
    def setResizeGripsVisible(*args, **kwargs): ...
    def setRootIndex(*args, **kwargs): ...
    def setSelection(*args, **kwargs): ...
    def setSelectionModel(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    def verticalOffset(*args, **kwargs): ...
    def visualRect(*args, **kwargs): ...
    def visualRegionForSelection(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject
    
    updatePreviewWidget : PySide2.QtCore.Signal


class QTableView(QAbstractItemView):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def clearSpans(*args, **kwargs): ...
    def columnAt(*args, **kwargs): ...
    def columnCountChanged(*args, **kwargs): ...
    def columnMoved(*args, **kwargs): ...
    def columnResized(*args, **kwargs): ...
    def columnSpan(*args, **kwargs): ...
    def columnViewportPosition(*args, **kwargs): ...
    def columnWidth(*args, **kwargs): ...
    def currentChanged(*args, **kwargs): ...
    def doItemsLayout(*args, **kwargs): ...
    def gridStyle(*args, **kwargs): ...
    def hideColumn(*args, **kwargs): ...
    def hideRow(*args, **kwargs): ...
    def horizontalHeader(*args, **kwargs): ...
    def horizontalOffset(*args, **kwargs): ...
    def horizontalScrollbarAction(*args, **kwargs): ...
    def indexAt(*args, **kwargs): ...
    def isColumnHidden(*args, **kwargs): ...
    def isCornerButtonEnabled(*args, **kwargs): ...
    def isIndexHidden(*args, **kwargs): ...
    def isRowHidden(*args, **kwargs): ...
    def isSortingEnabled(*args, **kwargs): ...
    def moveCursor(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def resizeColumnToContents(*args, **kwargs): ...
    def resizeColumnsToContents(*args, **kwargs): ...
    def resizeRowToContents(*args, **kwargs): ...
    def resizeRowsToContents(*args, **kwargs): ...
    def rowAt(*args, **kwargs): ...
    def rowCountChanged(*args, **kwargs): ...
    def rowHeight(*args, **kwargs): ...
    def rowMoved(*args, **kwargs): ...
    def rowResized(*args, **kwargs): ...
    def rowSpan(*args, **kwargs): ...
    def rowViewportPosition(*args, **kwargs): ...
    def scrollContentsBy(*args, **kwargs): ...
    def scrollTo(*args, **kwargs): ...
    def selectColumn(*args, **kwargs): ...
    def selectRow(*args, **kwargs): ...
    def selectedIndexes(*args, **kwargs): ...
    def selectionChanged(*args, **kwargs): ...
    def setColumnHidden(*args, **kwargs): ...
    def setColumnWidth(*args, **kwargs): ...
    def setCornerButtonEnabled(*args, **kwargs): ...
    def setGridStyle(*args, **kwargs): ...
    def setHorizontalHeader(*args, **kwargs): ...
    def setModel(*args, **kwargs): ...
    def setRootIndex(*args, **kwargs): ...
    def setRowHeight(*args, **kwargs): ...
    def setRowHidden(*args, **kwargs): ...
    def setSelection(*args, **kwargs): ...
    def setSelectionModel(*args, **kwargs): ...
    def setShowGrid(*args, **kwargs): ...
    def setSortingEnabled(*args, **kwargs): ...
    def setSpan(*args, **kwargs): ...
    def setVerticalHeader(*args, **kwargs): ...
    def setWordWrap(*args, **kwargs): ...
    def showColumn(*args, **kwargs): ...
    def showGrid(*args, **kwargs): ...
    def showRow(*args, **kwargs): ...
    def sizeHintForColumn(*args, **kwargs): ...
    def sizeHintForRow(*args, **kwargs): ...
    def sortByColumn(*args, **kwargs): ...
    def timerEvent(*args, **kwargs): ...
    def updateGeometries(*args, **kwargs): ...
    def verticalHeader(*args, **kwargs): ...
    def verticalOffset(*args, **kwargs): ...
    def verticalScrollbarAction(*args, **kwargs): ...
    def viewOptions(*args, **kwargs): ...
    def viewportSizeHint(*args, **kwargs): ...
    def visualRect(*args, **kwargs): ...
    def visualRegionForSelection(*args, **kwargs): ...
    def wordWrap(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QUndoView(QListView):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def cleanIcon(*args, **kwargs): ...
    def emptyLabel(*args, **kwargs): ...
    def group(*args, **kwargs): ...
    def setCleanIcon(*args, **kwargs): ...
    def setEmptyLabel(*args, **kwargs): ...
    def setGroup(*args, **kwargs): ...
    def setStack(*args, **kwargs): ...
    def stack(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QTableWidget(QTableView):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def cellWidget(*args, **kwargs): ...
    def clear(*args, **kwargs): ...
    def clearContents(*args, **kwargs): ...
    def closePersistentEditor(*args, **kwargs): ...
    def column(*args, **kwargs): ...
    def columnCount(*args, **kwargs): ...
    def currentColumn(*args, **kwargs): ...
    def currentItem(*args, **kwargs): ...
    def currentRow(*args, **kwargs): ...
    def dropEvent(*args, **kwargs): ...
    def dropMimeData(*args, **kwargs): ...
    def editItem(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def findItems(*args, **kwargs): ...
    def horizontalHeaderItem(*args, **kwargs): ...
    def indexFromItem(*args, **kwargs): ...
    def insertColumn(*args, **kwargs): ...
    def insertRow(*args, **kwargs): ...
    def isItemSelected(*args, **kwargs): ...
    def isSortingEnabled(*args, **kwargs): ...
    def item(*args, **kwargs): ...
    def itemAt(*args, **kwargs): ...
    def itemFromIndex(*args, **kwargs): ...
    def itemPrototype(*args, **kwargs): ...
    def items(*args, **kwargs): ...
    def mimeData(*args, **kwargs): ...
    def mimeTypes(*args, **kwargs): ...
    def openPersistentEditor(*args, **kwargs): ...
    def removeCellWidget(*args, **kwargs): ...
    def removeColumn(*args, **kwargs): ...
    def removeRow(*args, **kwargs): ...
    def row(*args, **kwargs): ...
    def rowCount(*args, **kwargs): ...
    def scrollToItem(*args, **kwargs): ...
    def selectedItems(*args, **kwargs): ...
    def selectedRanges(*args, **kwargs): ...
    def setCellWidget(*args, **kwargs): ...
    def setColumnCount(*args, **kwargs): ...
    def setCurrentCell(*args, **kwargs): ...
    def setCurrentItem(*args, **kwargs): ...
    def setHorizontalHeaderItem(*args, **kwargs): ...
    def setHorizontalHeaderLabels(*args, **kwargs): ...
    def setItem(*args, **kwargs): ...
    def setItemPrototype(*args, **kwargs): ...
    def setItemSelected(*args, **kwargs): ...
    def setModel(*args, **kwargs): ...
    def setRangeSelected(*args, **kwargs): ...
    def setRowCount(*args, **kwargs): ...
    def setSortingEnabled(*args, **kwargs): ...
    def setVerticalHeaderItem(*args, **kwargs): ...
    def setVerticalHeaderLabels(*args, **kwargs): ...
    def sortItems(*args, **kwargs): ...
    def supportedDropActions(*args, **kwargs): ...
    def takeHorizontalHeaderItem(*args, **kwargs): ...
    def takeItem(*args, **kwargs): ...
    def takeVerticalHeaderItem(*args, **kwargs): ...
    def verticalHeaderItem(*args, **kwargs): ...
    def visualColumn(*args, **kwargs): ...
    def visualItemRect(*args, **kwargs): ...
    def visualRow(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    cellActivated : PySide2.QtCore.Signal
    
    cellChanged : PySide2.QtCore.Signal
    
    cellClicked : PySide2.QtCore.Signal
    
    cellDoubleClicked : PySide2.QtCore.Signal
    
    cellEntered : PySide2.QtCore.Signal
    
    cellPressed : PySide2.QtCore.Signal
    
    currentCellChanged : PySide2.QtCore.Signal
    
    currentItemChanged : PySide2.QtCore.Signal
    
    itemActivated : PySide2.QtCore.Signal
    
    itemChanged : PySide2.QtCore.Signal
    
    itemClicked : PySide2.QtCore.Signal
    
    itemDoubleClicked : PySide2.QtCore.Signal
    
    itemEntered : PySide2.QtCore.Signal
    
    itemPressed : PySide2.QtCore.Signal
    
    itemSelectionChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QTreeWidget(QTreeView):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addTopLevelItem(*args, **kwargs): ...
    def addTopLevelItems(*args, **kwargs): ...
    def clear(*args, **kwargs): ...
    def closePersistentEditor(*args, **kwargs): ...
    def collapseItem(*args, **kwargs): ...
    def columnCount(*args, **kwargs): ...
    def currentColumn(*args, **kwargs): ...
    def currentItem(*args, **kwargs): ...
    def dropEvent(*args, **kwargs): ...
    def dropMimeData(*args, **kwargs): ...
    def editItem(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def expandItem(*args, **kwargs): ...
    def findItems(*args, **kwargs): ...
    def headerItem(*args, **kwargs): ...
    def indexFromItem(*args, **kwargs): ...
    def indexOfTopLevelItem(*args, **kwargs): ...
    def insertTopLevelItem(*args, **kwargs): ...
    def insertTopLevelItems(*args, **kwargs): ...
    def invisibleRootItem(*args, **kwargs): ...
    def isFirstItemColumnSpanned(*args, **kwargs): ...
    def isItemExpanded(*args, **kwargs): ...
    def isItemHidden(*args, **kwargs): ...
    def isItemSelected(*args, **kwargs): ...
    def itemAbove(*args, **kwargs): ...
    def itemAt(*args, **kwargs): ...
    def itemBelow(*args, **kwargs): ...
    def itemFromIndex(*args, **kwargs): ...
    def itemWidget(*args, **kwargs): ...
    def items(*args, **kwargs): ...
    def mimeData(*args, **kwargs): ...
    def mimeTypes(*args, **kwargs): ...
    def openPersistentEditor(*args, **kwargs): ...
    def removeItemWidget(*args, **kwargs): ...
    def scrollToItem(*args, **kwargs): ...
    def selectedItems(*args, **kwargs): ...
    def setColumnCount(*args, **kwargs): ...
    def setCurrentItem(*args, **kwargs): ...
    def setFirstItemColumnSpanned(*args, **kwargs): ...
    def setHeaderItem(*args, **kwargs): ...
    def setHeaderLabel(*args, **kwargs): ...
    def setHeaderLabels(*args, **kwargs): ...
    def setItemExpanded(*args, **kwargs): ...
    def setItemHidden(*args, **kwargs): ...
    def setItemSelected(*args, **kwargs): ...
    def setItemWidget(*args, **kwargs): ...
    def setModel(*args, **kwargs): ...
    def setSelectionModel(*args, **kwargs): ...
    def sortColumn(*args, **kwargs): ...
    def sortItems(*args, **kwargs): ...
    def supportedDropActions(*args, **kwargs): ...
    def takeTopLevelItem(*args, **kwargs): ...
    def topLevelItem(*args, **kwargs): ...
    def topLevelItemCount(*args, **kwargs): ...
    def visualItemRect(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    currentItemChanged : PySide2.QtCore.Signal
    
    itemActivated : PySide2.QtCore.Signal
    
    itemChanged : PySide2.QtCore.Signal
    
    itemClicked : PySide2.QtCore.Signal
    
    itemCollapsed : PySide2.QtCore.Signal
    
    itemDoubleClicked : PySide2.QtCore.Signal
    
    itemEntered : PySide2.QtCore.Signal
    
    itemExpanded : PySide2.QtCore.Signal
    
    itemPressed : PySide2.QtCore.Signal
    
    itemSelectionChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QListWidget(QListView):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def addItem(*args, **kwargs): ...
    def addItems(*args, **kwargs): ...
    def clear(*args, **kwargs): ...
    def closePersistentEditor(*args, **kwargs): ...
    def count(*args, **kwargs): ...
    def currentItem(*args, **kwargs): ...
    def currentRow(*args, **kwargs): ...
    def dropEvent(*args, **kwargs): ...
    def dropMimeData(*args, **kwargs): ...
    def editItem(*args, **kwargs): ...
    def event(*args, **kwargs): ...
    def findItems(*args, **kwargs): ...
    def indexFromItem(*args, **kwargs): ...
    def insertItem(*args, **kwargs): ...
    def insertItems(*args, **kwargs): ...
    def isItemHidden(*args, **kwargs): ...
    def isItemSelected(*args, **kwargs): ...
    def isSortingEnabled(*args, **kwargs): ...
    def item(*args, **kwargs): ...
    def itemAt(*args, **kwargs): ...
    def itemFromIndex(*args, **kwargs): ...
    def itemWidget(*args, **kwargs): ...
    def items(*args, **kwargs): ...
    def mimeData(*args, **kwargs): ...
    def mimeTypes(*args, **kwargs): ...
    def openPersistentEditor(*args, **kwargs): ...
    def removeItemWidget(*args, **kwargs): ...
    def row(*args, **kwargs): ...
    def scrollToItem(*args, **kwargs): ...
    def selectedItems(*args, **kwargs): ...
    def setCurrentItem(*args, **kwargs): ...
    def setCurrentRow(*args, **kwargs): ...
    def setItemHidden(*args, **kwargs): ...
    def setItemSelected(*args, **kwargs): ...
    def setItemWidget(*args, **kwargs): ...
    def setModel(*args, **kwargs): ...
    def setSortingEnabled(*args, **kwargs): ...
    def sortItems(*args, **kwargs): ...
    def supportedDropActions(*args, **kwargs): ...
    def takeItem(*args, **kwargs): ...
    def visualItemRect(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    currentItemChanged : PySide2.QtCore.Signal
    
    currentRowChanged : PySide2.QtCore.Signal
    
    currentTextChanged : PySide2.QtCore.Signal
    
    itemActivated : PySide2.QtCore.Signal
    
    itemChanged : PySide2.QtCore.Signal
    
    itemClicked : PySide2.QtCore.Signal
    
    itemDoubleClicked : PySide2.QtCore.Signal
    
    itemEntered : PySide2.QtCore.Signal
    
    itemPressed : PySide2.QtCore.Signal
    
    itemSelectionChanged : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject




qApp : QApplication

