from typing import Any, Container, Dict, Generic, Iterable, Iterator, List, Optional, Set, Tuple, TypeVar, Union
import weakref
from . import OpenMaya
from . import _OpenMayaRender


from __builtin__ import object as _object
from __builtin__ import property as _swig_property


if False:
    from typing import Dict, List, Tuple, Union, Optional

class RV_PIXEL(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @property
    def a(self): ...
    @a.setter
    def a(self, value): ...
    @property
    def b(self): ...
    @b.setter
    def b(self, value): ...
    @property
    def g(self): ...
    @g.setter
    def g(self, value): ...
    @property
    def r(self): ...
    @r.setter
    def r(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class RV_AOV(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @property
    def name(self): ...
    @name.setter
    def name(self, value): ...
    @property
    def numberOfChannels(self): ...
    @numberOfChannels.setter
    def numberOfChannels(self, value): ...
    @property
    def pPixels(self): ...
    @pPixels.setter
    def pPixels(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MLightLinks(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def getIgnoredLights(self, *args): ...
    def getIgnoredObjects(self, *args): ...
    def getLinkedLights(self, *args): ...
    def getLinkedObjects(self, *args): ...
    def getShadowIgnoredLights(self, *args): ...
    def getShadowIgnoredObjects(self, *args): ...
    def getShadowLinkedLights(self, *args): ...
    def getShadowLinkedObjects(self, *args): ...
    def parseLinks(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MRenderingInfo(_object):
    def __getattr__(self, name): ...
    def __init__(self, *args, **kwargs): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def cameraPath(self, *args): ...
    def height(self, *args): ...
    def originX(self, *args): ...
    def originY(self, *args): ...
    def projectionMatrix(self, *args): ...
    def renderTarget(self, *args): ...
    def renderingAPI(self, *args): ...
    def renderingVersion(self, *args): ...
    def viewMatrix(self, *args): ...
    def width(self, *args): ...
    __dict__ : dictproxy
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MVaryingParameter(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addElement(self, *args): ...
    def assign(self, *args): ...
    def destinationSet(self, *args): ...
    def dimension(self, *args): ...
    def getBuffer(self, *args): ...
    def getElement(self, *args): ...
    def getElementSize(self, *args): ...
    def getMaximumStride(self, *args): ...
    def getSourceSetName(self, *args): ...
    def getSourceType(self, *args): ...
    def getUpdateId(self, *args): ...
    def name(self, *args): ...
    def numElements(self, *args): ...
    def removeElements(self, *args): ...
    def semantic(self, *args): ...
    def semanticName(self, *args): ...
    def setSource(self, *args): ...
    def type(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kBinormal : int
    
    kChar : int
    
    kColor : int
    
    kDouble : int
    
    kFloat : int
    
    kInt16 : int
    
    kInt32 : int
    
    kInvalidParameter : int
    
    kNoSemantic : int
    
    kNormal : int
    
    kPosition : int
    
    kStructure : int
    
    kTangent : int
    
    kTexCoord : int
    
    kUnsignedChar : int
    
    kUnsignedInt16 : int
    
    kUnsignedInt32 : int
    
    kWeight : int


class MRenderView(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def doesRenderEditorExist(*args, **kwargs): ...
    @staticmethod
    def endRender(*args, **kwargs): ...
    @staticmethod
    def getRenderRegion(*args, **kwargs): ...
    @staticmethod
    def refresh(*args, **kwargs): ...
    @staticmethod
    def setCurrentCamera(*args, **kwargs): ...
    @staticmethod
    def setDrawTileBoundary(*args, **kwargs): ...
    @staticmethod
    def startRegionRender(*args, **kwargs): ...
    @staticmethod
    def startRender(*args, **kwargs): ...
    @staticmethod
    def updatePixels(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MGeometryList(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addLast(self, *args): ...
    def cullMode(self, *args): ...
    def geometry(self, *args): ...
    def isDone(self, *args): ...
    def length(self, *args): ...
    def next(self, *args): ...
    def objectToWorldMatrix(self, *args): ...
    def path(self, *args): ...
    def projectionMatrix(self, *args): ...
    def reset(self, *args): ...
    def setCurrentElement(self, *args): ...
    def viewMatrix(self, *args): ...
    @property
    def MSetupFlags(self): ...
    @MSetupFlags.setter
    def MSetupFlags(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kAll : int
    
    kCullCCW : int
    
    kCullCW : int
    
    kCullNone : int
    
    kCulling : int
    
    kFixedFunctionLighting : int
    
    kMatrices : int
    
    kNone : int


class MSwatchRenderRegister(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def registerSwatchRender(*args, **kwargs): ...
    @staticmethod
    def unregisterSwatchRender(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MHwrCallback(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def deviceDeleted(self, *args): ...
    def deviceLost(self, *args): ...
    def deviceNew(self, *args): ...
    def deviceReset(self, *args): ...
    @staticmethod
    def addCallback(*args, **kwargs): ...
    @staticmethod
    def removeCallback(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class floatPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MGeometryPrimitive(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def data(self, *args): ...
    def dataType(self, *args): ...
    def drawPrimitiveType(self, *args): ...
    def elementCount(self, *args): ...
    def uniqueID(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kInvalidIndexType : int
    
    kLineLoop : int
    
    kLineStrip : int
    
    kLines : int
    
    kMaxDrawPrimitiveTypeIndex : int
    
    kPoints : int
    
    kPolygon : int
    
    kQuadStrip : int
    
    kQuads : int
    
    kTriangleFan : int
    
    kTriangleStrip : int
    
    kTriangles : int


class shortPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class doublePtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MGeometryData(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def collectionNumber(self, *args): ...
    def data(self, *args): ...
    def dataType(self, *args): ...
    def elementCount(self, *args): ...
    def elementSize(self, *args): ...
    def elementType(self, *args): ...
    def elementTypeSize(self, *args): ...
    def objectName(self, *args): ...
    def objectOwnsData(self, *args): ...
    def setCollectionNumber(self, *args): ...
    def setObjectOwnsData(self, *args): ...
    def uniqueID(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kAPISupported : int
    
    kBiNormal : int
    
    kChar : int
    
    kColor : int
    
    kColorMask : int
    
    kDouble : int
    
    kFloat : int
    
    kFour : int
    
    kInt16 : int
    
    kInt32 : int
    
    kInvalidDataType : int
    
    kInvalidElementSize : int
    
    kInvalidElementType : int
    
    kMaxDataTypeIndex : int
    
    kNormal : int
    
    kOne : int
    
    kPosition : int
    
    kPrimitiveCenter : int
    
    kTangent : int
    
    kTexCoord : int
    
    kThree : int
    
    kTwo : int
    
    kUnsignedChar : int
    
    kUnsignedInt16 : int
    
    kUnsignedInt32 : int
    
    kUserData : int
    
    kVelocity : int
    
    kWeight : int


class MUniformParameter(_object):
    def UIHidden(self, *args): ...
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def getAsBool(self, *args): ...
    def getAsFloat(self, *args): ...
    def getAsFloatArray(self, *args): ...
    def getAsInt(self, *args): ...
    def getAsString(self, *args): ...
    def getPlug(self, *args): ...
    def getSource(self, *args): ...
    def hasChanged(self, *args): ...
    def isATexture(self, *args): ...
    def keyable(self, *args): ...
    def name(self, *args): ...
    def numColumns(self, *args): ...
    def numElements(self, *args): ...
    def numRows(self, *args): ...
    def semantic(self, *args): ...
    def setAsBool(self, *args): ...
    def setAsFloat(self, *args): ...
    def setAsFloatArray(self, *args): ...
    def setAsInt(self, *args): ...
    def setAsString(self, *args): ...
    def setDirty(self, *args): ...
    def setEnumFieldNames(self, *args): ...
    def setKeyable(self, *args): ...
    def setRangeMax(self, *args): ...
    def setRangeMin(self, *args): ...
    def setSoftRangeMax(self, *args): ...
    def setSoftRangeMin(self, *args): ...
    def setUIHidden(self, *args): ...
    def setUINiceName(self, *args): ...
    def type(self, *args): ...
    def userData(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kSemanticBackgroundColor : int
    
    kSemanticBump : int
    
    kSemanticBumpTexture : int
    
    kSemanticColor : int
    
    kSemanticColorTexture : int
    
    kSemanticEnvironment : int
    
    kSemanticFarClipPlane : int
    
    kSemanticFrameNumber : int
    
    kSemanticHWSEdgeLevel : int
    
    kSemanticHWSFaceLevel : int
    
    kSemanticHWSFrontCCW : int
    
    kSemanticHWSHighlighting : int
    
    kSemanticHWSInstancedDraw : int
    
    kSemanticHWSObjectLevel : int
    
    kSemanticHWSOccluder : int
    
    kSemanticHWSPrimitiveBase : int
    
    kSemanticHWSPrimitiveCountPerInstance : int
    
    kSemanticHWSVertexLevel : int
    
    kSemanticLocalViewer : int
    
    kSemanticNearClipPlane : int
    
    kSemanticNormal : int
    
    kSemanticNormalTexture : int
    
    kSemanticNormalizationTexture : int
    
    kSemanticObjectDir : int
    
    kSemanticObjectPos : int
    
    kSemanticOpaqueDepthTexture : int
    
    kSemanticProjectionDir : int
    
    kSemanticProjectionInverseMatrix : int
    
    kSemanticProjectionInverseTransposeMatrix : int
    
    kSemanticProjectionMatrix : int
    
    kSemanticProjectionPos : int
    
    kSemanticProjectionTransposeMatrix : int
    
    kSemanticTime : int
    
    kSemanticTranspDepthTexture : int
    
    kSemanticUnknown : int
    
    kSemanticViewDir : int
    
    kSemanticViewInverseMatrix : int
    
    kSemanticViewInverseTransposeMatrix : int
    
    kSemanticViewMatrix : int
    
    kSemanticViewPos : int
    
    kSemanticViewProjectionInverseMatrix : int
    
    kSemanticViewProjectionInverseTransposeMatrix : int
    
    kSemanticViewProjectionMatrix : int
    
    kSemanticViewProjectionTransposeMatrix : int
    
    kSemanticViewTransposeMatrix : int
    
    kSemanticViewportPixelSize : int
    
    kSemanticWorldDir : int
    
    kSemanticWorldInverseMatrix : int
    
    kSemanticWorldInverseTransposeMatrix : int
    
    kSemanticWorldMatrix : int
    
    kSemanticWorldPos : int
    
    kSemanticWorldTransposeMatrix : int
    
    kSemanticWorldViewInverseMatrix : int
    
    kSemanticWorldViewInverseTransposeMatrix : int
    
    kSemanticWorldViewMatrix : int
    
    kSemanticWorldViewProjectionInverseMatrix : int
    
    kSemanticWorldViewProjectionInverseTransposeMatrix : int
    
    kSemanticWorldViewProjectionMatrix : int
    
    kSemanticWorldViewProjectionTransposeMatrix : int
    
    kSemanticWorldViewTransposeMatrix : int
    
    kType1DTexture : int
    
    kType2DTexture : int
    
    kType3DTexture : int
    
    kTypeBool : int
    
    kTypeCubeTexture : int
    
    kTypeEnum : int
    
    kTypeEnvTexture : int
    
    kTypeFloat : int
    
    kTypeInt : int
    
    kTypeString : int
    
    kTypeUnknown : int


class MSwatchRenderBase(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def cancelParallelRendering(self, *args): ...
    def doIteration(self, *args): ...
    def image(self, *args): ...
    def node(self, *args): ...
    def renderParallel(self, *args): ...
    def renderQuality(self, *args): ...
    def resolution(self, *args): ...
    def setRenderQuality(self, *args): ...
    def swatchNode(self, *args): ...
    @staticmethod
    def cancelCurrentSwatchRender(*args, **kwargs): ...
    @staticmethod
    def enableSwatchRender(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MHardwareRenderer(_object):
    def __getattr__(self, name): ...
    def __init__(self, *args, **kwargs): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addDrawProcedure(self, *args): ...
    def backEndString(self, *args): ...
    def dereferenceGeometry(self, *args): ...
    def drawSwatchBackGroundQuads(self, *args): ...
    def findDrawProcedure(self, *args): ...
    def getBufferSize(self, *args): ...
    def getColorBufferPixelFormat(self, *args): ...
    def getCurrentExposureNumber(self, *args): ...
    def getDepthBufferPixelFormat(self, *args): ...
    def getDrawProcedureCount(self, *args): ...
    def getDrawProcedureListNames(self, *args): ...
    def getSwatchLightDirection(self, *args): ...
    def getSwatchOrthoCameraSetting(self, *args): ...
    def getSwatchPerspectiveCameraSetting(self, *args): ...
    def getSwatchPerspectiveCameraTranslation(self, *args): ...
    def getTotalExposureCount(self, *args): ...
    def glFunctionTable(self, *args): ...
    def insertDrawProcedure(self, *args): ...
    def makeResourceContextCurrent(self, *args): ...
    def makeSwatchContextCurrent(self, *args): ...
    def readSwatchContextPixels(self, *args): ...
    def referenceDefaultGeometry(self, *args): ...
    def removeDrawProcedure(self, *args): ...
    def restoreCurrent(self, *args): ...
    @staticmethod
    def theRenderer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kDefaultCube : int
    
    kDefaultPlane : int
    
    kDefaultSphere : int
    
    kDepth_Float32 : int
    
    kFailure : int
    
    kItemExists : int
    
    kItemNotFound : int
    
    kLocationNotFound : int
    
    kPostExposure : int
    
    kPostRendering : int
    
    kPreExposure : int
    
    kPreRendering : int
    
    kRGBA_Fix8 : int
    
    kRGBA_Float16 : int
    
    kSuccess : int


class MFnImageSource(OpenMaya.MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def getImageName(self, *args): ...
    def sourceCamera(self, *args): ...
    def sourceLayer(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MRenderData(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def screenToWorld(self, *args): ...
    def worldToScreen(self, *args): ...
    @property
    def aspectRatio(self): ...
    @aspectRatio.setter
    def aspectRatio(self, value): ...
    @property
    def bottom(self): ...
    @bottom.setter
    def bottom(self, value): ...
    @property
    def bytesPerChannel(self): ...
    @bytesPerChannel.setter
    def bytesPerChannel(self, value): ...
    @property
    def depthArr(self): ...
    @depthArr.setter
    def depthArr(self, value): ...
    @property
    def eyePoint(self): ...
    @eyePoint.setter
    def eyePoint(self, value): ...
    @property
    def fieldOfView(self): ...
    @fieldOfView.setter
    def fieldOfView(self, value): ...
    @property
    def internalData(self): ...
    @internalData.setter
    def internalData(self, value): ...
    @property
    def left(self): ...
    @left.setter
    def left(self, value): ...
    @property
    def perspective(self): ...
    @perspective.setter
    def perspective(self, value): ...
    @property
    def resX(self): ...
    @resX.setter
    def resX(self, value): ...
    @property
    def resY(self): ...
    @resY.setter
    def resY(self, value): ...
    @property
    def rgbaArr(self): ...
    @rgbaArr.setter
    def rgbaArr(self, value): ...
    @property
    def right(self): ...
    @right.setter
    def right(self, value): ...
    @property
    def top(self): ...
    @top.setter
    def top(self, value): ...
    @property
    def viewDirection(self): ...
    @viewDirection.setter
    def viewDirection(self, value): ...
    @property
    def worldToEyeMatrix(self): ...
    @worldToEyeMatrix.setter
    def worldToEyeMatrix(self, value): ...
    @property
    def xsize(self): ...
    @xsize.setter
    def xsize(self, value): ...
    @property
    def ysize(self): ...
    @ysize.setter
    def ysize(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MRenderSetupPrivate(_object):
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MGeometryManager(_object):
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def dereferenceDefaultGeometry(*args, **kwargs): ...
    @staticmethod
    def getGeometry(*args, **kwargs): ...
    @staticmethod
    def referenceDefaultGeometry(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kDefaultCube : int
    
    kDefaultPlane : int
    
    kDefaultSphere : int


class MFnRenderLayer(OpenMaya.MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def adjustmentPlug(self, *args): ...
    def externalRenderPasses(self, *args): ...
    def inCurrentRenderLayer(self, *args): ...
    def inLayer(self, *args): ...
    def isPlugAdjusted(self, *args): ...
    def layerChildren(self, *args): ...
    def listMembers(self, *args): ...
    def passHasLight(self, *args): ...
    def passHasObject(self, *args): ...
    def type(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def currentLayer(*args, **kwargs): ...
    @staticmethod
    def defaultRenderLayer(*args, **kwargs): ...
    @staticmethod
    def findLayerByName(*args, **kwargs): ...
    @staticmethod
    def listAllRenderLayers(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MGLFunctionTable(_object):
    def __getattr__(self, name): ...
    def __init__(self, *args, **kwargs): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def extensionExists(self, *args): ...
    def glAccum(self, *args): ...
    def glActiveTexture(self, *args): ...
    def glActiveVaryingNV(self, *args): ...
    def glAlphaFragmentOp1ATI(self, *args): ...
    def glAlphaFragmentOp2ATI(self, *args): ...
    def glAlphaFragmentOp3ATI(self, *args): ...
    def glAlphaFunc(self, *args): ...
    def glAreProgramsResidentNV(self, *args): ...
    def glAreTexturesResident(self, *args): ...
    def glArrayElement(self, *args): ...
    def glAttachObjectARB(self, *args): ...
    def glBegin(self, *args): ...
    def glBeginFragmentShaderATI(self, *args): ...
    def glBeginOcclusionQueryNV(self, *args): ...
    def glBeginQueryARB(self, *args): ...
    def glBeginTransformFeedbackEXT(self, *args): ...
    def glBeginTransformFeedbackNV(self, *args): ...
    def glBeginVertexShaderEXT(self, *args): ...
    def glBindAttribLocationARB(self, *args): ...
    def glBindBufferARB(self, *args): ...
    def glBindBufferBaseEXT(self, *args): ...
    def glBindBufferBaseNV(self, *args): ...
    def glBindBufferOffsetEXT(self, *args): ...
    def glBindBufferOffsetNV(self, *args): ...
    def glBindBufferRangeEXT(self, *args): ...
    def glBindBufferRangeNV(self, *args): ...
    def glBindFragmentShaderATI(self, *args): ...
    def glBindFramebufferEXT(self, *args): ...
    def glBindLightParameterEXT(self, *args): ...
    def glBindMaterialParameterEXT(self, *args): ...
    def glBindParameterEXT(self, *args): ...
    def glBindProgram(self, *args): ...
    def glBindProgramNV(self, *args): ...
    def glBindRenderbufferEXT(self, *args): ...
    def glBindTexGenParameterEXT(self, *args): ...
    def glBindTexture(self, *args): ...
    def glBindTextureUnitParameterEXT(self, *args): ...
    def glBindVertexShaderEXT(self, *args): ...
    def glBitmap(self, *args): ...
    def glBlendEquationEXT(self, *args): ...
    def glBlendFunc(self, *args): ...
    def glBlitFramebufferEXT(self, *args): ...
    def glBufferDataARB(self, *args): ...
    def glBufferSubDataARB(self, *args): ...
    def glCallList(self, *args): ...
    def glCallLists(self, *args): ...
    def glCheckFramebufferStatusEXT(self, *args): ...
    def glClear(self, *args): ...
    def glClearAccum(self, *args): ...
    def glClearColor(self, *args): ...
    def glClearDepth(self, *args): ...
    def glClearIndex(self, *args): ...
    def glClearStencil(self, *args): ...
    def glClientActiveTexture(self, *args): ...
    def glClipPlane(self, *args): ...
    def glColor3b(self, *args): ...
    def glColor3bv(self, *args): ...
    def glColor3d(self, *args): ...
    def glColor3dv(self, *args): ...
    def glColor3f(self, *args): ...
    def glColor3fv(self, *args): ...
    def glColor3i(self, *args): ...
    def glColor3iv(self, *args): ...
    def glColor3s(self, *args): ...
    def glColor3sv(self, *args): ...
    def glColor3ub(self, *args): ...
    def glColor3ubv(self, *args): ...
    def glColor3ui(self, *args): ...
    def glColor3uiv(self, *args): ...
    def glColor3us(self, *args): ...
    def glColor3usv(self, *args): ...
    def glColor4b(self, *args): ...
    def glColor4bv(self, *args): ...
    def glColor4d(self, *args): ...
    def glColor4dv(self, *args): ...
    def glColor4f(self, *args): ...
    def glColor4fv(self, *args): ...
    def glColor4i(self, *args): ...
    def glColor4iv(self, *args): ...
    def glColor4s(self, *args): ...
    def glColor4sv(self, *args): ...
    def glColor4ub(self, *args): ...
    def glColor4ubv(self, *args): ...
    def glColor4ui(self, *args): ...
    def glColor4uiv(self, *args): ...
    def glColor4us(self, *args): ...
    def glColor4usv(self, *args): ...
    def glColorFragmentOp1ATI(self, *args): ...
    def glColorFragmentOp2ATI(self, *args): ...
    def glColorFragmentOp3ATI(self, *args): ...
    def glColorMask(self, *args): ...
    def glColorMaterial(self, *args): ...
    def glColorPointer(self, *args): ...
    def glCombinerInputNV(self, *args): ...
    def glCombinerOutputNV(self, *args): ...
    def glCombinerParameterfNV(self, *args): ...
    def glCombinerParameterfvNV(self, *args): ...
    def glCombinerParameteriNV(self, *args): ...
    def glCombinerParameterivNV(self, *args): ...
    def glCompileShaderARB(self, *args): ...
    def glCompressedTexImage1D(self, *args): ...
    def glCompressedTexImage2D(self, *args): ...
    def glCompressedTexImage3D(self, *args): ...
    def glCompressedTexSubImage1D(self, *args): ...
    def glCompressedTexSubImage2D(self, *args): ...
    def glCompressedTexSubImage3D(self, *args): ...
    def glCopyPixels(self, *args): ...
    def glCopyTexImage1D(self, *args): ...
    def glCopyTexImage2D(self, *args): ...
    def glCopyTexSubImage1D(self, *args): ...
    def glCopyTexSubImage2D(self, *args): ...
    def glCopyTexSubImage3D(self, *args): ...
    def glCreateProgramObjectARB(self, *args): ...
    def glCreateShaderObjectARB(self, *args): ...
    def glCullFace(self, *args): ...
    def glCullParameterdvEXT(self, *args): ...
    def glCullParameterfvEXT(self, *args): ...
    def glDeleteBuffersARB(self, *args): ...
    def glDeleteFencesNV(self, *args): ...
    def glDeleteFragmentShaderATI(self, *args): ...
    def glDeleteFramebuffersEXT(self, *args): ...
    def glDeleteLists(self, *args): ...
    def glDeleteObjectARB(self, *args): ...
    def glDeleteOcclusionQueriesNV(self, *args): ...
    def glDeletePrograms(self, *args): ...
    def glDeleteProgramsNV(self, *args): ...
    def glDeleteQueriesARB(self, *args): ...
    def glDeleteRenderbuffersEXT(self, *args): ...
    def glDeleteTextures(self, *args): ...
    def glDeleteVertexShaderEXT(self, *args): ...
    def glDepthFunc(self, *args): ...
    def glDepthMask(self, *args): ...
    def glDepthRange(self, *args): ...
    def glDetachObjectARB(self, *args): ...
    def glDisable(self, *args): ...
    def glDisableClientState(self, *args): ...
    def glDisableVariantClientStateEXT(self, *args): ...
    def glDisableVertexAttribArray(self, *args): ...
    def glDrawArrays(self, *args): ...
    def glDrawBuffer(self, *args): ...
    def glDrawElements(self, *args): ...
    def glDrawPixels(self, *args): ...
    def glDrawRangeElements(self, *args): ...
    def glEdgeFlag(self, *args): ...
    def glEdgeFlagPointer(self, *args): ...
    def glEdgeFlagv(self, *args): ...
    def glEnable(self, *args): ...
    def glEnableClientState(self, *args): ...
    def glEnableVariantClientStateEXT(self, *args): ...
    def glEnableVertexAttribArray(self, *args): ...
    def glEnd(self, *args): ...
    def glEndFragmentShaderATI(self, *args): ...
    def glEndList(self, *args): ...
    def glEndOcclusionQueryNV(self, *args): ...
    def glEndQueryARB(self, *args): ...
    def glEndTransformFeedbackEXT(self, *args): ...
    def glEndTransformFeedbackNV(self, *args): ...
    def glEndVertexShaderEXT(self, *args): ...
    def glEvalCoord1d(self, *args): ...
    def glEvalCoord1dv(self, *args): ...
    def glEvalCoord1f(self, *args): ...
    def glEvalCoord1fv(self, *args): ...
    def glEvalCoord2d(self, *args): ...
    def glEvalCoord2dv(self, *args): ...
    def glEvalCoord2f(self, *args): ...
    def glEvalCoord2fv(self, *args): ...
    def glEvalMesh1(self, *args): ...
    def glEvalMesh2(self, *args): ...
    def glEvalPoint1(self, *args): ...
    def glEvalPoint2(self, *args): ...
    def glExecuteProgramNV(self, *args): ...
    def glExtractComponentEXT(self, *args): ...
    def glFeedbackBuffer(self, *args): ...
    def glFinalCombinerInputNV(self, *args): ...
    def glFinish(self, *args): ...
    def glFinishFenceNV(self, *args): ...
    def glFlush(self, *args): ...
    def glFlushVertexArrayRangeNV(self, *args): ...
    def glFogCoordPointerEXT(self, *args): ...
    def glFogCoorddEXT(self, *args): ...
    def glFogCoorddvEXT(self, *args): ...
    def glFogCoordfEXT(self, *args): ...
    def glFogCoordfvEXT(self, *args): ...
    def glFogf(self, *args): ...
    def glFogfv(self, *args): ...
    def glFogi(self, *args): ...
    def glFogiv(self, *args): ...
    def glFramebufferRenderbufferEXT(self, *args): ...
    def glFramebufferTexture1DEXT(self, *args): ...
    def glFramebufferTexture2DEXT(self, *args): ...
    def glFramebufferTexture3DEXT(self, *args): ...
    def glFrontFace(self, *args): ...
    def glFrustum(self, *args): ...
    def glGenBuffersARB(self, *args): ...
    def glGenFencesNV(self, *args): ...
    def glGenFragmentShadersATI(self, *args): ...
    def glGenFramebuffersEXT(self, *args): ...
    def glGenLists(self, *args): ...
    def glGenOcclusionQueriesNV(self, *args): ...
    def glGenPrograms(self, *args): ...
    def glGenProgramsNV(self, *args): ...
    def glGenQueriesARB(self, *args): ...
    def glGenRenderbuffersEXT(self, *args): ...
    def glGenSymbolsEXT(self, *args): ...
    def glGenTextures(self, *args): ...
    def glGenVertexShadersEXT(self, *args): ...
    def glGenerateMipmapEXT(self, *args): ...
    def glGetActiveAttribARB(self, *args): ...
    def glGetActiveUniformARB(self, *args): ...
    def glGetActiveVaryingNV(self, *args): ...
    def glGetAttachedObjectsARB(self, *args): ...
    def glGetAttribLocationARB(self, *args): ...
    def glGetBooleanv(self, *args): ...
    def glGetBufferParameterivARB(self, *args): ...
    def glGetBufferPointervARB(self, *args): ...
    def glGetBufferSubDataARB(self, *args): ...
    def glGetClipPlane(self, *args): ...
    def glGetCombinerInputParameterfvNV(self, *args): ...
    def glGetCombinerInputParameterivNV(self, *args): ...
    def glGetCombinerOutputParameterfvNV(self, *args): ...
    def glGetCombinerOutputParameterivNV(self, *args): ...
    def glGetCompressedTexImage(self, *args): ...
    def glGetDoublev(self, *args): ...
    def glGetError(self, *args): ...
    def glGetFenceivNV(self, *args): ...
    def glGetFinalCombinerInputParameterfvNV(self, *args): ...
    def glGetFinalCombinerInputParameterivNV(self, *args): ...
    def glGetFloatv(self, *args): ...
    def glGetFramebufferAttachmentParameterivEXT(self, *args): ...
    def glGetHandleARB(self, *args): ...
    def glGetInfoLogARB(self, *args): ...
    def glGetIntegerv(self, *args): ...
    def glGetInvariantBooleanvEXT(self, *args): ...
    def glGetInvariantFloatvEXT(self, *args): ...
    def glGetInvariantIntegervEXT(self, *args): ...
    def glGetLightfv(self, *args): ...
    def glGetLightiv(self, *args): ...
    def glGetLocalConstantBooleanvEXT(self, *args): ...
    def glGetLocalConstantFloatvEXT(self, *args): ...
    def glGetLocalConstantIntegervEXT(self, *args): ...
    def glGetMapdv(self, *args): ...
    def glGetMapfv(self, *args): ...
    def glGetMapiv(self, *args): ...
    def glGetMaterialfv(self, *args): ...
    def glGetMaterialiv(self, *args): ...
    def glGetObjectParameterfvARB(self, *args): ...
    def glGetObjectParameterivARB(self, *args): ...
    def glGetOcclusionQueryivNV(self, *args): ...
    def glGetOcclusionQueryuivNV(self, *args): ...
    def glGetPixelMapfv(self, *args): ...
    def glGetPixelMapuiv(self, *args): ...
    def glGetPixelMapusv(self, *args): ...
    def glGetPointerv(self, *args): ...
    def glGetPolygonStipple(self, *args): ...
    def glGetProgramEnvParameterdv(self, *args): ...
    def glGetProgramEnvParameterfv(self, *args): ...
    def glGetProgramLocalParameterdv(self, *args): ...
    def glGetProgramLocalParameterfv(self, *args): ...
    def glGetProgramParameterdvNV(self, *args): ...
    def glGetProgramParameterfvNV(self, *args): ...
    def glGetProgramString(self, *args): ...
    def glGetProgramStringNV(self, *args): ...
    def glGetProgramiv(self, *args): ...
    def glGetProgramivNV(self, *args): ...
    def glGetQueryObjectivARB(self, *args): ...
    def glGetQueryObjectuivARB(self, *args): ...
    def glGetQueryivARB(self, *args): ...
    def glGetRenderbufferParameterivEXT(self, *args): ...
    def glGetShaderSourceARB(self, *args): ...
    def glGetString(self, *args): ...
    def glGetTexEnvfv(self, *args): ...
    def glGetTexEnviv(self, *args): ...
    def glGetTexGendv(self, *args): ...
    def glGetTexGenfv(self, *args): ...
    def glGetTexGeniv(self, *args): ...
    def glGetTexImage(self, *args): ...
    def glGetTexLevelParameterfv(self, *args): ...
    def glGetTexLevelParameteriv(self, *args): ...
    def glGetTexParameterfv(self, *args): ...
    def glGetTexParameteriv(self, *args): ...
    def glGetTrackMatrixivNV(self, *args): ...
    def glGetTransformFeedbackVaryingEXT(self, *args): ...
    def glGetTransformFeedbackVaryingNV(self, *args): ...
    def glGetUniformLocationARB(self, *args): ...
    def glGetUniformfvARB(self, *args): ...
    def glGetUniformivARB(self, *args): ...
    def glGetVariantBooleanvEXT(self, *args): ...
    def glGetVariantFloatvEXT(self, *args): ...
    def glGetVariantIntegervEXT(self, *args): ...
    def glGetVariantPointervEXT(self, *args): ...
    def glGetVaryingLocationNV(self, *args): ...
    def glGetVertexAttribPointerv(self, *args): ...
    def glGetVertexAttribPointervNV(self, *args): ...
    def glGetVertexAttribdv(self, *args): ...
    def glGetVertexAttribdvNV(self, *args): ...
    def glGetVertexAttribfv(self, *args): ...
    def glGetVertexAttribfvNV(self, *args): ...
    def glGetVertexAttribiv(self, *args): ...
    def glGetVertexAttribivNV(self, *args): ...
    def glHint(self, *args): ...
    def glIndexMask(self, *args): ...
    def glIndexPointer(self, *args): ...
    def glIndexd(self, *args): ...
    def glIndexdv(self, *args): ...
    def glIndexf(self, *args): ...
    def glIndexfv(self, *args): ...
    def glIndexi(self, *args): ...
    def glIndexiv(self, *args): ...
    def glIndexs(self, *args): ...
    def glIndexsv(self, *args): ...
    def glIndexub(self, *args): ...
    def glIndexubv(self, *args): ...
    def glInitNames(self, *args): ...
    def glInsertComponentEXT(self, *args): ...
    def glInterleavedArrays(self, *args): ...
    def glIsBufferARB(self, *args): ...
    def glIsEnabled(self, *args): ...
    def glIsFenceNV(self, *args): ...
    def glIsFramebufferEXT(self, *args): ...
    def glIsList(self, *args): ...
    def glIsOcclusionQueryNV(self, *args): ...
    def glIsProgram(self, *args): ...
    def glIsProgramNV(self, *args): ...
    def glIsQueryARB(self, *args): ...
    def glIsRenderbufferEXT(self, *args): ...
    def glIsTexture(self, *args): ...
    def glIsVariantEnabledEXT(self, *args): ...
    def glLightModelf(self, *args): ...
    def glLightModelfv(self, *args): ...
    def glLightModeli(self, *args): ...
    def glLightModeliv(self, *args): ...
    def glLightf(self, *args): ...
    def glLightfv(self, *args): ...
    def glLighti(self, *args): ...
    def glLightiv(self, *args): ...
    def glLineStipple(self, *args): ...
    def glLineWidth(self, *args): ...
    def glLinkProgramARB(self, *args): ...
    def glListBase(self, *args): ...
    def glLoadIdentity(self, *args): ...
    def glLoadMatrixd(self, *args): ...
    def glLoadMatrixf(self, *args): ...
    def glLoadName(self, *args): ...
    def glLoadProgramNV(self, *args): ...
    def glLoadTransposeMatrixd(self, *args): ...
    def glLoadTransposeMatrixdARB(self, *args): ...
    def glLoadTransposeMatrixf(self, *args): ...
    def glLoadTransposeMatrixfARB(self, *args): ...
    def glLockArraysEXT(self, *args): ...
    def glLogicOp(self, *args): ...
    def glMap1d(self, *args): ...
    def glMap1f(self, *args): ...
    def glMap2d(self, *args): ...
    def glMap2f(self, *args): ...
    def glMapBufferARB(self, *args): ...
    def glMapGrid1d(self, *args): ...
    def glMapGrid1f(self, *args): ...
    def glMapGrid2d(self, *args): ...
    def glMapGrid2f(self, *args): ...
    def glMaterialf(self, *args): ...
    def glMaterialfv(self, *args): ...
    def glMateriali(self, *args): ...
    def glMaterialiv(self, *args): ...
    def glMatrixMode(self, *args): ...
    def glMultMatrixd(self, *args): ...
    def glMultMatrixf(self, *args): ...
    def glMultTransposeMatrixd(self, *args): ...
    def glMultTransposeMatrixdARB(self, *args): ...
    def glMultTransposeMatrixf(self, *args): ...
    def glMultTransposeMatrixfARB(self, *args): ...
    def glMultiDrawArrays(self, *args): ...
    def glMultiDrawElements(self, *args): ...
    def glMultiTexCoord1d(self, *args): ...
    def glMultiTexCoord1dv(self, *args): ...
    def glMultiTexCoord1f(self, *args): ...
    def glMultiTexCoord1fv(self, *args): ...
    def glMultiTexCoord1i(self, *args): ...
    def glMultiTexCoord1iv(self, *args): ...
    def glMultiTexCoord1s(self, *args): ...
    def glMultiTexCoord1sv(self, *args): ...
    def glMultiTexCoord2d(self, *args): ...
    def glMultiTexCoord2dv(self, *args): ...
    def glMultiTexCoord2f(self, *args): ...
    def glMultiTexCoord2fv(self, *args): ...
    def glMultiTexCoord2i(self, *args): ...
    def glMultiTexCoord2iv(self, *args): ...
    def glMultiTexCoord2s(self, *args): ...
    def glMultiTexCoord2sv(self, *args): ...
    def glMultiTexCoord3d(self, *args): ...
    def glMultiTexCoord3dv(self, *args): ...
    def glMultiTexCoord3f(self, *args): ...
    def glMultiTexCoord3fv(self, *args): ...
    def glMultiTexCoord3i(self, *args): ...
    def glMultiTexCoord3iv(self, *args): ...
    def glMultiTexCoord3s(self, *args): ...
    def glMultiTexCoord3sv(self, *args): ...
    def glMultiTexCoord4d(self, *args): ...
    def glMultiTexCoord4dv(self, *args): ...
    def glMultiTexCoord4f(self, *args): ...
    def glMultiTexCoord4fv(self, *args): ...
    def glMultiTexCoord4i(self, *args): ...
    def glMultiTexCoord4iv(self, *args): ...
    def glMultiTexCoord4s(self, *args): ...
    def glMultiTexCoord4sv(self, *args): ...
    def glNewList(self, *args): ...
    def glNormal3b(self, *args): ...
    def glNormal3bv(self, *args): ...
    def glNormal3d(self, *args): ...
    def glNormal3dv(self, *args): ...
    def glNormal3f(self, *args): ...
    def glNormal3fv(self, *args): ...
    def glNormal3i(self, *args): ...
    def glNormal3iv(self, *args): ...
    def glNormal3s(self, *args): ...
    def glNormal3sv(self, *args): ...
    def glNormalPointer(self, *args): ...
    def glOrtho(self, *args): ...
    def glPNTrianglesfATI(self, *args): ...
    def glPNTrianglesiATI(self, *args): ...
    def glPassTexCoordATI(self, *args): ...
    def glPassThrough(self, *args): ...
    def glPixelMapfv(self, *args): ...
    def glPixelMapuiv(self, *args): ...
    def glPixelMapusv(self, *args): ...
    def glPixelStoref(self, *args): ...
    def glPixelStorei(self, *args): ...
    def glPixelTransferf(self, *args): ...
    def glPixelTransferi(self, *args): ...
    def glPixelZoom(self, *args): ...
    def glPointParameterf(self, *args): ...
    def glPointParameterfv(self, *args): ...
    def glPointSize(self, *args): ...
    def glPolygonMode(self, *args): ...
    def glPolygonOffset(self, *args): ...
    def glPolygonStipple(self, *args): ...
    def glPopAttrib(self, *args): ...
    def glPopClientAttrib(self, *args): ...
    def glPopMatrix(self, *args): ...
    def glPopName(self, *args): ...
    def glPrimitiveRestartIndexNV(self, *args): ...
    def glPrimitiveRestartNV(self, *args): ...
    def glPrioritizeTextures(self, *args): ...
    def glProgramEnvParameter4d(self, *args): ...
    def glProgramEnvParameter4dv(self, *args): ...
    def glProgramEnvParameter4f(self, *args): ...
    def glProgramEnvParameter4fv(self, *args): ...
    def glProgramLocalParameter4d(self, *args): ...
    def glProgramLocalParameter4dv(self, *args): ...
    def glProgramLocalParameter4f(self, *args): ...
    def glProgramLocalParameter4fv(self, *args): ...
    def glProgramParameter4dNV(self, *args): ...
    def glProgramParameter4dvNV(self, *args): ...
    def glProgramParameter4fNV(self, *args): ...
    def glProgramParameter4fvNV(self, *args): ...
    def glProgramParameters4dvNV(self, *args): ...
    def glProgramParameters4fvNV(self, *args): ...
    def glProgramString(self, *args): ...
    def glPushAttrib(self, *args): ...
    def glPushClientAttrib(self, *args): ...
    def glPushMatrix(self, *args): ...
    def glPushName(self, *args): ...
    def glRasterPos2d(self, *args): ...
    def glRasterPos2dv(self, *args): ...
    def glRasterPos2f(self, *args): ...
    def glRasterPos2fv(self, *args): ...
    def glRasterPos2i(self, *args): ...
    def glRasterPos2iv(self, *args): ...
    def glRasterPos2s(self, *args): ...
    def glRasterPos2sv(self, *args): ...
    def glRasterPos3d(self, *args): ...
    def glRasterPos3dv(self, *args): ...
    def glRasterPos3f(self, *args): ...
    def glRasterPos3fv(self, *args): ...
    def glRasterPos3i(self, *args): ...
    def glRasterPos3iv(self, *args): ...
    def glRasterPos3s(self, *args): ...
    def glRasterPos3sv(self, *args): ...
    def glRasterPos4d(self, *args): ...
    def glRasterPos4dv(self, *args): ...
    def glRasterPos4f(self, *args): ...
    def glRasterPos4fv(self, *args): ...
    def glRasterPos4i(self, *args): ...
    def glRasterPos4iv(self, *args): ...
    def glRasterPos4s(self, *args): ...
    def glRasterPos4sv(self, *args): ...
    def glReadBuffer(self, *args): ...
    def glReadPixels(self, *args): ...
    def glRectd(self, *args): ...
    def glRectdv(self, *args): ...
    def glRectf(self, *args): ...
    def glRectfv(self, *args): ...
    def glRecti(self, *args): ...
    def glRectiv(self, *args): ...
    def glRects(self, *args): ...
    def glRectsv(self, *args): ...
    def glRenderMode(self, *args): ...
    def glRenderbufferStorageEXT(self, *args): ...
    def glRequestResidentProgramsNV(self, *args): ...
    def glRotated(self, *args): ...
    def glRotatef(self, *args): ...
    def glSampleCoverage(self, *args): ...
    def glSampleMapATI(self, *args): ...
    def glScaled(self, *args): ...
    def glScalef(self, *args): ...
    def glScissor(self, *args): ...
    def glSecondaryColor3bEXT(self, *args): ...
    def glSecondaryColor3bvEXT(self, *args): ...
    def glSecondaryColor3dEXT(self, *args): ...
    def glSecondaryColor3dvEXT(self, *args): ...
    def glSecondaryColor3fEXT(self, *args): ...
    def glSecondaryColor3fvEXT(self, *args): ...
    def glSecondaryColor3iEXT(self, *args): ...
    def glSecondaryColor3ivEXT(self, *args): ...
    def glSecondaryColor3sEXT(self, *args): ...
    def glSecondaryColor3svEXT(self, *args): ...
    def glSecondaryColor3ubEXT(self, *args): ...
    def glSecondaryColor3ubvEXT(self, *args): ...
    def glSecondaryColor3uiEXT(self, *args): ...
    def glSecondaryColor3uivEXT(self, *args): ...
    def glSecondaryColor3usEXT(self, *args): ...
    def glSecondaryColor3usvEXT(self, *args): ...
    def glSecondaryColorPointerEXT(self, *args): ...
    def glSelectBuffer(self, *args): ...
    def glSetFenceNV(self, *args): ...
    def glSetFragmentShaderConstantATI(self, *args): ...
    def glSetInvariantEXT(self, *args): ...
    def glSetLocalConstantEXT(self, *args): ...
    def glShadeModel(self, *args): ...
    def glShaderOp1EXT(self, *args): ...
    def glShaderOp2EXT(self, *args): ...
    def glShaderOp3EXT(self, *args): ...
    def glShaderSourceARB(self, *args): ...
    def glStencilFunc(self, *args): ...
    def glStencilMask(self, *args): ...
    def glStencilOp(self, *args): ...
    def glSwizzleEXT(self, *args): ...
    def glTestFenceNV(self, *args): ...
    def glTexCoord1d(self, *args): ...
    def glTexCoord1dv(self, *args): ...
    def glTexCoord1f(self, *args): ...
    def glTexCoord1fv(self, *args): ...
    def glTexCoord1i(self, *args): ...
    def glTexCoord1iv(self, *args): ...
    def glTexCoord1s(self, *args): ...
    def glTexCoord1sv(self, *args): ...
    def glTexCoord2d(self, *args): ...
    def glTexCoord2dv(self, *args): ...
    def glTexCoord2f(self, *args): ...
    def glTexCoord2fv(self, *args): ...
    def glTexCoord2i(self, *args): ...
    def glTexCoord2iv(self, *args): ...
    def glTexCoord2s(self, *args): ...
    def glTexCoord2sv(self, *args): ...
    def glTexCoord3d(self, *args): ...
    def glTexCoord3dv(self, *args): ...
    def glTexCoord3f(self, *args): ...
    def glTexCoord3fv(self, *args): ...
    def glTexCoord3i(self, *args): ...
    def glTexCoord3iv(self, *args): ...
    def glTexCoord3s(self, *args): ...
    def glTexCoord3sv(self, *args): ...
    def glTexCoord4d(self, *args): ...
    def glTexCoord4dv(self, *args): ...
    def glTexCoord4f(self, *args): ...
    def glTexCoord4fv(self, *args): ...
    def glTexCoord4i(self, *args): ...
    def glTexCoord4iv(self, *args): ...
    def glTexCoord4s(self, *args): ...
    def glTexCoord4sv(self, *args): ...
    def glTexCoordPointer(self, *args): ...
    def glTexEnvf(self, *args): ...
    def glTexEnvfv(self, *args): ...
    def glTexEnvi(self, *args): ...
    def glTexEnviv(self, *args): ...
    def glTexGend(self, *args): ...
    def glTexGendv(self, *args): ...
    def glTexGenf(self, *args): ...
    def glTexGenfv(self, *args): ...
    def glTexGeni(self, *args): ...
    def glTexGeniv(self, *args): ...
    def glTexImage1D(self, *args): ...
    def glTexImage2D(self, *args): ...
    def glTexImage3D(self, *args): ...
    def glTexParameterf(self, *args): ...
    def glTexParameterfv(self, *args): ...
    def glTexParameteri(self, *args): ...
    def glTexParameteriv(self, *args): ...
    def glTexSubImage1D(self, *args): ...
    def glTexSubImage2D(self, *args): ...
    def glTexSubImage3D(self, *args): ...
    def glTrackMatrixNV(self, *args): ...
    def glTransformFeedbackAttribsNV(self, *args): ...
    def glTransformFeedbackVaryingsEXT(self, *args): ...
    def glTransformFeedbackVaryingsNV(self, *args): ...
    def glTranslated(self, *args): ...
    def glTranslatef(self, *args): ...
    def glUniform1fARB(self, *args): ...
    def glUniform1fvARB(self, *args): ...
    def glUniform1iARB(self, *args): ...
    def glUniform1ivARB(self, *args): ...
    def glUniform2fARB(self, *args): ...
    def glUniform2fvARB(self, *args): ...
    def glUniform2iARB(self, *args): ...
    def glUniform2ivARB(self, *args): ...
    def glUniform3fARB(self, *args): ...
    def glUniform3fvARB(self, *args): ...
    def glUniform3iARB(self, *args): ...
    def glUniform3ivARB(self, *args): ...
    def glUniform4fARB(self, *args): ...
    def glUniform4fvARB(self, *args): ...
    def glUniform4iARB(self, *args): ...
    def glUniform4ivARB(self, *args): ...
    def glUniformMatrix2fvARB(self, *args): ...
    def glUniformMatrix3fvARB(self, *args): ...
    def glUniformMatrix4fvARB(self, *args): ...
    def glUnlockArraysEXT(self, *args): ...
    def glUnmapBufferARB(self, *args): ...
    def glUseProgramObjectARB(self, *args): ...
    def glValidateProgramARB(self, *args): ...
    def glVariantPointerEXT(self, *args): ...
    def glVariantbvEXT(self, *args): ...
    def glVariantdvEXT(self, *args): ...
    def glVariantfvEXT(self, *args): ...
    def glVariantivEXT(self, *args): ...
    def glVariantsvEXT(self, *args): ...
    def glVariantubvEXT(self, *args): ...
    def glVariantuivEXT(self, *args): ...
    def glVariantusvEXT(self, *args): ...
    def glVertex2d(self, *args): ...
    def glVertex2dv(self, *args): ...
    def glVertex2f(self, *args): ...
    def glVertex2fv(self, *args): ...
    def glVertex2i(self, *args): ...
    def glVertex2iv(self, *args): ...
    def glVertex2s(self, *args): ...
    def glVertex2sv(self, *args): ...
    def glVertex3d(self, *args): ...
    def glVertex3dv(self, *args): ...
    def glVertex3f(self, *args): ...
    def glVertex3fv(self, *args): ...
    def glVertex3i(self, *args): ...
    def glVertex3iv(self, *args): ...
    def glVertex3s(self, *args): ...
    def glVertex3sv(self, *args): ...
    def glVertex4d(self, *args): ...
    def glVertex4dv(self, *args): ...
    def glVertex4f(self, *args): ...
    def glVertex4fv(self, *args): ...
    def glVertex4i(self, *args): ...
    def glVertex4iv(self, *args): ...
    def glVertex4s(self, *args): ...
    def glVertex4sv(self, *args): ...
    def glVertexArrayRangeNV(self, *args): ...
    def glVertexAttrib1d(self, *args): ...
    def glVertexAttrib1dNV(self, *args): ...
    def glVertexAttrib1dv(self, *args): ...
    def glVertexAttrib1dvNV(self, *args): ...
    def glVertexAttrib1f(self, *args): ...
    def glVertexAttrib1fNV(self, *args): ...
    def glVertexAttrib1fv(self, *args): ...
    def glVertexAttrib1fvNV(self, *args): ...
    def glVertexAttrib1s(self, *args): ...
    def glVertexAttrib1sNV(self, *args): ...
    def glVertexAttrib1sv(self, *args): ...
    def glVertexAttrib1svNV(self, *args): ...
    def glVertexAttrib2d(self, *args): ...
    def glVertexAttrib2dNV(self, *args): ...
    def glVertexAttrib2dv(self, *args): ...
    def glVertexAttrib2dvNV(self, *args): ...
    def glVertexAttrib2f(self, *args): ...
    def glVertexAttrib2fNV(self, *args): ...
    def glVertexAttrib2fv(self, *args): ...
    def glVertexAttrib2fvNV(self, *args): ...
    def glVertexAttrib2s(self, *args): ...
    def glVertexAttrib2sNV(self, *args): ...
    def glVertexAttrib2sv(self, *args): ...
    def glVertexAttrib2svNV(self, *args): ...
    def glVertexAttrib3d(self, *args): ...
    def glVertexAttrib3dNV(self, *args): ...
    def glVertexAttrib3dv(self, *args): ...
    def glVertexAttrib3dvNV(self, *args): ...
    def glVertexAttrib3f(self, *args): ...
    def glVertexAttrib3fNV(self, *args): ...
    def glVertexAttrib3fv(self, *args): ...
    def glVertexAttrib3fvNV(self, *args): ...
    def glVertexAttrib3s(self, *args): ...
    def glVertexAttrib3sNV(self, *args): ...
    def glVertexAttrib3sv(self, *args): ...
    def glVertexAttrib3svNV(self, *args): ...
    def glVertexAttrib4Nbv(self, *args): ...
    def glVertexAttrib4Niv(self, *args): ...
    def glVertexAttrib4Nsv(self, *args): ...
    def glVertexAttrib4Nub(self, *args): ...
    def glVertexAttrib4Nubv(self, *args): ...
    def glVertexAttrib4Nuiv(self, *args): ...
    def glVertexAttrib4Nusv(self, *args): ...
    def glVertexAttrib4bv(self, *args): ...
    def glVertexAttrib4d(self, *args): ...
    def glVertexAttrib4dNV(self, *args): ...
    def glVertexAttrib4dv(self, *args): ...
    def glVertexAttrib4dvNV(self, *args): ...
    def glVertexAttrib4f(self, *args): ...
    def glVertexAttrib4fNV(self, *args): ...
    def glVertexAttrib4fv(self, *args): ...
    def glVertexAttrib4fvNV(self, *args): ...
    def glVertexAttrib4iv(self, *args): ...
    def glVertexAttrib4s(self, *args): ...
    def glVertexAttrib4sNV(self, *args): ...
    def glVertexAttrib4sv(self, *args): ...
    def glVertexAttrib4svNV(self, *args): ...
    def glVertexAttrib4ubNV(self, *args): ...
    def glVertexAttrib4ubv(self, *args): ...
    def glVertexAttrib4ubvNV(self, *args): ...
    def glVertexAttrib4uiv(self, *args): ...
    def glVertexAttrib4usv(self, *args): ...
    def glVertexAttribPointer(self, *args): ...
    def glVertexAttribPointerNV(self, *args): ...
    def glVertexAttribs1dvNV(self, *args): ...
    def glVertexAttribs1fvNV(self, *args): ...
    def glVertexAttribs1svNV(self, *args): ...
    def glVertexAttribs2dvNV(self, *args): ...
    def glVertexAttribs2fvNV(self, *args): ...
    def glVertexAttribs2svNV(self, *args): ...
    def glVertexAttribs3dvNV(self, *args): ...
    def glVertexAttribs3fvNV(self, *args): ...
    def glVertexAttribs3svNV(self, *args): ...
    def glVertexAttribs4dvNV(self, *args): ...
    def glVertexAttribs4fvNV(self, *args): ...
    def glVertexAttribs4svNV(self, *args): ...
    def glVertexAttribs4ubvNV(self, *args): ...
    def glVertexPointer(self, *args): ...
    def glVertexWeightPointerEXT(self, *args): ...
    def glVertexWeightfEXT(self, *args): ...
    def glVertexWeightfvEXT(self, *args): ...
    def glViewport(self, *args): ...
    def glWriteMaskEXT(self, *args): ...
    def maxTextureSize(self, *args): ...
    def maxVertexAttributes(self, *args): ...
    def numTexImageUnits(self, *args): ...
    def numTexInterpolants(self, *args): ...
    def numTexUnits(self, *args): ...
    __dict__ : dictproxy
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kMGL_Version11 : int
    
    kMGL_Version12 : int
    
    kMGL_Version121 : int
    
    kMGL_Version13 : int
    
    kMGL_Version14 : int
    
    kMGL_Version15 : int
    
    kMGL_Version20 : int


class uIntPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MRenderTargetLegacy(_object):
    def __getattr__(self, name): ...
    def __init__(self, *args, **kwargs): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def height(self, *args): ...
    def makeTargetCurrent(self, *args): ...
    def width(self, *args): ...
    def writeColorBuffer(self, *args): ...
    __dict__ : dictproxy
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MRenderShadowData(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def worldToZbuffer(self, *args): ...
    def zbufferToWorld(self, *args): ...
    @property
    def depthMaps(self): ...
    @depthMaps.setter
    def depthMaps(self, value): ...
    @property
    def internalData(self): ...
    @internalData.setter
    def internalData(self, value): ...
    @property
    def lightPosition(self): ...
    @lightPosition.setter
    def lightPosition(self, value): ...
    @property
    def lightType(self): ...
    @lightType.setter
    def lightType(self, value): ...
    @property
    def midDistMaps(self): ...
    @midDistMaps.setter
    def midDistMaps(self, value): ...
    @property
    def perspective(self): ...
    @perspective.setter
    def perspective(self, value): ...
    @property
    def perspectiveMatrix(self): ...
    @perspectiveMatrix.setter
    def perspectiveMatrix(self, value): ...
    @property
    def projectionMatrix(self): ...
    @projectionMatrix.setter
    def projectionMatrix(self, value): ...
    @property
    def shadowResX(self): ...
    @shadowResX.setter
    def shadowResX(self, value): ...
    @property
    def shadowResY(self): ...
    @shadowResY.setter
    def shadowResY(self, value): ...
    @property
    def useMidDistMap(self): ...
    @useMidDistMap.setter
    def useMidDistMap(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kDirectional : int
    
    kInvalid : int
    
    kPoint : int
    
    kSpot : int


class MRenderUtil(_object):
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def convertPsdFile(*args, **kwargs): ...
    @staticmethod
    def diffuseReflectance(*args, **kwargs): ...
    @staticmethod
    def eval2dTexture(*args, **kwargs): ...
    @staticmethod
    def exactFileTextureName(*args, **kwargs): ...
    @staticmethod
    def exactImagePlaneFileName(*args, **kwargs): ...
    @staticmethod
    def generatingIprFile(*args, **kwargs): ...
    @staticmethod
    def getCommonRenderSettings(*args, **kwargs): ...
    @staticmethod
    def hemisphereCoverage(*args, **kwargs): ...
    @staticmethod
    def inCurrentRenderLayer(*args, **kwargs): ...
    @staticmethod
    def lightAttenuation(*args, **kwargs): ...
    @staticmethod
    def mainBeautyPassCustomTokenString(*args, **kwargs): ...
    @staticmethod
    def mainBeautyPassName(*args, **kwargs): ...
    @staticmethod
    def maximumSpecularReflection(*args, **kwargs): ...
    @staticmethod
    def mayaRenderState(*args, **kwargs): ...
    @staticmethod
    def noise1(*args, **kwargs): ...
    @staticmethod
    def noise2(*args, **kwargs): ...
    @staticmethod
    def noise3(*args, **kwargs): ...
    @staticmethod
    def noise4(*args, **kwargs): ...
    @staticmethod
    def noiseTableCubeSide(*args, **kwargs): ...
    @staticmethod
    def noiseTableSize(*args, **kwargs): ...
    @staticmethod
    def raytrace(*args, **kwargs): ...
    @staticmethod
    def raytraceFirstGeometryIntersections(*args, **kwargs): ...
    @staticmethod
    def relativeFileName(*args, **kwargs): ...
    @staticmethod
    def renderObjectItem(*args, **kwargs): ...
    @staticmethod
    def renderPass(*args, **kwargs): ...
    @staticmethod
    def sampleShadingNetwork(*args, **kwargs): ...
    @staticmethod
    def sendRenderProgressInfo(*args, **kwargs): ...
    @staticmethod
    def valueInNoiseTable(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kAll : int
    
    kAmbientOnly : int
    
    kBatchRender : int
    
    kColorOnly : int
    
    kDiffuseOnly : int
    
    kHardwareRender : int
    
    kInteractiveRender : int
    
    kIprRender : int
    
    kNotRendering : int
    
    kShadowOnly : int
    
    kSpecularOnly : int


class uCharPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MGeometryRequirementsLegacy(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addBinormal(self, *args): ...
    def addColor(self, *args): ...
    def addComponentId(self, *args): ...
    def addFaceOffsets(self, *args): ...
    def addNormal(self, *args): ...
    def addPosition(self, *args): ...
    def addTangent(self, *args): ...
    def addTexCoord(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MUniformParameterList(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def getElement(self, *args): ...
    def length(self, *args): ...
    def setElement(self, *args): ...
    def setLength(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class intPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MRenderCallback(_object):
    def __del__(self): ...
    def __disown__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def postProcessCallback(self, *args): ...
    def renderCallback(self, *args): ...
    def shadowCastCallback(self, *args): ...
    @staticmethod
    def addCallback(*args, **kwargs): ...
    @staticmethod
    def addRenderTileCallback(*args, **kwargs): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def removeCallback(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MGeometryLegacy(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def binormal(self, *args): ...
    def color(self, *args): ...
    def componentId(self, *args): ...
    def data(self, *args): ...
    def normal(self, *args): ...
    def position(self, *args): ...
    def primitiveArray(self, *args): ...
    def primitiveArrayCount(self, *args): ...
    def tangent(self, *args): ...
    def texCoord(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class boolPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class charPtr(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def assign(self, *args): ...
    def cast(self, *args): ...
    def value(self, *args): ...
    @staticmethod
    def frompointer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MViewportRenderer(_object):
    def UIname(self, *args): ...
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args, **kwargs): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def deregisterRenderer(self, *args): ...
    def initialize(self, *args): ...
    def name(self, *args): ...
    def nativelySupports(self, *args): ...
    def override(self, *args): ...
    def overrideThenStandardExclusion(self, *args): ...
    def registerRenderer(self, *args): ...
    def render(self, *args): ...
    def renderingOverride(self, *args): ...
    def setRenderingOverride(self, *args): ...
    def setUIName(self, *args): ...
    def uninitialize(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kDirect3D : int
    
    kExcludeAll : int
    
    kExcludeCVs : int
    
    kExcludeCameras : int
    
    kExcludeDeformers : int
    
    kExcludeDimensions : int
    
    kExcludeDynamicConstraints : int
    
    kExcludeDynamics : int
    
    kExcludeFluids : int
    
    kExcludeFollicles : int
    
    kExcludeGrid : int
    
    kExcludeHairSystems : int
    
    kExcludeHulls : int
    
    kExcludeIkHandles : int
    
    kExcludeImagePlane : int
    
    kExcludeJoints : int
    
    kExcludeLights : int
    
    kExcludeLocators : int
    
    kExcludeManipulators : int
    
    kExcludeMeshes : int
    
    kExcludeMotionTrails : int
    
    kExcludeNCloths : int
    
    kExcludeNParticles : int
    
    kExcludeNRigids : int
    
    kExcludeNone : int
    
    kExcludeNurbsCurves : int
    
    kExcludeNurbsSurfaces : int
    
    kExcludeParticleInstancers : int
    
    kExcludePivots : int
    
    kExcludePlanes : int
    
    kExcludePluginShapes : int
    
    kExcludeSelectHandles : int
    
    kExcludeStrokes : int
    
    kExcludeSubdivSurfaces : int
    
    kExcludeTextures : int
    
    kNoOverride : int
    
    kOpenGL : int
    
    kOverrideAllDrawing : int
    
    kOverrideThenStandard : int
    
    kOverrideThenUI : int
    
    kSoftware : int


class MVaryingParameterList(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def append(self, *args): ...
    def assign(self, *args): ...
    def getElement(self, *args): ...
    def length(self, *args): ...
    def setElement(self, *args): ...
    def setLength(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MFnRenderPass(OpenMaya.MFnDependencyNode):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def customTokenString(self, *args): ...
    def frameBufferChannels(self, *args): ...
    def frameBufferType(self, *args): ...
    def getImplementation(self, *args): ...
    def passID(self, *args): ...
    def setImplementation(self, *args): ...
    def type(self, *args): ...
    def usesFiltering(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict


class MCommonRenderSettingsData(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def getBufferName(self, *args): ...
    def getImageName(self, *args): ...
    def isAnimated(self, *args): ...
    def isMovieFormat(self, *args): ...
    def setFieldName(self, *args): ...
    def setPassName(self, *args): ...
    def shouldRenderFrameAtTime(self, *args): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def getPostRenderFrameCmd(*args, **kwargs): ...
    @staticmethod
    def getPreRenderFrameCmd(*args, **kwargs): ...
    @property
    def customExt(self): ...
    @customExt.setter
    def customExt(self, value): ...
    @property
    def customImageFormat(self): ...
    @customImageFormat.setter
    def customImageFormat(self, value): ...
    @property
    def deviceAspectRatio(self): ...
    @deviceAspectRatio.setter
    def deviceAspectRatio(self, value): ...
    @property
    def dotPerInch(self): ...
    @dotPerInch.setter
    def dotPerInch(self, value): ...
    @property
    def enableDefaultLight(self): ...
    @enableDefaultLight.setter
    def enableDefaultLight(self, value): ...
    @property
    def frameBy(self): ...
    @frameBy.setter
    def frameBy(self, value): ...
    @property
    def frameEnd(self): ...
    @frameEnd.setter
    def frameEnd(self, value): ...
    @property
    def framePadding(self): ...
    @framePadding.setter
    def framePadding(self, value): ...
    @property
    def frameStart(self): ...
    @frameStart.setter
    def frameStart(self, value): ...
    @property
    def height(self): ...
    @height.setter
    def height(self, value): ...
    @property
    def imageFormat(self): ...
    @imageFormat.setter
    def imageFormat(self, value): ...
    @property
    def name(self): ...
    @name.setter
    def name(self, value): ...
    @property
    def namePattern(self): ...
    @namePattern.setter
    def namePattern(self, value): ...
    @property
    def namingScheme(self): ...
    @namingScheme.setter
    def namingScheme(self, value): ...
    @property
    def pixelAspectRatio(self): ...
    @pixelAspectRatio.setter
    def pixelAspectRatio(self, value): ...
    @property
    def postMel(self): ...
    @postMel.setter
    def postMel(self, value): ...
    @property
    def postRenderLayerMel(self): ...
    @postRenderLayerMel.setter
    def postRenderLayerMel(self, value): ...
    @property
    def postRenderMel(self): ...
    @postRenderMel.setter
    def postRenderMel(self, value): ...
    @property
    def preMel(self): ...
    @preMel.setter
    def preMel(self, value): ...
    @property
    def preRenderLayerMel(self): ...
    @preRenderLayerMel.setter
    def preRenderLayerMel(self, value): ...
    @property
    def preRenderMel(self): ...
    @preRenderMel.setter
    def preRenderMel(self, value): ...
    @property
    def renderAll(self): ...
    @renderAll.setter
    def renderAll(self, value): ...
    @property
    def renumberBy(self): ...
    @renumberBy.setter
    def renumberBy(self, value): ...
    @property
    def renumberFrames(self): ...
    @renumberFrames.setter
    def renumberFrames(self, value): ...
    @property
    def renumberStart(self): ...
    @renumberStart.setter
    def renumberStart(self, value): ...
    @property
    def skipExistingFrames(self): ...
    @skipExistingFrames.setter
    def skipExistingFrames(self, value): ...
    @property
    def useCustomExt(self): ...
    @useCustomExt.setter
    def useCustomExt(self, value): ...
    @property
    def width(self): ...
    @width.setter
    def width(self, value): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kFullPathImage : int
    
    kFullPathTmp : int
    
    kRelativePath : int


class MRenderSetup(_object):
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def getEnabledSelectedNodeNames(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MDrawProcedureBase(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args, **kwargs): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def enabled(self, *args): ...
    def execute(self, *args): ...
    def name(self, *args): ...
    def setEnabled(self, *args): ...
    def setName(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MD3D9Renderer(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def getD3D9Device(self, *args): ...
    def makeSwatchContextCurrent(self, *args): ...
    def readSwatchContextPixels(self, *args): ...
    def setBackgroundColor(self, *args): ...
    @staticmethod
    def theRenderer(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MHwTextureManager(_object):
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    @staticmethod
    def className(*args, **kwargs): ...
    @staticmethod
    def deregisterTextureFile(*args, **kwargs): ...
    @staticmethod
    def glBind(*args, **kwargs): ...
    @staticmethod
    def registerTextureFile(*args, **kwargs): ...
    @staticmethod
    def textureFile(*args, **kwargs): ...
    __dict__ : dictproxy
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor


class MRenderProfile(_object):
    def __del__(self): ...
    def __getattr__(self, name): ...
    def __init__(self, *args): ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name, value): ...
    def addRenderer(self, *args): ...
    def hasRenderer(self, *args): ...
    def numberOfRenderers(self, *args): ...
    __dict__ : dictproxy
    
    __swig_destroy__ : builtin_function_or_method
    
    __swig_getmethods__ : dict
    
    __swig_setmethods__ : dict
    
    __weakref__ : getset_descriptor
    
    kMayaD3D : int
    
    kMayaOpenGL : int
    
    kMayaSoftware : int




def MRenderView_refresh(*args, **kwargs): ...
def MHwrCallback_swigregister(*args, **kwargs): ...
def MGeometryManager_referenceDefaultGeometry(*args, **kwargs): ...
def MRenderSetup_getEnabledSelectedNodeNames(*args, **kwargs): ...
def MRenderUtil_eval2dTexture(*args, **kwargs): ...
def MRenderUtil_noiseTableCubeSide(*args, **kwargs): ...
def charPtr_swigregister(*args, **kwargs): ...
def MRenderUtil_convertPsdFile(*args, **kwargs): ...
def MRenderView_getRenderRegion(*args, **kwargs): ...
def MFnRenderLayer_findLayerByName(*args, **kwargs): ...
def MGeometryManager_swigregister(*args, **kwargs): ...
def shortPtr_frompointer(*args, **kwargs): ...
def MRenderView_updatePixels(*args, **kwargs): ...
def MGLFunctionTable_swigregister(*args, **kwargs): ...
def MRenderUtil_className(*args, **kwargs): ...
def MRenderUtil_sampleShadingNetwork(*args, **kwargs): ...
def MGeometryManager_className(*args, **kwargs): ...
def _swig_getattr(self, class_type, name): ...
def MHwrCallback_addCallback(*args, **kwargs): ...
def uIntPtr_swigregister(*args, **kwargs): ...
def MD3D9Renderer_swigregister(*args, **kwargs): ...
def MRenderUtil_hemisphereCoverage(*args, **kwargs): ...
def MRenderTargetLegacy_swigregister(*args, **kwargs): ...
def MSwatchRenderRegister_unregisterSwatchRender(*args, **kwargs): ...
def _swig_setattr_nondynamic(self, class_type, name, value, static='1'): ...
def MHwTextureManager_className(*args, **kwargs): ...
def uCharPtr_swigregister(*args, **kwargs): ...
def MCommonRenderSettingsData_className(*args, **kwargs): ...
def MRenderUtil_mainBeautyPassName(*args, **kwargs): ...
def MSwatchRenderBase_cancelCurrentSwatchRender(*args, **kwargs): ...
def MCommonRenderSettingsData_swigregister(*args, **kwargs): ...
def MCommonRenderSettingsData_getPreRenderFrameCmd(*args, **kwargs): ...
def MHwTextureManager_registerTextureFile(*args, **kwargs): ...
def boolPtr_swigregister(*args, **kwargs): ...
def MRenderUtil_getCommonRenderSettings(*args, **kwargs): ...
def MGeometryPrimitive_swigregister(*args, **kwargs): ...
def RV_PIXEL_swigregister(*args, **kwargs): ...
def MRenderCallback_removeCallback(*args, **kwargs): ...
def MRenderUtil_exactImagePlaneFileName(*args, **kwargs): ...
def MRenderSetup_className(*args, **kwargs): ...
def _swig_repr(self): ...
def MRenderView_startRender(*args, **kwargs): ...
def MRenderData_swigregister(*args, **kwargs): ...
def MUniformParameterList_swigregister(*args, **kwargs): ...
def MRenderSetupPrivate__switchToLegacyRenderLayer(*args, **kwargs): ...
def MRenderUtil_sendRenderProgressInfo(*args, **kwargs): ...
def MRenderUtil_generatingIprFile(*args, **kwargs): ...
def MCommonRenderSettingsData_getPostRenderFrameCmd(*args, **kwargs): ...
def MFnRenderLayer_className(*args, **kwargs): ...
def RV_AOV_swigregister(*args, **kwargs): ...
def doublePtr_frompointer(*args, **kwargs): ...
def MRenderProfile_swigregister(*args, **kwargs): ...
def MRenderUtil_mayaRenderState(*args, **kwargs): ...
def MRenderUtil_noise4(*args, **kwargs): ...
def boolPtr_frompointer(*args, **kwargs): ...
def MRenderUtil_inCurrentRenderLayer(*args, **kwargs): ...
def MGeometryManager_dereferenceDefaultGeometry(*args, **kwargs): ...
def MFnRenderLayer_listAllRenderLayers(*args, **kwargs): ...
def shortPtr_swigregister(*args, **kwargs): ...
def MGeometryData_swigregister(*args, **kwargs): ...
def MFnRenderLayer_currentLayer(*args, **kwargs): ...
def MRenderView_swigregister(*args, **kwargs): ...
def MRenderView_setDrawTileBoundary(*args, **kwargs): ...
def MRenderUtil_noise1(*args, **kwargs): ...
def MRenderCallback_addRenderTileCallback(*args, **kwargs): ...
def MRenderUtil_raytrace(*args, **kwargs): ...
def MFnImageSource_className(*args, **kwargs): ...
def uCharPtr_frompointer(*args, **kwargs): ...
def MRenderView_startRegionRender(*args, **kwargs): ...
def MGeometryRequirementsLegacy_swigregister(*args, **kwargs): ...
def weakref_proxy(*args, **kwargs):
    """
    proxy(object[, callback]) -- create a proxy object that weakly
    references 'object'.  'callback', if given, is called with a
    reference to the proxy when 'object' is about to be finalized.
    """
    ...
def MVaryingParameter_swigregister(*args, **kwargs): ...
def MRenderCallback_swigregister(*args, **kwargs): ...
def MHardwareRenderer_theRenderer(*args, **kwargs): ...
def MFnRenderPass_swigregister(*args, **kwargs): ...
def MRenderView_setCurrentCamera(*args, **kwargs): ...
def MRenderCallback_addCallback(*args, **kwargs): ...
def intPtr_frompointer(*args, **kwargs): ...
def doublePtr_swigregister(*args, **kwargs): ...
def MRenderView_endRender(*args, **kwargs): ...
def MViewportRenderer_swigregister(*args, **kwargs): ...
def MFnImageSource_swigregister(*args, **kwargs): ...
def MFnRenderLayer_defaultRenderLayer(*args, **kwargs): ...
def _swig_setattr(self, class_type, name, value): ...
def MRenderUtil_diffuseReflectance(*args, **kwargs): ...
def MHwTextureManager_deregisterTextureFile(*args, **kwargs): ...
def MD3D9Renderer_theRenderer(*args, **kwargs): ...
def MHwTextureManager_swigregister(*args, **kwargs): ...
def MRenderSetupPrivate_swigregister(*args, **kwargs): ...
def MRenderUtil_swigregister(*args, **kwargs): ...
def intPtr_swigregister(*args, **kwargs): ...
def MRenderUtil_maximumSpecularReflection(*args, **kwargs): ...
def MSwatchRenderBase_swigregister(*args, **kwargs): ...
def MVaryingParameterList_swigregister(*args, **kwargs): ...
def MLightLinks_swigregister(*args, **kwargs): ...
def MFnRenderPass_className(*args, **kwargs): ...
def MRenderUtil_valueInNoiseTable(*args, **kwargs): ...
def MSwatchRenderBase_enableSwatchRender(*args, **kwargs): ...
def floatPtr_frompointer(*args, **kwargs): ...
def MGeometryList_swigregister(*args, **kwargs): ...
def MRenderUtil_noise2(*args, **kwargs): ...
def MRenderCallback_className(*args, **kwargs): ...
def MGeometryLegacy_swigregister(*args, **kwargs): ...
def MRenderUtil_renderPass(*args, **kwargs): ...
def MUniformParameter_swigregister(*args, **kwargs): ...
def MHwrCallback_removeCallback(*args, **kwargs): ...
def MFnRenderLayer_swigregister(*args, **kwargs): ...
def MRenderUtil_noiseTableSize(*args, **kwargs): ...
def charPtr_frompointer(*args, **kwargs): ...
def uIntPtr_frompointer(*args, **kwargs): ...
def MRenderUtil_exactFileTextureName(*args, **kwargs): ...
def MRenderSetup_swigregister(*args, **kwargs): ...
def MRenderView_doesRenderEditorExist(*args, **kwargs): ...
def MRenderUtil_renderObjectItem(*args, **kwargs): ...
def MRenderUtil_raytraceFirstGeometryIntersections(*args, **kwargs): ...
def MHwTextureManager_textureFile(*args, **kwargs): ...
def MSwatchRenderRegister_swigregister(*args, **kwargs): ...
def MHardwareRenderer_swigregister(*args, **kwargs): ...
def MRenderingInfo_swigregister(*args, **kwargs): ...
def MRenderUtil_lightAttenuation(*args, **kwargs): ...
def MSwatchRenderRegister_registerSwatchRender(*args, **kwargs): ...
def MDrawProcedureBase_swigregister(*args, **kwargs): ...
def MHwTextureManager_glBind(*args, **kwargs): ...
def MRenderView_className(*args, **kwargs): ...
def MRenderSetupPrivate__triggerSelectionChanged(*args, **kwargs): ...
def floatPtr_swigregister(*args, **kwargs): ...
def MGeometryManager_getGeometry(*args, **kwargs): ...
def MRenderUtil_relativeFileName(*args, **kwargs): ...
def MRenderUtil_noise3(*args, **kwargs): ...
def MRenderUtil_mainBeautyPassCustomTokenString(*args, **kwargs): ...
def MRenderSetupPrivate_className(*args, **kwargs): ...
def MRenderShadowData_swigregister(*args, **kwargs): ...


MGL_OP_ROUND_EXT : int
MGL_DSDT_MAG_NV : int
MGL_VARIANT_EXT : int
MGL_LINE_STIPPLE : int
MGL_TEXTURE_COORD_ARRAY_TYPE_EXT : int
kMGLext_NV_vertex_program : int
MGL_OP_FLOOR_EXT : int
MGL_TEXTURE_COMPRESSED : int
MGL_DSDT_NV : int
MGL_TEXTURE_COORD_ARRAY_SIZE_EXT : int
MGL_VERTEX_ARRAY : int
MGL_OP_CLAMP_EXT : int
MGL_HILO_NV : int
MGL_INDEX_ARRAY_COUNT_EXT : int
MGL_OP_SET_LT_EXT : int
MGL_TEXTURE9_ARB : int
MGL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV : int
MGL_INDEX_ARRAY_STRIDE_EXT : int
MGL_VERTEX_WEIGHT_ARRAY_POINTER_EXT : int
MGL_OP_SET_GE_EXT : int
MGL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV : int
kMGLext_multi_draw_arrays : int
MGL_INDEX_ARRAY_TYPE_EXT : int
MGL_OP_MIN_EXT : int
MGL_MATRIX27 : int
MGL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV : int
MGL_COLOR_ARRAY_COUNT_EXT : int
MGL_DOT3_RGB_ARB : int
MGL_PASS_THROUGH_NV : int
MGL_OP_MAX_EXT : int
kMGLext_MGLX_get_visual_from_fbconfig_sgix : int
MGL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV : int
MGL_MATRIX_EXT : int
MGL_COLOR_ARRAY_STRIDE_EXT : int
MGL_OP_FRAC_EXT : int
MGL_TEXTURE_COMPRESSED_IMAGE_SIZE : int
kMGLext_EXT_vertex_shader : int
MGL_DOT_PRODUCT_TEXTURE_3D_NV : int
MGL_COLOR_ARRAY_TYPE_EXT : int
MGL_TEXTURE_BINDING_2D : int
MGL_OP_MADD_EXT : int
MGL_DOT_PRODUCT_TEXTURE_2D_NV : int
MGL_COLOR_ARRAY_SIZE_EXT : int
MGL_OP_ADD_EXT : int
MGL_TEXTURE8_ARB : int
MGL_DOT_PRODUCT_DEPTH_REPLACE_NV : int
MGL_NORMAL_ARRAY_COUNT_EXT : int
MGL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT : int
MGL_OP_MUL_EXT : int
MGL_DOT_PRODUCT_NV : int
MGL_NORMAL_ARRAY_STRIDE_EXT : int
MGL_OP_DOT4_EXT : int
MGL_STENCIL : int
MGL_NORMAL_ARRAY_TYPE_EXT : int
MGL_ACCUM_ALPHA_BITS : int
MGL_OP_DOT3_EXT : int
MGL_LUMINANCE16_ALPHA16 : int
MGL_TRANSFORM_FEEDBACK_BUFFER_NV : int
MGL_VERTEX_ARRAY_COUNT_EXT : int
MGL_OP_NEGATE_EXT : int
MGL_TEXTURE_COMPRESSION_HINT : int
MGL_LUMINANCE12_ALPHA12 : int
MGL_VERTEX_ARRAY_STRIDE_EXT : int
MGL_TEXTURE_BINDING_1D : int
MGL_OP_INDEX_EXT : int
MGL_LUMINANCE12_ALPHA4 : int
MGL_VERTEX_ARRAY_TYPE_EXT : int
MGL_VERTEX_SHADER_BINDING_EXT : int
MGL_DRAW_FRAMEBUFFER : int
MGL_LUMINANCE8_ALPHA8 : int
kMGLext_convolution : int
MGL_VERTEX_WEIGHT_ARRAY_TYPE_EXT : int
MGL_TRANSFORM_FEEDBACK_BUFFER_START_EXT : int
MGL_VERTEX_SHADER_EXT : int
MGL_LUMINANCE6_ALPHA2 : int
MGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB : int
MGL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI : int
MGL_MATRIX25 : int
MGL_LUMINANCE4_ALPHA4 : int
MGL_MATRIX4_NV : int
MGL_PREVIOUS_TEXTURE_INPUT_NV : int
MGL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI : int
MGL_TRANSPOSE_COLOR_MATRIX : int
MGL_LUMINANCE16 : int
MGL_VERTEX_ATTRIB_ARRAY_TYPE : int
MGL_SCALAR_EXT : int
MGL_MATRIX3_NV : int
MGL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI : int
MGL_COMPRESSED_RGBA : int
MGL_LUMINANCE12 : int
MGL_TEXTURE_HI_SIZE_NV : int
MGL_MATRIX2_NV : int
MGL_TEXTURE_RESIDENT : int
kMGLext_EXT_texture_filter_anisotropic : int
MGL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI : int
MGL_LUMINANCE8 : int
MGL_MATRIX1_NV : int
MGL_PN_TRIANGLES_TESSELATION_LEVEL_ATI : int
MGL_VERTEX_ATTRIB_ARRAY_ENABLED : int
MGL_READ_FRAMEBUFFER : int
MGL_LUMINANCE4 : int
MGL_MATRIX0_NV : int
MGL_VERTEX_WEIGHT_ARRAY_SIZE_EXT : int
MGL_ALPHA16 : int
MGL_MAX_TRACK_MATRICES_NV : int
MGL_EXPAND_NORMAL_NV : int
MGL_BLEND_COLOR_EXT : int
MGL_ALPHA12 : int
MGL_MAX_TRACK_MATRIX_STACK_DEPTH_NV : int
MGL_OFFSET_TEXTURE_2D_BIAS_NV : int
MGL_UNSIGNED_INVERT_NV : int
MGL_ALPHA8 : int
MGL_PACK_ALIGNMENT : int
MGL_INVERSE_TRANSPOSE_NV : int
MGL_UNSIGNED_IDENTITY_NV : int
kMGLext_WMGL_ARB_pixel_format : int
MGL_TEXTURE_COORD_ARRAY_STRIDE : int
MGL_ALPHA4 : int
MGL_TRANSPOSE_NV : int
MGL_UNPACK_SKIP_IMAGES : int
MGL_SPARE0_PLUS_SECONDARY_COLOR_NV : int
MGL_TEXTURE_DEPTH : int
MGL_POLYGON_OFFSET_FILL : int
MGL_INVERSE_NV : int
MGL_E_TIMES_F_NV : int
MGL_COMBINE_EXT : int
MGL_TEXTURE5_ARB : int
MGL_POLYGON_OFFSET_LINE : int
MGL_IDENTITY_NV : int
MGL_VERTEX_WEIGHT_ARRAY_EXT : int
MGL_DISCARD_NV : int
kMGLext_SGIX_depth_texture : int
MGL_POLYGON_OFFSET_POINT : int
MGL_MODELVIEW_PROJECTION_NV : int
MGL_SPARE1_NV : int
MGL_POLYGON_OFFSET_UNITS : int
MGL_PROGRAM_STRING_NV : int
MGL_ACCUM_RED_BITS : int
MGL_SPARE0_NV : int
MGL_POLYGON_OFFSET_FACTOR : int
MGL_MAP_COLOR : int
MGL_PROGRAM_LENGTH_NV : int
kMGLext_NV_vertex_array_range : int
MGL_SECONDARY_COLOR_NV : int
MGL_TEXTURE_COORD_ARRAY_TYPE : int
MGL_REPEAT : int
MGL_CURRENT_ATTRIB_NV : int
MGL_PACK_IMAGE_HEIGHT_EXT : int
MGL_PRIMARY_COLOR_NV : int
MGL_CLAMP : int
MGL_ATTRIB_ARRAY_TYPE_NV : int
kMGLext_WMGL_ARB_pbuffer : int
MGL_OUTPUT_TEXTURE_COORD27_EXT : int
MGL_CONSTANT_COLOR1_NV : int
MGL_SECONDARY_COLOR_ARRAY_STRIDE_EXT : int
MGL_CLIENT_ACTIVE_TEXTURE_ARB : int
MGL_ATTRIB_ARRAY_STRIDE_NV : int
MGL_FLOAT_R16_NV : int
MGL_CONSTANT_COLOR0_NV : int
MGL_UNPACK_SWAP_BYTES : int
MGL_ACTIVE_TEXTURE_ARB : int
kMGLext_transpose_matrix : int
MGL_ATTRIB_ARRAY_SIZE_NV : int
MGL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV : int
MGL_VARIABLE_G_NV : int
MGL_FOG_START : int
MGL_TEXTURE31_ARB : int
MGL_SOURCE0_RGB_EXT : int
MGL_OFFSET_TEXTURE_2D_MATRIX_NV : int
MGL_VARIABLE_F_NV : int
kMGLext_MGLX_create_context_with_config_sgix : int
MGL_TEXTURE30_ARB : int
MGL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV : int
MGL_VERTEX_PROGRAM_NV : int
MGL_VARIABLE_E_NV : int
MGL_TEXTURE_COORD_ARRAY_SIZE : int
MGL_LINEAR_MIPMAP_LINEAR : int
MGL_OPERAND3_ALPHA_NV : int
MGL_PACK_IMAGE_HEIGHT : int
MGL_VARIABLE_D_NV : int
MGL_NEAREST_MIPMAP_LINEAR : int
MGL_COLOR_ATTACHMENT4 : int
MGL_OPERAND3_RGB_NV : int
MGL_VARIABLE_C_NV : int
MGL_SECONDARY_COLOR_ARRAY_TYPE_EXT : int
MGL_LINEAR_MIPMAP_NEAREST : int
MGL_CURRENT_SECONDARY_COLOR_EXT : int
kMGLext_texture_env_combine : int
MGL_SOURCE3_ALPHA_NV : int
MGL_MODELVIEW1_EXT : int
MGL_VARIABLE_B_NV : int
MGL_NEAREST_MIPMAP_NEAREST : int
MGL_SOURCE3_RGB_NV : int
MGL_VARIABLE_A_NV : int
MGL_MODELVIEW : int
MGL_LINEAR : int
MGL_COMBINE4_NV : int
MGL_CURRENT_VERTEX_EXT : int
MGL_REGISTER_COMBINERS_NV : int
MGL_NEAREST : int
MGL_INDEX_SHIFT : int
MGL_OPERAND2_ALPHA_EXT : int
MGL_VERTEX_ATTRIB_ARRAY9_NV : int
MGL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV : int
MGL_INDEX_ARRAY_STRIDE : int
MGL_EYE_PLANE : int
MGL_OPERAND1_ALPHA_EXT : int
MGL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE : int
MGL_VERTEX_ARRAY_RANGE_POINTER_NV : int
MGL_OBJECT_PLANE : int
MGL_COLOR_MATERIAL : int
MGL_OPERAND0_ALPHA_EXT : int
MGL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV : int
MGL_LIGHT5 : int
MGL_TEXTURE21_ARB : int
kMGLext_color_table : int
MGL_DEPTH_RANGE : int
MGL_READ_WRITE_ARB : int
MGL_TRANSFORM_FEEDBACK_VARYINGS_EXT : int
MGL_VERTEX_ARRAY_RANGE_VALID_NV : int
MGL_TEXTURE20_ARB : int
MGL_DEPTH_TEST : int
MGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB : int
MGL_VERTEX_ARRAY_RANGE_LENGTH_NV : int
MGL_COLOR_INDEXES : int
MGL_OBJECT_LINEAR : int
MGL_OPERAND0_RGB_EXT : int
MGL_FULL_RANGE_EXT : int
MGL_VERTEX_ARRAY_RANGE_NV : int
MGL_TRANSPOSE_TEXTURE_MATRIX : int
MGL_TEXTURE18_ARB : int
MGL_INDEX_OFFSET : int
MGL_SOURCE2_ALPHA_EXT : int
MGL_CLIP_PLANE3 : int
MGL_FIXED_ONLY : int
MGL_COMPRESSED_ALPHA : int
MGL_TEXTURE17_ARB : int
MGL_TEXTURE_BORDER_VALUES_NV : int
MGL_SOURCE1_ALPHA_EXT : int
MGL_RENDERBUFFER_BINDING : int
MGL_CLAMP_READ_COLOR : int
MGL_TEXTURE16_ARB : int
MGL_COLOR_ATTACHMENT2 : int
MGL_SOURCE0_ALPHA_EXT : int
MGL_CLAMP_FRAGMENT_COLOR : int
MGL_TEXTURE1_ARB : int
MGL_TEXTURE15_ARB : int
MGL_NEVER : int
MGL_COLOR_LOGIC_OP : int
MGL_VERTEX_WEIGHTING_EXT : int
MGL_ZOOM_X : int
MGL_CLAMP_VERTEX_COLOR : int
MGL_DECAL : int
MGL_SOURCE1_RGB_EXT : int
MGL_RGBA_FLOAT_MODE : int
MGL_CONSTANT_ALPHA : int
MGL_TEXTURE13_ARB : int
MGL_FOG_MODE : int
MGL_DRAW_BUFFER : int
MGL_MAX_RECTANGLE_TEXTURE_SIZE : int
MGL_GREATER : int
MGL_TEXTURE12_ARB : int
MGL_PRIMITIVES_GENERATED_NV : int
MGL_PREVIOUS_EXT : int
MGL_PROXY_TEXTURE_RECTANGLE : int
MGL_MAX_CUBE_MAP_TEXTURE_SIZE : int
MGL_TEXTURE11_ARB : int
MGL_TEXTURE_2D : int
MGL_PRIMARY_COLOR_EXT : int
MGL_RESCALE_NORMAL_EXT : int
MGL_TEXTURE_BINDING_RECTANGLE : int
MGL_PROXY_TEXTURE_3D_EXT : int
MGL_MAX_NAME_STACK_DEPTH : int
MGL_TEXTURE10_ARB : int
MGL_ACCUM_CLEAR_VALUE : int
MGL_CONSTANT_EXT : int
MGL_TEXTURE_RECTANGLE : int
MGL_TEXTURE0_ARB : int
MGL_TEXTURE24 : int
MGL_INTERPOLATE_EXT : int
MGL_MODELVIEW_MATRIX1_EXT : int
MGL_LUMINANCE_ALPHA16F : int
kMGLext_ARB_shadow_ambient : int
MGL_TEXTURE23 : int
MGL_TEXTURE_GEN_R : int
MGL_LUMINANCE16F : int
MGL_ONE_MINUS_CONSTANT_COLOR_EXT : int
MGL_TEXTURE22 : int
MGL_FUNC_ADD : int
MGL_READ_BUFFER : int
kMGLext_SGIS_generate_mipmap : int
MGL_INTENSITY16F : int
MGL_TEXTURE21 : int
MGL_OUTPUT_TEXTURE_COORD26_EXT : int
MGL_PROJECTION_MATRIX : int
MGL_ALPHA16F : int
MGL_COLOR_ARRAY_TYPE : int
MGL_TEXTURE20 : int
MGL_LINE_SMOOTH_HINT : int
MGL_BLEND_COLOR : int
MGL_UNSIGNED_INT_10_10_10_2_EXT : int
MGL_RGB16F : int
kMGLext_NV_texture_shader : int
MGL_TEXTURE19 : int
MGL_DEPTH_FUNC : int
MGL_ONE_MINUS_CONSTANT_ALPHA_EXT : int
MGL_RGBA16F : int
MGL_LIGHT2 : int
MGL_TEXTURE18 : int
MGL_ONE_MINUS_CONSTANT_ALPHA : int
MGL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI : int
MGL_UNPACK_LSB_FIRST : int
MGL_TEXTURE17 : int
MGL_POLYGON_STIPPLE_BIT : int
MGL_CONSTANT_ALPHA_EXT : int
MGL_PROGRAM_ERROR_POSITION : int
MGL_MATRIX17 : int
MGL_TEXTURE16 : int
MGL_FOG_HINT : int
MGL_ONE_EXT : int
MGL_PROGRAM_STRING : int
kMGLext_MGLX_choose_fbconfig_sgix : int
MGL_TEXTURE15 : int
MGL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV : int
MGL_FRAGMENT_PROGRAM_BINDING_NV : int
MGL_POLYGON_SMOOTH_HINT : int
MGL_TEXTURE_COORD_ARRAY_EXT : int
MGL_DEPTH_BITS : int
MGL_TEXTURE14 : int
MGL_ONE_MINUS_CONSTANT_COLOR : int
MGL_UNSIGNED_INT_8_8_8_8_EXT : int
MGL_MAX_PROGRAM_ENV_PARAMETERS : int
MGL_TEXTURE_MATRIX : int
MGL_TEXTURE13 : int
MGL_DEPTH_CLEAR_VALUE : int
MGL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI : int
MGL_POINT_SMOOTH_HINT : int
MGL_MAX_PROGRAM_LOCAL_PARAMETERS : int
kMGLext_ARB_fragment_program_shadow : int
MGL_SECONDARY_COLOR_ARRAY_POINTER_EXT : int
MGL_TEXTURE12 : int
MGL_COLOR_SUM_EXT : int
MGL_PERSPECTIVE_CORRECTION_HINT : int
MGL_RGBA_FLOAT_MODE_ATI : int
MGL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS : int
MGL_TEXTURE_GREEN_TYPE : int
MGL_TEXTURE11 : int
MGL_RENDER_MODE : int
MGL_MATRIX19 : int
MGL_INVARIANT_DATATYPE_EXT : int
MGL_PROGRAM_NATIVE_ADDRESS_REGISTERS : int
MGL_CONSTANT_COLOR_EXT : int
MGL_TEXTURE10 : int
MGL_MODELVIEW_STACK_DEPTH : int
MGL_ZERO_EXT : int
MGL_MAX_PROGRAM_ADDRESS_REGISTERS : int
MGL_TEXTURE9 : int
MGL_PIXEL_MAP_I_TO_I : int
MGL_TRANSFORM_FEEDBACK_BUFFER_START_NV : int
MGL_PROJECTION_STACK_DEPTH : int
MGL_PROGRAM_ADDRESS_REGISTERS : int
MGL_FENCE_CONDITION_NV : int
MGL_TEXTURE8 : int
MGL_DOT3_RGB : int
MGL_UNSIGNED_SHORT_5_5_5_1_EXT : int
MGL_MAX_PROGRAM_NATIVE_ATTRIBS : int
MGL_TEXTURE7 : int
MGL_DEPTH_WRITEMASK : int
MGL_PREVIOUS : int
MGL_PROGRAM_NATIVE_ATTRIBS : int
MGL_ACCUM : int
MGL_BLUE_BIAS : int
MGL_TEXTURE6 : int
kMGLext_color_matrix : int
MGL_PRIMARY_COLOR : int
MGL_BLUE_BITS : int
MGL_MAX_PROGRAM_ATTRIBS : int
MGL_TEXTURE5 : int
MGL_CONSTANT : int
MGL_TEXTURE_BINDING_CUBE_MAP_ARB : int
MGL_ALPHA_TEST : int
MGL_TEXTURE4 : int
MGL_SUBTRACT : int
MGL_INDEX_CLEAR_VALUE : int
MGL_MAX_PROGRAM_NATIVE_PARAMETERS : int
MGL_TRANSPOSE_PROJECTION_MATRIX : int
MGL_TEXTURE3 : int
MGL_OUTPUT_TEXTURE_COORD23_EXT : int
MGL_INTERPOLATE : int
MGL_MAX_VERTEX_ATTRIBS : int
MGL_INDEX_LOGIC_OP : int
MGL_TEXTURE_CUBE_MAP_NEGATIVE_Y : int
MGL_TEXTURE2 : int
MGL_VIBRANCE_BIAS_NV : int
MGL_ADD_SIGNED : int
MGL_DEPTH_COMPONENT : int
MGL_UNSIGNED_SHORT_4_4_4_4_EXT : int
MGL_LOGIC_OP_MODE : int
kMGLext_EXT_vertex_weighting : int
MGL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER : int
MGL_TEXTURE_FREE_MEMORY_ATI : int
MGL_RGB_SCALE : int
MGL_BLEND : int
MGL_NICEST : int
MGL_FLOAT_VEC2_ARB : int
MGL_TEXTURE0 : int
MGL_OPERAND2_ALPHA : int
MGL_MATRIX30 : int
MGL_MIRROR_CLAMP_ATI : int
MGL_MAX_PROGRAM_NATIVE_TEMPORARIES : int
MGL_TEXTURE_COMPONENTS : int
MGL_OPERAND1_ALPHA : int
MGL_BLEND_DST : int
MGL_ABGR_EXT : int
MGL_LOGIC_OP : int
MGL_SECONDARY_COLOR_ARRAY_EXT : int
MGL_OPERAND0_ALPHA : int
MGL_CLIENT_ATTRIB_STACK_DEPTH : int
MGL_MAP1_VERTEX_ATTRIB3_4_NV : int
MGL_DITHER : int
MGL_PROGRAM_UNDER_NATIVE_LIMITS : int
MGL_NUM_FRAGMENT_CONSTANTS_ATI : int
MGL_GENERATE_MIPMAP_SGIS : int
MGL_GREEN_BIAS : int
MGL_OPERAND2_RGB : int
MGL_PROGRAM_TEMPORARIES : int
MGL_VERTEX_ARRAY_STRIDE : int
kMGLext_WMGL_ARB_buffer_region : int
MGL_OCCLUSION_TEST_RESULT_HP : int
MGL_OPERAND1_RGB : int
MGL_VERTEX_ATTRIB_ARRAY_STRIDE : int
MGL_UNSIGNED_BYTE_3_3_2_EXT : int
MGL_MAX_PROGRAM_NATIVE_INSTRUCTIONS : int
MGL_OCCLUSION_TEST_HP : int
MGL_ONE_MINUS_SRC_ALPHA : int
MGL_OPERAND0_RGB : int
MGL_TRANSFORM_FEEDBACK_BUFFER_EXT : int
MGL_COLOR_WRITEMASK : int
MGL_CURRENT_FOG_COORDINATE_EXT : int
MGL_FOG_SPECULAR_TEXTURE_WIN : int
MGL_SOURCE2_ALPHA : int
MGL_TEXTURE_MAG_SIZE_NV : int
MGL_COLOR_CLEAR_VALUE : int
MGL_PHONG_HINT_WIN : int
kMGLext_SGIX_shadow : int
MGL_FRONT_LEFT : int
MGL_INDEX_WRITEMASK : int
MGL_CLAMP_TO_EDGE : int
MGL_PHONG_WIN : int
MGL_SOURCE0_ALPHA : int
MGL_PROGRAM_BINDING : int
MGL_COLOR_INDEX16_EXT : int
MGL_MAP1_VERTEX_ATTRIB9_4_NV : int
MGL_DOUBLE : int
MGL_LIST_MODE : int
MGL_STENCIL_PASS_DEPTH_PASS : int
kMGLext_NV_register_combiners : int
kMGLext_MGLX_create_new_context : int
MGL_COLOR_INDEX12_EXT : int
MGL_4_BYTES : int
MGL_OBJECT_ACTIVE_ATTRIBUTES_ARB : int
MGL_STENCIL_PASS_DEPTH_FAIL : int
MGL_COLOR_INDEX8_EXT : int
MGL_DST_ALPHA : int
MGL_3_BYTES : int
MGL_STENCIL_FAIL : int
MGL_FRAGMENT_DEPTH_EXT : int
MGL_COLOR_INDEX4_EXT : int
MGL_COMBINE_ALPHA : int
MGL_MAX_TEXTURE_IMAGE_UNITS_ARB : int
MGL_STENCIL_VALUE_MASK : int
MGL_UNPACK_ROW_LENGTH : int
MGL_COLOR_INDEX2_EXT : int
MGL_VERTEX_ARRAY_SIZE_EXT : int
kMGLext_texture_env_dot3 : int
MGL_FLOAT : int
MGL_TRANSFORM_FEEDBACK_RECORD_NV : int
MGL_STENCIL_FUNC : int
MGL_RGBA32F : int
MGL_COMBINE : int
MGL_COPY_PIXEL_TOKEN : int
MGL_TEXTURE_COMPRESSED_ARB : int
MGL_STENCIL_CLEAR_VALUE : int
kMGLext_MGLX_create_pbuffer_sgix : int
MGL_PN_TRIANGLES_NORMAL_MODE_ATI : int
MGL_LINE_SMOOTH : int
MGL_CLAMP_TO_BORDER_SGIS : int
MGL_STENCIL_TEST : int
MGL_TEXTURE_CUBE_MAP_POSITIVE_X : int
MGL_ALPHA_BITS : int
MGL_PN_TRIANGLES_POINT_MODE_ATI : int
MGL_CLAMP_TO_BORDER : int
MGL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB : int
MGL_PIXEL_MAP_S_TO_S : int
MGL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI : int
MGL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS : int
MGL_COMPRESSED_TEXTURE_FORMATS : int
MGL_STEREO : int
kMGLext_ARB_color_buffer_float : int
MGL_PN_TRIANGLES_ATI : int
MGL_NUM_COMPRESSED_TEXTURE_FORMATS : int
MGL_SUBPIXEL_BITS : int
MGL_DOUBLEBUFFER : int
MGL_QUERY_RESULT_AVAILABLE_ARB : int
MGL_4D_COLOR_TEXTURE : int
MGL_INVARIANT_VALUE_EXT : int
MGL_COLOR_SUM : int
MGL_TEXTURE_STACK_DEPTH : int
MGL_QUERY_RESULT_ARB : int
MGL_3D_COLOR_TEXTURE : int
MGL_ZOOM_Y : int
MGL_W_EXT : int
MGL_PIXEL_MAP_A_TO_A : int
MGL_CURRENT_QUERY_ARB : int
MGL_MAP1_VERTEX_ATTRIB7_4_NV : int
MGL_3D_COLOR : int
MGL_PIXEL_MAP_B_TO_B : int
MGL_PROGRAM_NATIVE_PARAMETERS : int
MGL_SAMPLES_PASSED_ARB : int
MGL_REG_4_ATI : int
MGL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB : int
MGL_PIXEL_MAP_G_TO_G : int
MGL_PIXEL_COUNTER_BITS_ARB : int
MGL_DST_COLOR : int
MGL_2D : int
MGL_PIXEL_MAP_R_TO_R : int
MGL_PIXEL_COUNT_AVAILABLE_NV : int
MGL_VERTEX_ARRAY_TYPE : int
kMGLext_histogram : int
MGL_REG_2_ATI : int
MGL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB : int
MGL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT : int
MGL_PIXEL_MAP_I_TO_A : int
MGL_VERTEX_ATTRIB_ARRAY4_NV : int
MGL_PIXEL_COUNT_NV : int
MGL_REG_1_ATI : int
MGL_TEXTURE_CUBE_MAP_ARB : int
MGL_TEXTURE_DEPTH_TYPE : int
MGL_CURRENT_OCCLUSION_QUERY_ID_NV : int
MGL_LEQUAL : int
MGL_Z_EXT : int
MGL_PIXEL_MAP_I_TO_G : int
MGL_TRANSPOSE_MODELVIEW_MATRIX : int
MGL_PIXEL_COUNTER_BITS_NV : int
MGL_OUTPUT_TEXTURE_COORD18_EXT : int
MGL_BYTE : int
MGL_PIXEL_MAP_I_TO_R : int
MGL_TEXTURE_CUBE_MAP : int
MGL_FLOAT_RGBA_MODE_NV : int
MGL_LOCAL_CONSTANT_DATATYPE_EXT : int
MGL_MAX_VARYING_FLOATS_ARB : int
MGL_CLIP_PLANE5 : int
kMGLext_EXT_fog_coord : int
MGL_FLOAT_CLEAR_COLOR_VALUE_NV : int
MGL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT : int
MGL_LOCAL_CONSTANT_VALUE_EXT : int
MGL_CLIP_PLANE4 : int
MGL_VERTEX_PROGRAM_TWO_SIDE : int
MGL_TEXTURE_FLOAT_COMPONENTS_NV : int
MGL_POINT_TOKEN : int
MGL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB : int
MGL_COLOR_ARRAY : int
MGL_FLOAT_RGBA32_NV : int
MGL_COLOR_BUFFER_BIT : int
MGL_NORMAL_ARRAY : int
MGL_TEXTURE_INTENSITY_TYPE : int
MGL_COMPRESSED_ALPHA_ARB : int
MGL_ENABLE_BIT : int
MGL_Y_EXT : int
MGL_CLIP_PLANE1 : int
MGL_FLOAT_RGB32_NV : int
MGL_MAP1_VERTEX_ATTRIB5_4_NV : int
MGL_TRANSFORM_BIT : int
kMGLext_WMGL_NV_allocate_memory : int
MGL_CLIP_PLANE0 : int
MGL_COMBINE_RGB_EXT : int
kMGLext_WMGL_ARB_extensions_string : int
MGL_FLOAT_RGB16_NV : int
MGL_VARIANT_ARRAY_TYPE_EXT : int
MGL_BLEND_EQUATION_EXT : int
MGL_SRC_ALPHA_SATURATE : int
MGL_TEXTURE_3D_EXT : int
MGL_FLOAT_RG32_NV : int
MGL_STENCIL_BUFFER_BIT : int
MGL_FOG_INDEX : int
MGL_FLOAT_RG16_NV : int
MGL_MAX_TEXTURE_STACK_DEPTH : int
MGL_TEXTURE_PRIORITY : int
MGL_FLOAT_R32_NV : int
MGL_ALWAYS : int
MGL_TEXTURE_2D_BINDING : int
MGL_TEXTURE_LUMINANCE_TYPE : int
MGL_CURRENT_VERTEX_WEIGHT_EXT : int
MGL_GEQUAL : int
MGL_X_EXT : int
MGL_TEXTURE_1D_BINDING : int
MGL_FLOAT_RGBA_NV : int
MGL_MAP1_VERTEX_ATTRIB4_4_NV : int
MGL_FOG_COLOR : int
MGL_POINT : int
MGL_PROXY_TEXTURE_2D : int
kMGLext_NV_fence : int
MGL_PROGRAM_ATTRIBS : int
MGL_FLOAT_RGB_NV : int
MGL_AUX_BUFFERS : int
MGL_VERTEX_SHADER_ARB : int
MGL_PROXY_TEXTURE_1D : int
MGL_PROGRAM_FORMAT : int
MGL_FLOAT_RG_NV : int
MGL_NORMALIZED_RANGE_EXT : int
MGL_TEXTURE_INTENSITY_SIZE : int
MGL_FLOAT_R_NV : int
MGL_NEGATIVE_ONE_EXT : int
MGL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB : int
MGL_TEXTURE_LUMINANCE_SIZE : int
MGL_MODELVIEW0_MATRIX_EXT : int
MGL_SCISSOR_BOX : int
MGL_TEXTURE_ALPHA_SIZE : int
MGL_TEXTURE_ALPHA_TYPE : int
MGL_MODELVIEW1_STACK_DEPTH_EXT : int
MGL_SCISSOR_TEST : int
MGL_VERTEX_SHADER_OPTIMIZED_EXT : int
MGL_TEXTURE_IMAGE_SIZE_ARB : int
MGL_TEXTURE_BLUE_SIZE : int
kMGLext_MGLX_destroy_pbuffer : int
MGL_MIRROR_CLAMP_TO_EDGE_ATI : int
MGL_OUTPUT_TEXTURE_COORD15_EXT : int
MGL_NEGATIVE_W_EXT : int
MGL_TEXTURE_GREEN_SIZE : int
MGL_EMBOSS_MAP_NV : int
MGL_MAX_TEXTURE_MAX_ANISOTROPY_EXT : int
MGL_NEGATIVE_Z_EXT : int
MGL_FLOAT_MAT4_ARB : int
MGL_TEXTURE_RED_SIZE : int
MGL_RED_BITS : int
MGL_NEGATIVE_Y_EXT : int
MGL_RGBA16 : int
kMGLext_ARB_texture_float : int
MGL_INDEX_BITS : int
MGL_FOG_COORDINATE_ARRAY_POINTER_EXT : int
MGL_NEGATIVE_X_EXT : int
MGL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB : int
MGL_RGBA12 : int
MGL_TEXTURE_CUBE_MAP_NEGATIVE_Z : int
MGL_MAX_TEXTURE_COORDS_ARB : int
MGL_TEXTURE2_ARB : int
MGL_LINE_RESET_TOKEN : int
MGL_VARIANT_ARRAY_POINTER_EXT : int
MGL_RGB10_A2 : int
MGL_TEXTURE_BLUE_TYPE : int
MGL_TEXTURE_MAG_FILTER : int
MGL_MAX_CLIENT_ATTRIB_STACK_DEPTH : int
MGL_EXP : int
MGL_VERTEX_SHADER_LOCALS_EXT : int
MGL_RGBA8 : int
MGL_MAX_VIEWPORT_DIMS : int
MGL_MAP1_VERTEX_ATTRIB2_4_NV : int
MGL_EXP2 : int
MGL_RGB5_A1 : int
MGL_VERTEX_ATTRIB_ARRAY6_NV : int
MGL_SAMPLE_COVERAGE_INVERT : int
MGL_TRACK_MATRIX_TRANSFORM_NV : int
MGL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB : int
MGL_CW : int
MGL_FLOAT_MAT3_ARB : int
MGL_RGBA4 : int
MGL_MAX_PROJECTION_STACK_DEPTH : int
MGL_CCW : int
MGL_RGBA2 : int
MGL_MAGNITUDE_BIAS_NV : int
kMGLext_blend_subtract : int
MGL_COEFF : int
MGL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB : int
MGL_RGB16 : int
MGL_MAX_MODELVIEW_STACK_DEPTH : int
MGL_ORDER : int
MGL_RGB12 : int
MGL_TEXTURE_BORDER : int
MGL_MAX_ATTRIB_STACK_DEPTH : int
MGL_VIEWPORT_BIT : int
MGL_DOMAIN : int
MGL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT : int
MGL_RGB10 : int
MGL_MAX_PIXEL_MAP_TABLE : int
MGL_MAP1_VERTEX_ATTRIB1_4_NV : int
MGL_CURRENT_COLOR : int
MGL_TRANSPOSE_CURRENT_MATRIX : int
MGL_RGB8 : int
MGL_MAX_PROGRAM_PARAMETERS : int
MGL_MAX_TEXTURE_SIZE : int
MGL_DT_BIAS_NV : int
MGL_CURRENT_INDEX : int
MGL_MIN_EXT : int
MGL_RGB5 : int
kMGLext_EXT_secondary_color : int
MGL_SWIZZLE_STR_DR_ATI : int
MGL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT : int
MGL_RGB4 : int
MGL_TEXTURE1 : int
MGL_VERTEX_PROGRAM_POINT_SIZE : int
MGL_PROGRAM_TEX_INSTRUCTIONS_ARB : int
MGL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT : int
MGL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB : int
MGL_R3_G3_B2 : int
MGL_OUTPUT_TEXTURE_COORD12_EXT : int
MGL_MAX_EVAL_ORDER : int
MGL_CURRENT_RASTER_COLOR : int
MGL_INTENSITY16 : int
MGL_TEXTURE_BORDER_COLOR : int
MGL_DEPTH_BIAS : int
kMGLext_NV_float_buffer : int
MGL_OBJECT_COMPILE_STATUS_ARB : int
MGL_VERTEX_SHADER_INVARIANTS_EXT : int
MGL_INTENSITY12 : int
MGL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV : int
MGL_MAX_LIST_NESTING : int
MGL_OBJECT_DELETE_STATUS_ARB : int
MGL_INTENSITY8 : int
MGL_PRIMITIVE_RESTART_INDEX_NV : int
kMGLext_texture_array : int
MGL_ALPHA_BIAS : int
MGL_CURRENT_RASTER_POSITION : int
MGL_BOOL_VEC4_ARB : int
MGL_INTENSITY4 : int
MGL_NUM_INSTRUCTIONS_TOTAL_ATI : int
MGL_ACCUM_BUFFER_BIT : int
MGL_OBJECT_TYPE_ARB : int
MGL_INTERLEAVED_ATTRIBS_EXT : int
MGL_INTENSITY : int
MGL_MAX_TEXTURE_IMAGE_UNITS_NV : int
MGL_PROGRAM_OBJECT_ARB : int
MGL_BACK_RIGHT : int
MGL_SWIZZLE_STRQ_ATI : int
MGL_TEXTURE_RED_TYPE : int
MGL_PIXEL_MAP_S_TO_S_SIZE : int
MGL_MODELVIEW0_STACK_DEPTH_EXT : int
MGL_POINT_SMOOTH : int
MGL_RENDERBUFFER_STENCIL_SIZE : int
MGL_MATRIX3 : int
MGL_SAMPLE_COVERAGE_VALUE : int
MGL_FRAGMENT_PROGRAM_NV : int
MGL_POINT_SIZE : int
MGL_VERTEX_SHADER_VARIANTS_EXT : int
MGL_RENDERBUFFER_DEPTH_SIZE : int
MGL_PIXEL_MAP_I_TO_G_SIZE : int
MGL_LIST_BASE : int
MGL_POINT_SIZE_RANGE : int
MGL_RENDERBUFFER_ALPHA_SIZE : int
kMGLext_ATI_texture_mirror_once : int
MGL_PRIMITIVE_RESTART_NV : int
MGL_PIXEL_MAP_I_TO_B_SIZE : int
MGL_POINT_SIZE_GRANULARITY : int
MGL_BOOL_VEC3_ARB : int
MGL_RENDERBUFFER_BLUE_SIZE : int
MGL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX : int
MGL_SOURCE1_RGB : int
MGL_RENDERBUFFER_GREEN_SIZE : int
MGL_PIXEL_MAP_R_TO_R_SIZE : int
MGL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX : int
MGL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB : int
MGL_RENDERBUFFER_RED_SIZE : int
MGL_POLYGON : int
MGL_UNPACK_SKIP_PIXELS : int
MGL_REG_31_ATI : int
MGL_STACK_UNDERFLOW : int
MGL_MATRIX2 : int
MGL_LERP_ATI : int
MGL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX : int
MGL_VERTEX_SHADER_INSTRUCTIONS_EXT : int
MGL_TEXTURE_COMPRESSION_HINT_ARB : int
MGL_STENCIL_INDEX8 : int
kMGLext_MGLX_destroy_window : int
MGL_PIXEL_MAP_A_TO_A_SIZE : int
MGL_OUTPUT_TEXTURE_COORD10_EXT : int
MGL_TEXTURE_INTERNAL_FORMAT : int
MGL_INVALID_OPERATION : int
MGL_STENCIL_INDEX4 : int
MGL_PROGRAM_NATIVE_TEMPORARIES : int
MGL_GREEN_BITS : int
MGL_DOT4_ATI : int
MGL_INVALID_VALUE : int
MGL_STENCIL_INDEX1 : int
MGL_DOT3_ATI : int
MGL_NUM_PASSES_ATI : int
MGL_SEPARATE_ATTRIBS_EXT : int
MGL_INTENSITY32F : int
MGL_RENDERBUFFER_INTERNAL_FORMAT : int
kMGLext_ARB_half_float_pixel : int
MGL_SUB_ATI : int
MGL_FOG_COORDINATE_ARRAY_STRIDE_EXT : int
MGL_2_BYTES : int
MGL_AUX3 : int
MGL_PROGRAM_TEX_INDIRECTIONS_ARB : int
MGL_RENDERBUFFER_HEIGHT : int
MGL_TEXTURE_CUBE_MAP_POSITIVE_Z : int
MGL_MUL_ATI : int
MGL_Q : int
MGL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT : int
MGL_MATRIX16 : int
MGL_VARIANT_ARRAY_EXT : int
MGL_RENDERBUFFER_WIDTH : int
MGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB : int
MGL_4X_BIT_ATI : int
MGL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT : int
MGL_CURRENT_NORMAL : int
MGL_RENDERBUFFER : int
MGL_2X_BIT_ATI : int
MGL_OUTPUT_TEXTURE_COORD9_EXT : int
MGL_MODELVIEW_MATRIX : int
MGL_MAX_VERTEX_SHADER_LOCALS_EXT : int
MGL_FRAMEBUFFER : int
MGL_VERTEX_ATTRIB_ARRAY5_NV : int
MGL_COMBINER6_NV : int
MGL_PROGRAM_PARAMETERS : int
MGL_FALSE : int
MGL_FRONT_AND_BACK : int
MGL_BOOL_ARB : int
MGL_STENCIL_ATTACHMENT : int
MGL_VECTOR_EXT : int
MGL_CLIENT_ALL_ATTRIB_BITS : int
MGL_RIGHT : int
MGL_DEPTH_ATTACHMENT : int
MGL_CON_29_ATI : int
MGL_LEFT : int
MGL_SWIZZLE_STQ_ATI : int
MGL_COLOR_ATTACHMENT15 : int
MGL_CON_28_ATI : int
MGL_REG_29_ATI : int
MGL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT : int
MGL_OPERAND1_RGB_EXT : int
MGL_NORMAL_MAP_ARB : int
MGL_COLOR_ATTACHMENT14 : int
MGL_SELECTION_BUFFER_SIZE : int
MGL_CON_27_ATI : int
MGL_SPHERE_MAP : int
MGL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB : int
MGL_LOCAL_EXT : int
MGL_CURRENT_TEXTURE_COORDS : int
MGL_COLOR_ATTACHMENT13 : int
MGL_CLIENT_ACTIVE_TEXTURE : int
MGL_CON_26_ATI : int
MGL_POLYGON_SMOOTH : int
MGL_LOCAL_CONSTANT_EXT : int
MGL_CURRENT_MATRIX : int
MGL_COLOR_ATTACHMENT12 : int
MGL_RGBA_MODE : int
MGL_VERTEX_ARRAY_POINTER : int
MGL_CON_25_ATI : int
MGL_VARIANT_DATATYPE_EXT : int
MGL_INVARIANT_EXT : int
MGL_LO_BIAS_NV : int
MGL_COLOR_ATTACHMENT11 : int
kMGLext_EXT_cull_vertex : int
MGL_CON_24_ATI : int
MGL_REG_0_ATI : int
MGL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT : int
MGL_COLOR_ATTACHMENT10 : int
MGL_VERTEX_PROGRAM : int
MGL_CON_23_ATI : int
MGL_PACK_ROW_LENGTH : int
MGL_SWIZZLE_STR_ATI : int
MGL_BLEND_SRC : int
MGL_COLOR_ATTACHMENT9 : int
MGL_CON_22_ATI : int
MGL_REG_28_ATI : int
MGL_PACK_SKIP_ROWS : int
MGL_COLOR_ATTACHMENT8 : int
MGL_SELECTION_BUFFER_POINTER : int
MGL_CON_21_ATI : int
MGL_PACK_SKIP_PIXELS : int
MGL_COLOR_ATTACHMENT7 : int
MGL_CON_20_ATI : int
MGL_POLYGON_STIPPLE : int
MGL_INTERLEAVED_ATTRIBS_NV : int
MGL_CONSTANT_COLOR : int
MGL_COLOR_ATTACHMENT6 : int
MGL_MULTISAMPLE : int
kMGLext_framebuffer_multisample : int
MGL_CON_19_ATI : int
MGL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV : int
MGL_INT_VEC3_ARB : int
MGL_COLOR_ATTACHMENT5 : int
MGL_UNPACK_IMAGE_HEIGHT_EXT : int
MGL_CON_18_ATI : int
MGL_MAX_VERTEX_SHADER_INVARIANTS_EXT : int
MGL_TRANSPOSE_TEXTURE_MATRIX_ARB : int
MGL_OUTPUT_TEXTURE_COORD30_EXT : int
MGL_FOG : int
MGL_CON_17_ATI : int
MGL_RASTERIZER_DISCARD_NV : int
MGL_VERTEX_STATE_PROGRAM_NV : int
MGL_COLOR_ALPHA_PAIRING_ATI : int
MGL_COLOR_ATTACHMENT3 : int
MGL_CON_16_ATI : int
MGL_TEXTURE_MIN_FILTER : int
MGL_NOTEQUAL : int
MGL_OUTPUT_TEXTURE_COORD28_EXT : int
MGL_COLOR_MATERIAL_PARAMETER : int
MGL_FEEDBACK_BUFFER_TYPE : int
MGL_RED_SCALE : int
MGL_CURRENT_RASTER_INDEX : int
MGL_COLOR_ATTACHMENT1 : int
MGL_CON_15_ATI : int
MGL_VERTEX_ATTRIB_ARRAY10_NV : int
MGL_RED_BIAS : int
MGL_COLOR_ATTACHMENT0 : int
MGL_PROGRAM_NATIVE_INSTRUCTIONS : int
MGL_CON_14_ATI : int
MGL_OUTPUT_TEXTURE_COORD25_EXT : int
MGL_VIBRANCE_SCALE_NV : int
MGL_MAX_COLOR_ATTACHMENTS : int
MGL_VERTEX_ATTRIB_ARRAY_POINTER : int
MGL_CON_13_ATI : int
MGL_TRANSPOSE_PROJECTION_MATRIX_ARB : int
MGL_OUTPUT_TEXTURE_COORD24_EXT : int
MGL_FRAMEBUFFER_UNSUPPORTED : int
MGL_TEXTURE_MAX_ANISOTROPY_EXT : int
MGL_CON_12_ATI : int
MGL_GREEN_SCALE : int
MGL_AUX0 : int
MGL_NUM_LOOPBACK_COMPONENTS_ATI : int
MGL_SRC_ALPHA : int
MGL_CON_11_ATI : int
MGL_UNPACK_ALIGNMENT : int
MGL_REG_26_ATI : int
MGL_TEXTURE7_ARB : int
MGL_OUTPUT_TEXTURE_COORD22_EXT : int
kMGLext_texture_cube_map : int
MGL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER : int
MGL_TRANSFORM_FEEDBACK_VARYINGS_NV : int
MGL_MAX_PROGRAM_MATRICES : int
MGL_CON_10_ATI : int
MGL_BLUE_SCALE : int
MGL_CURRENT_RASTER_TEXTURE_COORDS : int
MGL_TEXTURE_WRAP_R_EXT : int
MGL_FRAMEBUFFER_INCOMPLETE_FORMATS : int
MGL_CON_9_ATI : int
MGL_COLOR_INDEX1_EXT : int
MGL_TEXTURE_HEIGHT : int
MGL_MAP1_VERTEX_ATTRIB8_4_NV : int
MGL_MAX_PROGRAM_INSTRUCTIONS : int
MGL_CON_8_ATI : int
MGL_LIGHTING_BIT : int
MGL_MAGNITUDE_SCALE_NV : int
MGL_FRAMEBUFFER_INCOMPLETE_DUPLICATE_ATTACHMENT : int
MGL_VERTEX_ATTRIB_ARRAY8_NV : int
MGL_CON_7_ATI : int
MGL_TRANSPOSE_MODELVIEW_MATRIX_ARB : int
MGL_LINE_WIDTH_RANGE : int
MGL_ALPHA32F : int
MGL_ONE_MINUS_DST_COLOR : int
kMGLext_ARB_vertex_buffer_object : int
MGL_CON_6_ATI : int
kMGLext_texture_env_add : int
MGL_PROGRAM_ERROR_STRING_NV : int
MGL_LIST_BIT : int
MGL_CON_5_ATI : int
MGL_VERSION : int
MGL_OUTPUT_TEXTURE_COORD16_EXT : int
MGL_TEXTURE_BIT : int
MGL_SOURCE1_ALPHA : int
MGL_CON_4_ATI : int
MGL_LINE_STIPPLE_PATTERN : int
MGL_OBJECT_SUBTYPE_ARB : int
MGL_SCISSOR_BIT : int
MGL_CON_3_ATI : int
MGL_COLOR_TABLE_INTENSITY_SIZE_EXT : int
MGL_OUTPUT_TEXTURE_COORD14_EXT : int
MGL_ALL_ATTRIB_BITS : int
MGL_PROGRAM_INSTRUCTIONS : int
MGL_CON_2_ATI : int
MGL_OUTPUT_TEXTURE_COORD13_EXT : int
MGL_DT_SCALE_NV : int
MGL_SRC_COLOR : int
MGL_CON_1_ATI : int
MGL_MAX_TEXTURE_UNITS_ARB : int
MGL_MAP1_VERTEX_ATTRIB0_4_NV : int
MGL_ONE_MINUS_SRC_COLOR : int
MGL_CON_0_ATI : int
MGL_OUTPUT_TEXTURE_COORD11_EXT : int
kMGLext_blend_color : int
MGL_ALPHA_SCALE : int
MGL_VIEWPORT : int
MGL_MODULATE : int
MGL_RENDERER : int
MGL_LIST_INDEX : int
MGL_NORMALIZE : int
MGL_HALF_FLOAT : int
MGL_REG_30_ATI : int
MGL_POLYGON_MODE : int
MGL_CURRENT_RASTER_POSITION_VALID : int
MGL_MATRIX_MODE : int
MGL_R : int
MGL_COLOR_TABLE_LUMINANCE_SIZE_EXT : int
MGL_OUTPUT_TEXTURE_COORD8_EXT : int
MGL_STENCIL_WRITEMASK : int
MGL_STENCIL_REF : int
MGL_T : int
MGL_OUTPUT_TEXTURE_COORD7_EXT : int
MGL_DS_SCALE_NV : int
kMGLext_EXT_compiled_vertex_array : int
MGL_REG_27_ATI : int
MGL_TEXTURE_WRAP_T : int
MGL_EDGE_FLAG : int
MGL_SWIZZLE_STRQ_DQ_ATI : int
MGL_EXTENSIONS : int
MGL_CULL_FACE : int
MGL_NUM_INSTRUCTIONS_PER_PASS_ATI : int
MGL_REG_3_ATI : int
MGL_ALPHA_TEST_REF : int
MGL_REG_25_ATI : int
MGL_VENDOR : int
MGL_CULL_FACE_MODE : int
MGL_ALPHA_TEST_FUNC : int
MGL_SOURCE2_RGB : int
MGL_REG_24_ATI : int
MGL_FRONT_FACE : int
MGL_CURRENT_RASTER_DISTANCE : int
MGL_EMISSION : int
MGL_VERTEX_ATTRIB_ARRAY15_NV : int
MGL_REG_23_ATI : int
MGL_LIGHTING : int
MGL_COLOR_TABLE_ALPHA_SIZE_EXT : int
MGL_SET : int
MGL_COLOR_SUM_CLAMP_NV : int
kMGLext_packed_depth_stencil : int
MGL_REG_22_ATI : int
MGL_LIGHT_MODEL_LOCAL_VIEWER : int
MGL_TEXTURE_GEN_Q : int
MGL_LO_SCALE_NV : int
MGL_LESS : int
MGL_UNPACK_IMAGE_HEIGHT : int
MGL_REG_21_ATI : int
MGL_MAX_CLIP_PLANES : int
MGL_TEXTURE_WRAP_S : int
MGL_TEXTURE29_ARB : int
MGL_COLOR_TABLE_GREEN_SIZE_EXT : int
kMGLext_ARB_depth_texture : int
MGL_OR_INVERTED : int
MGL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT : int
MGL_REG_20_ATI : int
MGL_LIGHT_MODEL_AMBIENT : int
kMGLext_ARB_texture_non_power_of_two : int
MGL_MAX_TEXTURE_COORDS_NV : int
MGL_COPY_INVERTED : int
MGL_KEEP : int
MGL_DECR : int
MGL_SHADE_MODEL : int
MGL_ADD : int
MGL_REFLECTION_MAP_ARB : int
MGL_REG_18_ATI : int
MGL_COLOR_MATERIAL_FACE : int
MGL_RENDERBUFFER_FREE_MEMORY_ATI : int
MGL_RETURN : int
MGL_FLAT : int
MGL_COLOR_TABLE_BLUE_SIZE_EXT : int
MGL_T4F_C4F_N3F_V4F : int
MGL_EQUIV : int
MGL_PROGRAM_LENGTH : int
kMGLext_ATI_fragment_shader : int
MGL_REG_16_ATI : int
MGL_PROGRAM_ERROR_POSITION_NV : int
MGL_OBJECT_SHADER_SOURCE_LENGTH_ARB : int
MGL_NOR : int
MGL_FEEDBACK : int
MGL_NAND : int
MGL_T2F_N3F_V3F : int
MGL_OR : int
MGL_OUTPUT_TEXTURE_COORD21_EXT : int
MGL_RENDER : int
MGL_PIXEL_MAP_I_TO_R_SIZE : int
MGL_LOAD : int
MGL_REG_13_ATI : int
MGL_PACK_SWAP_BYTES : int
MGL_INCR : int
MGL_TEXTURE6_ARB : int
MGL_T2F_C4UB_V3F : int
kMGLext_texture_compression : int
MGL_NOOP : int
MGL_SOURCE0_RGB : int
MGL_LINE : int
MGL_PROGRAM_RESIDENT_NV : int
MGL_AND_INVERTED : int
kMGLext_MGLX_choose_fbconfig : int
MGL_REG_11_ATI : int
MGL_LIGHT_MODEL_TWO_SIDE : int
MGL_TEXTURE_WIDTH : int
MGL_PROGRAM_TARGET_NV : int
MGL_ATTRIB_STACK_DEPTH : int
MGL_MAX_GENERAL_COMBINERS_NV : int
MGL_BITMAP : int
MGL_ATTRIB_ARRAY_POINTER_NV : int
MGL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB : int
MGL_AND_REVERSE : int
MGL_LUMINANCE_ALPHA : int
MGL_EQUAL : int
MGL_N3F_V3F : int
MGL_AND : int
kMGLext_ARB_occlusion_query : int
MGL_LUMINANCE : int
MGL_UNSIGNED_INT : int
MGL_C3F_V3F : int
MGL_NUM_FRAGMENT_REGISTERS_ATI : int
MGL_CLEAR : int
MGL_RGBA : int
MGL_REPLACE : int
MGL_C4UB_V3F : int
MGL_VARIANT_ARRAY_STRIDE_EXT : int
MGL_COMPILE_AND_EXECUTE : int
MGL_DECR_WRAP_EXT : int
MGL_ONE_MINUS_DST_ALPHA : int
MGL_RGB : int
MGL_C4UB_V2F : int
MGL_VBO_FREE_MEMORY_ATI : int
MGL_COMPILE : int
kMGLext_NV_transform_feedback : int
MGL_ALPHA : int
MGL_COLOR_TABLE_RED_SIZE_EXT : int
MGL_FOG_DENSITY : int
MGL_CURRENT_MATRIX_STACK_DEPTH_NV : int
MGL_QUADRATIC_ATTENUATION : int
MGL_CURRENT_VERTEX_ATTRIB : int
MGL_ARRAY_BUFFER_ARB : int
MGL_MATRIX7_NV : int
MGL_SIGNED_RGB_UNSIGNED_ALPHA_NV : int
MGL_LINEAR_ATTENUATION : int
MGL_OUTPUT_FOG_EXT : int
MGL_GREEN : int
MGL_MULT : int
MGL_VERTEX_ATTRIB_ARRAY7_NV : int
MGL_EDGE_FLAG_ARRAY_POINTER : int
MGL_CONSTANT_ATTENUATION : int
MGL_RED : int
MGL_PIXEL_MAP_I_TO_A_SIZE : int
MGL_MATRIX5_NV : int
kMGLext_imaging_subset : int
MGL_FENCE_STATUS_NV : int
MGL_SPOT_CUTOFF : int
MGL_SEPARATE_ATTRIBS_NV : int
MGL_MATRIX29 : int
MGL_REG_19_ATI : int
MGL_INDEX_ARRAY_POINTER : int
MGL_SPOT_EXPONENT : int
MGL_INCR_WRAP_EXT : int
MGL_STENCIL_INDEX : int
MGL_COLOR_ARRAY_POINTER : int
MGL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX : int
MGL_SPOT_DIRECTION : int
MGL_TEXTURE31 : int
MGL_COLOR_INDEX : int
MGL_COLOR_TABLE_WIDTH_EXT : int
MGL_NORMAL_ARRAY_POINTER : int
MGL_POSITION : int
MGL_TEXTURE30 : int
MGL_MATRIX26 : int
MGL_SWIZZLE_STQ_DQ_ATI : int
MGL_DSDT8_MAG8_INTENSITY8_NV : int
MGL_COLOR : int
MGL_SPECULAR : int
kMGLext_ARB_ES2_compatibility : int
MGL_DEPTH : int
MGL_OR_REVERSE : int
MGL_EDGE_FLAG_ARRAY_STRIDE : int
MGL_DIFFUSE : int
MGL_MATRIX24 : int
MGL_COMPRESSED_RGB : int
MGL_DOT2_ADD_ATI : int
MGL_AMBIENT : int
MGL_TEXTURE : int
MGL_SMOOTH : int
MGL_COMPRESSED_INTENSITY : int
MGL_TEXTURE_GEN_S : int
MGL_LIGHT7 : int
MGL_MAP2_VERTEX_4 : int
MGL_MATRIX22 : int
MGL_COMPRESSED_LUMINANCE_ALPHA : int
MGL_UNSIGNED_BYTE : int
MGL_LIGHT6 : int
MGL_VERTEX_ATTRIB_ARRAY14_NV : int
MGL_MATRIX21 : int
MGL_COLOR_TABLE_FORMAT_EXT : int
MGL_COMPRESSED_LUMINANCE : int
MGL_SECONDARY_COLOR_ARRAY_SIZE_EXT : int
MGL_TEXTURE29 : int
kMGLext_frame_buffer_object : int
MGL_MATRIX20 : int
MGL_XOR : int
MGL_INDEX_ARRAY_TYPE : int
MGL_DSDT8_MAG8_NV : int
MGL_LIGHT4 : int
MGL_UNPACK_SKIP_IMAGES_EXT : int
MGL_AMBIENT_AND_DIFFUSE : int
MGL_MAX_LIGHTS : int
MGL_INVERT : int
MGL_TEXTURE28_ARB : int
MGL_COLOR_ARRAY_STRIDE : int
kMGLext_ARB_texture_env_crossbar : int
MGL_LIGHT3 : int
MGL_MATRIX18 : int
MGL_PROXY_TEXTURE_CUBE_MAP : int
MGL_CND0_ATI : int
MGL_FOG_COORDINATE_ARRAY_EXT : int
MGL_LUMINANCE_ALPHA32F : int
MGL_REG_17_ATI : int
MGL_COLOR_ARRAY_SIZE : int
MGL_LIGHT1 : int
MGL_INT : int
MGL_SAMPLE_COVERAGE : int
MGL_LUMINANCE32F : int
MGL_NORMAL_ARRAY_STRIDE : int
MGL_OUT_OF_MEMORY : int
MGL_LIGHT0 : int
MGL_MATRIX15 : int
MGL_BITMAP_TOKEN : int
MGL_NORMAL_ARRAY_TYPE : int
MGL_FOG_COORDINATE_ARRAY_TYPE_EXT : int
MGL_TEXTURE28 : int
MGL_MATRIX14 : int
MGL_TEXTURE_CUBE_MAP_POSITIVE_Y : int
MGL_DSDT8_NV : int
MGL_FASTEST : int
MGL_VERTEX_ATTRIB_ARRAY_NORMALIZED : int
MGL_RGB32F : int
MGL_TEXTURE26_ARB : int
MGL_TEXTURE_CUBE_MAP_NEGATIVE_X : int
MGL_COMBINE_RGB : int
MGL_DONT_CARE : int
MGL_OUTPUT_TEXTURE_COORD20_EXT : int
MGL_MATRIX12 : int
MGL_ADD_SIGNED_EXT : int
MGL_PIXEL_MAP_G_TO_G_SIZE : int
MGL_FOG_COORDINATE_EXT : int
MGL_MATRIX11 : int
MGL_SELECT : int
kMGLext_blend_minmax : int
MGL_RGB_SCALE_EXT : int
kMGLext_multisample : int
MGL_FOG_COORDINATE_SOURCE_EXT : int
MGL_MAP2_TEXTURE_COORD_4 : int
MGL_MATRIX10 : int
MGL_COMBINE_ALPHA_EXT : int
MGL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX : int
MGL_COMPRESSED_RGBA_S3TC_DXT5_EXT : int
kMGLext_MGLX_create_pbuffer : int
MGL_MATRIX9 : int
MGL_T2F_C4F_N3F_V3F : int
MGL_REFLECTION_MAP : int
MGL_ALL_COMPLETED_NV : int
MGL_COMPRESSED_RGBA_S3TC_DXT3_EXT : int
MGL_VERTEX_ATTRIB_ARRAY_SIZE : int
MGL_MATRIX8 : int
MGL_NORMAL_MAP : int
MGL_STENCIL_INDEX16 : int
MGL_COMPRESSED_RGBA_S3TC_DXT1_EXT : int
MGL_MATRIX7 : int
MGL_TEXTURE25_ARB : int
MGL_MULTISAMPLE_BIT : int
MGL_SECONDARY_INTERPOLATOR_ATI : int
MGL_COMPRESSED_RGB_S3TC_DXT1_EXT : int
kMGLext_ARB_fragment_program : int
MGL_MATRIX6 : int
MGL_EMBOSS_CONSTANT_NV : int
MGL_PIXEL_MAP_B_TO_B_SIZE : int
MGL_MIRRORED_REPEAT_IBM : int
MGL_MATRIX5 : int
MGL_REG_15_ATI : int
MGL_EMBOSS_LIGHT_NV : int
MGL_MATRIX13 : int
MGL_SEPARATE_SPECULAR_COLOR : int
MGL_SHORT : int
MGL_MATRIX4 : int
MGL_SAMPLES : int
MGL_STACK_OVERFLOW : int
MGL_LINE_WIDTH : int
MGL_SINGLE_COLOR : int
kMGLext_NV_primitive_restart : int
MGL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB : int
MGL_VERTEX_PROGRAM_BINDING_NV : int
MGL_SAMPLE_BUFFERS : int
MGL_LIGHT_MODEL_COLOR_CONTROL : int
MGL_COMBINER_MUX_SUM_NV : int
MGL_VERTEX_ATTRIB_ARRAY2_NV : int
MGL_MAX_PROGRAM_TEMPORARIES : int
MGL_PROXY_TEXTURE_CUBE_MAP_ARB : int
MGL_COMBINER7_NV : int
MGL_CULL_VERTEX_OBJECT_POSITION_EXT : int
MGL_OUTPUT_TEXTURE_COORD31_EXT : int
MGL_MATRIX1 : int
MGL_TEXTURE24_ARB : int
MGL_SAMPLE_ALPHA_TO_ONE : int
MGL_CULL_VERTEX_EYE_POSITION_EXT : int
MGL_MATRIX0 : int
MGL_SAMPLE_ALPHA_TO_COVERAGE : int
kMGLext_ARB_texture_rectangle : int
MGL_MAD_ATI : int
MGL_CULL_VERTEX_EXT : int
MGL_VERTEX_ATTRIB_ARRAY3_NV : int
MGL_PROGRAM_ERROR_STRING : int
MGL_REG_14_ATI : int
MGL_COMBINER4_NV : int
MGL_ARRAY_ELEMENT_LOCK_COUNT_EXT : int
MGL_MAP2_TEXTURE_COORD_2 : int
MGL_MAX_PROGRAM_MATRIX_STACK_DEPTH : int
MGL_COMBINER3_NV : int
MGL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT : int
MGL_ARRAY_ELEMENT_LOCK_FIRST_EXT : int
MGL_FEEDBACK_BUFFER_SIZE : int
MGL_T2F_C3F_V3F : int
MGL_COMBINER2_NV : int
MGL_CLAMP_TO_BORDER_ARB : int
MGL_PROGRAM_FORMAT_ASCII : int
MGL_FEEDBACK_BUFFER_POINTER : int
MGL_COMBINER1_NV : int
MGL_TEXTURE_COMPARE_FAIL_VALUE_ARB : int
kMGLext_ARB_instanced_arrays : int
MGL_CURRENT_MATRIX_STACK_DEPTH : int
MGL_TEXTURE23_ARB : int
MGL_COMBINER0_NV : int
MGL_TEXTURE_GEQUAL_R_SGIX : int
MGL_TEXTURE_1D : int
MGL_MAX_TEXTURE_UNITS : int
MGL_TRIANGLE_FAN : int
MGL_TEXTURE_LEQUAL_R_SGIX : int
MGL_MAP2_GRID_SEGMENTS : int
MGL_FILL : int
MGL_NUM_GENERAL_COMBINERS_NV : int
MGL_MAP_STENCIL : int
MGL_TEXTURE_COMPARE_OPERATOR_SGIX : int
MGL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB : int
MGL_MAP2_GRID_DOMAIN : int
MGL_ACTIVE_TEXTURE : int
MGL_TEXTURE_COMPARE_SGIX : int
MGL_VERTEX_ATTRIB_ARRAY13_NV : int
MGL_MAP1_GRID_SEGMENTS : int
MGL_TRACK_MATRIX_NV : int
MGL_COMBINER_SUM_OUTPUT_NV : int
MGL_DOT3_RGBA : int
MGL_COMPARE_R_TO_TEXTURE_ARB : int
MGL_COMBINER_AB_DOT_PRODUCT_NV : int
MGL_MAP1_GRID_DOMAIN : int
MGL_COMBINER_CD_OUTPUT_NV : int
MGL_TEXTURE_COMPARE_FUNC_ARB : int
MGL_DOT3_RGBA_EXT : int
MGL_TEXTURE22_ARB : int
MGL_TEXTURE27_ARB : int
MGL_COMBINER_AB_OUTPUT_NV : int
MGL_EIGHTH_BIT_ATI : int
MGL_TEXTURE_COMPARE_MODE_ARB : int
MGL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT : int
MGL_COMBINER5_NV : int
MGL_DOT3_RGBA_ARB : int
MGL_COMBINER_BIAS_NV : int
MGL_TRIANGLE_STRIP : int
MGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB : int
MGL_DEPTH_TEXTURE_MODE_ARB : int
MGL_DOT3_RGB_EXT : int
MGL_REG_12_ATI : int
MGL_COMBINER_SCALE_NV : int
MGL_TEXTURE_DEPTH_SIZE_ARB : int
MGL_REG_6_ATI : int
MGL_MAP2_TEXTURE_COORD_3 : int
MGL_EDGE_FLAG_ARRAY_EXT : int
MGL_INVALID_ENUM : int
MGL_DEPTH_COMPONENT32_ARB : int
MGL_COMPRESSED_TEXTURE_FORMATS_ARB : int
MGL_T4F_V4F : int
MGL_COMBINER_CD_DOT_PRODUCT_NV : int
MGL_TEXTURE_DT_SIZE_NV : int
MGL_DEPTH_COMPONENT24_ARB : int
MGL_COLOR_ARRAY_EXT : int
kMGLext_ARB_sync : int
MGL_MAP2_TEXTURE_COORD_1 : int
MGL_INDEX_ARRAY_EXT : int
MGL_DEPTH_COMPONENT16_ARB : int
MGL_MAP2_NORMAL : int
MGL_TEXTURE_GEN_MODE : int
MGL_COMBINER_COMPONENT_USAGE_NV : int
MGL_POINT_DISTANCE_ATTENUATION_ARB : int
MGL_OUTPUT_TEXTURE_COORD19_EXT : int
MGL_MAP2_INDEX : int
MGL_COMBINER_MAPPING_NV : int
MGL_8X_BIT_ATI : int
MGL_MAP2_COLOR_4 : int
MGL_OPERAND2_RGB_EXT : int
MGL_TEXTURE4_ARB : int
MGL_COMBINER_INPUT_NV : int
MGL_ACTIVE_VARYING_MAX_LENGTH_NV : int
MGL_REG_5_ATI : int
MGL_MAP1_VERTEX_4 : int
MGL_BIAS_BY_NEGATIVE_ONE_HALF_NV : int
MGL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT : int
MGL_ACTIVE_VARYINGS_NV : int
MGL_COMPRESSED_RGB_ARB : int
MGL_T2F_V3F : int
MGL_SCALE_BY_ONE_HALF_NV : int
MGL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV : int
MGL_NORMAL_ARRAY_EXT : int
MGL_COMPRESSED_INTENSITY_ARB : int
MGL_TRANSPOSE_COLOR_MATRIX_ARB : int
MGL_SCALE_BY_FOUR_NV : int
MGL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV : int
MGL_COMPRESSED_LUMINANCE_ALPHA_ARB : int
MGL_COPY : int
MGL_SCALE_BY_TWO_NV : int
MGL_UNSIGNED_NORMALIZED : int
MGL_TRANSFORM_FEEDBACK_ATTRIBS_NV : int
kMGLext_ARB_vertex_program : int
MGL_MAP1_TEXTURE_COORD_2 : int
MGL_SIGNED_NEGATE_NV : int
MGL_UNSIGNED_SHORT : int
MGL_LINE_STRIP : int
MGL_GENERIC_ATTRIB_NV : int
MGL_MAP1_TEXTURE_COORD_1 : int
MGL_REG_10_ATI : int
MGL_SIGNED_IDENTITY_NV : int
MGL_PRIMITIVE_ID_NV : int
MGL_VARIANT_VALUE_EXT : int
MGL_3D : int
MGL_DEPENDENT_GB_TEXTURE_2D_NV : int
MGL_HALF_BIAS_NEGATE_NV : int
MGL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT : int
MGL_VERTEX_ID_NV : int
kMGLext_NV_occlusion_query : int
MGL_DEPENDENT_AR_TEXTURE_2D_NV : int
MGL_C4F_N3F_V3F : int
MGL_TEXTURE_GEN_T : int
MGL_PROXY_TEXTURE_3D : int
MGL_CLIP_DISTANCE_NV : int
MGL_VERTEX_ARRAY_EXT : int
MGL_VERTEX_ATTRIB_ARRAY1_NV : int
MGL_MAP1_COLOR_4 : int
MGL_EXPAND_NEGATE_NV : int
MGL_FOG_BIT : int
MGL_TEXTURE_COORD_NV : int
MGL_AUTO_NORMAL : int
MGL_TEXTURE19_ARB : int
MGL_TEXTURE_3D : int
MGL_BACK_SECONDARY_COLOR_NV : int
MGL_NAME_STACK_DEPTH : int
MGL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT : int
MGL_ADD_ATI : int
MGL_BACK_PRIMARY_COLOR_NV : int
MGL_CONST_EYE_NV : int
MGL_REG_9_ATI : int
MGL_FRAMEBUFFER_COMPLETE : int
MGL_BUFFER_MAP_POINTER_ARB : int
MGL_COMPRESSED_RGBA_ARB : int
MGL_ACCUM_BLUE_BITS : int
MGL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET : int
MGL_PROGRAM_ALU_INSTRUCTIONS_ARB : int
MGL_AUX1 : int
MGL_BUFFER_MAPPED_ARB : int
MGL_ACCUM_GREEN_BITS : int
MGL_PROGRAM_PARAMETER_NV : int
MGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB : int
MGL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE : int
MGL_BUFFER_ACCESS_ARB : int
MGL_MAX_3D_TEXTURE_SIZE_EXT : int
MGL_OFFSET_TEXTURE_2D_SCALE_NV : int
MGL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL : int
MGL_DRAW_PIXEL_TOKEN : int
MGL_PROJECTION : int
MGL_BUFFER_USAGE_ARB : int
kMGLext_ARB_explicit_attrib_location : int
MGL_STENCIL_BITS : int
MGL_EYE_LINEAR : int
MGL_SHININESS : int
MGL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME : int
MGL_BUFFER_SIZE_ARB : int
MGL_CULL_MODES_NV : int
MGL_VERTEX_ARRAY_SIZE : int
MGL_PACK_SKIP_IMAGES_EXT : int
MGL_MOV_ATI : int
MGL_MATRIX23 : int
MGL_INDEX_MODE : int
MGL_SHADER_OPERATION_NV : int
MGL_REG_8_ATI : int
MGL_PACK_SKIP_IMAGES : int
MGL_WRITE_ONLY_ARB : int
MGL_MAP1_VERTEX_3 : int
MGL_TEXTURE_SHADER_NV : int
kMGLext_ATI_pixel_format_float : int
MGL_FRAMEBUFFER_BINDING : int
MGL_RASTERIZER_DISCARD_EXT : int
MGL_READ_ONLY_ARB : int
MGL_VERTEX_ATTRIB_ARRAY12_NV : int
MGL_SHADER_CONSISTENT_NV : int
MGL_VERTEX_PROGRAM_TWO_SIDE_NV : int
MGL_MAX_RENDERBUFFER_SIZE : int
MGL_DYNAMIC_COPY_ARB : int
MGL_MAX_3D_TEXTURE_SIZE : int
MGL_DSDT_MAG_INTENSITY_NV : int
kMGLext_NVX_gpu_memory_info : int
MGL_INVALID_FRAMEBUFFER_OPERATION : int
MGL_DYNAMIC_READ_ARB : int
MGL_UNSIGNED_INT_S8_S8_8_8_REV_NV : int
MGL_TEXTURE_ENV : int
MGL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB : int
kMGLext_ARB_matrix_palette : int
MGL_DYNAMIC_DRAW_ARB : int
MGL_UNSIGNED_INT_S8_S8_8_8_NV : int
MGL_FRAGMENT_SHADER_ARB : int
MGL_CON_31_ATI : int
MGL_STATIC_COPY_ARB : int
MGL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV : int
MGL_REG_7_ATI : int
MGL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB : int
MGL_POLYGON_TOKEN : int
MGL_STATIC_READ_ARB : int
MGL_MAP1_TEXTURE_COORD_4 : int
MGL_MAP2_VERTEX_ATTRIB15_4_NV : int
kMGLext_ARB_shadow : int
MGL_FUNC_REVERSE_SUBTRACT_EXT : int
MGL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT : int
MGL_STATIC_DRAW_ARB : int
MGL_MAP2_VERTEX_ATTRIB14_4_NV : int
MGL_VERTEX_PROGRAM_POINT_SIZE_NV : int
MGL_FUNC_REVERSE_SUBTRACT : int
MGL_TEXTURE_DS_SIZE_NV : int
MGL_STREAM_COPY_ARB : int
MGL_PIXEL_MAP_I_TO_B : int
kMGLext_EXT_transform_feedback : int
MGL_MAP2_VERTEX_ATTRIB13_4_NV : int
MGL_FUNC_SUBTRACT_EXT : int
MGL_STREAM_READ_ARB : int
MGL_MAP2_VERTEX_ATTRIB12_4_NV : int
MGL_TEXTURE_ENV_COLOR : int
MGL_FUNC_SUBTRACT : int
MGL_CON_30_ATI : int
MGL_STREAM_DRAW_ARB : int
MGL_MAP2_VERTEX_ATTRIB11_4_NV : int
MGL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB : int
MGL_PACK_LSB_FIRST : int
MGL_BACK : int
MGL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB : int
MGL_MAP2_VERTEX_ATTRIB10_4_NV : int
MGL_TEXTURE3_ARB : int
MGL_BLEND_EQUATION : int
MGL_BIAS_BIT_ATI : int
MGL_WEIGHT_ARRAY_BUFFER_BINDING_ARB : int
MGL_MAP1_TEXTURE_COORD_3 : int
MGL_MAP2_VERTEX_ATTRIB9_4_NV : int
MGL_MAX_EXT : int
MGL_PRIMITIVES_GENERATED_EXT : int
MGL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB : int
MGL_MAP2_VERTEX_ATTRIB8_4_NV : int
kMGLext_WMGL_ARB_render_texture : int
MGL_CURRENT_MATRIX_NV : int
MGL_MAX : int
MGL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB : int
MGL_TEXTURE_WRAP_R : int
MGL_MAP2_VERTEX_ATTRIB7_4_NV : int
MGL_FLOAT_MAT2_ARB : int
MGL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB : int
MGL_MAP2_VERTEX_ATTRIB6_4_NV : int
MGL_TEXTURE_ENV_MODE : int
MGL_MIN : int
MGL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB : int
kMGLext_ARB_texgen_reflection : int
MGL_MAP2_VERTEX_ATTRIB5_4_NV : int
MGL_FUNC_ADD_EXT : int
MGL_INDEX_ARRAY_BUFFER_BINDING_ARB : int
MGL_TEXTURE_BINDING_CUBE_MAP : int
MGL_MAP2_VERTEX_ATTRIB4_4_NV : int
MGL_SOURCE2_RGB_EXT : int
MGL_BOOL_VEC2_ARB : int
MGL_COLOR_ARRAY_BUFFER_BINDING_ARB : int
MGL_MVP_MATRIX_EXT : int
MGL_FRAGMENT_SHADER_ATI : int
MGL_MAP2_VERTEX_ATTRIB3_4_NV : int
MGL_DS_BIAS_NV : int
MGL_MAX_VERTEX_SHADER_VARIANTS_EXT : int
MGL_AUX2 : int
MGL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV : int
MGL_LINE_WIDTH_GRANULARITY : int
MGL_NORMAL_ARRAY_BUFFER_BINDING_ARB : int
kMGLext_NV_fragment_program : int
MGL_MAP2_VERTEX_ATTRIB2_4_NV : int
MGL_V3F : int
MGL_INT_VEC4_ARB : int
MGL_VERTEX_ARRAY_BUFFER_BINDING_ARB : int
MGL_EDGE_FLAG_ARRAY : int
MGL_VERTEX_ATTRIB_ARRAY0_NV : int
MGL_MAP2_VERTEX_ATTRIB1_4_NV : int
MGL_HI_BIAS_NV : int
MGL_ELEMENT_ARRAY_BUFFER_BINDING_ARB : int
MGL_OUTPUT_TEXTURE_COORD29_EXT : int
MGL_MAP2_VERTEX_ATTRIB0_4_NV : int
MGL_TEXTURE14_ARB : int
MGL_INT_VEC2_ARB : int
MGL_ARRAY_BUFFER_BINDING_ARB : int
MGL_MAP1_VERTEX_ATTRIB15_4_NV : int
MGL_UNPACK_SKIP_ROWS : int
MGL_FLOAT_VEC4_ARB : int
kMGLext_texture_mirrored_repeat : int
MGL_MAP1_VERTEX_ATTRIB14_4_NV : int
MGL_FOG_END : int
MGL_FLOAT_VEC3_ARB : int
MGL_POINT_FADE_THRESHOLD_SIZE_ARB : int
MGL_MAP1_VERTEX_ATTRIB13_4_NV : int
MGL_FRAGMENT_PROGRAM_ARB : int
MGL_POINT_SIZE_MAX_ARB : int
MGL_MAP1_VERTEX_ATTRIB12_4_NV : int
MGL_V2F : int
MGL_SHADER_OBJECT_ARB : int
MGL_POINT_SIZE_MIN_ARB : int
MGL_TEXTURE_COORD_ARRAY : int
MGL_MAP1_VERTEX_ATTRIB11_4_NV : int
MGL_HI_SCALE_NV : int
kMGLext_NUMBER_OF_EXTENSIONS : int
MGL_CLIP_VOLUME_CLIPPING_HINT_EXT : int
kMGLext_ATI_meminfo : int
kMGLext_ARB_OpenMGL20 : int
MGL_MAP1_VERTEX_ATTRIB10_4_NV : int
MGL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV : int
MGL_FRONT_RIGHT : int
MGL_BGRA_EXT : int
MGL_OBJECT_LINK_STATUS_ARB : int
MGL_OBJECT_ACTIVE_UNIFORMS_ARB : int
MGL_BGR_EXT : int
MGL_OUTPUT_TEXTURE_COORD6_EXT : int
MGL_MATRIX31 : int
MGL_OBJECT_ATTACHED_OBJECTS_ARB : int
MGL_S : int
MGL_MULTISAMPLE_BIT_ARB : int
MGL_MAP1_NORMAL : int
MGL_OUTPUT_TEXTURE_COORD5_EXT : int
MGL_OBJECT_INFO_LOG_LENGTH_ARB : int
MGL_FRONT : int
MGL_SAMPLE_COVERAGE_INVERT_ARB : int
MGL_VERTEX_ATTRIB_ARRAY11_NV : int
MGL_OUTPUT_TEXTURE_COORD4_EXT : int
MGL_MATRIX6_NV : int
MGL_OBJECT_VALIDATE_STATUS_ARB : int
MGL_SAMPLE_COVERAGE_VALUE_ARB : int
MGL_INDEX_ARRAY : int
MGL_OUTPUT_TEXTURE_COORD3_EXT : int
MGL_SIGNED_INTENSITY8_NV : int
MGL_SAMPLES_ARB : int
MGL_OUTPUT_TEXTURE_COORD2_EXT : int
MGL_TEXTURE27 : int
MGL_DEPTH_SCALE : int
MGL_SIGNED_INTENSITY_NV : int
kMGLext_ARB_vertex_blend : int
MGL_SAMPLE_BUFFERS_ARB : int
MGL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT : int
MGL_OUTPUT_TEXTURE_COORD1_EXT : int
MGL_SIGNED_ALPHA8_NV : int
MGL_SAMPLE_COVERAGE_ARB : int
MGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB : int
MGL_OUTPUT_TEXTURE_COORD0_EXT : int
MGL_EVAL_BIT : int
MGL_SIGNED_ALPHA_NV : int
MGL_LINE_TOKEN : int
MGL_SAMPLE_ALPHA_TO_ONE_ARB : int
MGL_MAP1_INDEX : int
MGL_OUTPUT_COLOR1_EXT : int
MGL_SIGNED_LUMINANCE8_ALPHA8_NV : int
MGL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT : int
MGL_SAMPLE_ALPHA_TO_COVERAGE_ARB : int
MGL_OUTPUT_COLOR0_EXT : int
MGL_TEXTURE_COORD_ARRAY_POINTER : int
MGL_SIGNED_LUMINANCE_ALPHA_NV : int
MGL_TEXTURE_LO_SIZE_NV : int
MGL_BLUE : int
MGL_MULTISAMPLE_ARB : int
MGL_HALF_BIAS_NORMAL_NV : int
kMGLext_texture_compression_s3tc : int
MGL_OUTPUT_VERTEX_EXT : int
MGL_SIGNED_LUMINANCE8_NV : int
MGL_EDGE_FLAG_ARRAY_POINTER_EXT : int
MGL_OP_MOV_EXT : int
MGL_TEXTURE26 : int
MGL_SIGNED_LUMINANCE_NV : int
MGL_ELEMENT_ARRAY_BUFFER_ARB : int
MGL_TEXTURE_COORD_ARRAY_POINTER_EXT : int
MGL_COMPRESSED_LUMINANCE_ARB : int
MGL_OUTPUT_TEXTURE_COORD17_EXT : int
MGL_OP_MULTIPLY_MATRIX_EXT : int
MGL_SIGNED_RGB8_NV : int
MGL_INDEX_ARRAY_POINTER_EXT : int
MGL_OP_CROSS_PRODUCT_EXT : int
MGL_PIXEL_MAP_I_TO_I_SIZE : int
MGL_HINT_BIT : int
MGL_SIGNED_RGB_NV : int
MGL_QUADS : int
MGL_COLOR_ARRAY_POINTER_EXT : int
MGL_OFFSET_TEXTURE_2D_NV : int
MGL_MAP1_VERTEX_ATTRIB6_4_NV : int
MGL_OP_SUB_EXT : int
MGL_SIGNED_RGBA8_NV : int
MGL_BACK_LEFT : int
MGL_NORMAL_ARRAY_POINTER_EXT : int
MGL_ISOTROPIC_BRDF_NV : int
MGL_OP_RECIP_SQRT_EXT : int
kMGLext_WMGL_ARB_make_current_read : int
MGL_SIGNED_RGBA_NV : int
MGL_VERTEX_ARRAY_POINTER_EXT : int
MGL_CLIP_PLANE2 : int
MGL_OP_RECIP_EXT : int
MGL_TEXTURE_DEPTH_EXT : int
MGL_SIGNED_HILO16_NV : int
MGL_EDGE_FLAG_ARRAY_COUNT_EXT : int
MGL_LINE_STIPPLE_REPEAT : int
MGL_OP_POWER_EXT : int
MGL_TEXTURE25 : int
MGL_SIGNED_HILO_NV : int
MGL_CND_ATI : int
MGL_EDGE_FLAG_ARRAY_STRIDE_EXT : int
MGL_FLOAT_RGBA16_NV : int
MGL_OP_LOG_BASE_2_EXT : int
MGL_MAP2_VERTEX_3 : int
MGL_HILO16_NV : int
MGL_PASS_THROUGH_TOKEN : int
MGL_MODELVIEW0_EXT : int
MGL_TEXTURE_COORD_ARRAY_COUNT_EXT : int
MGL_OP_EXP_BASE_2_EXT : int
MGL_MATRIX28 : int
MGL_DSDT_MAG_VIB_NV : int
MGL_TEXTURE_COORD_ARRAY_STRIDE_EXT : int
MGL_CULL_FRAGMENT_NV : int

