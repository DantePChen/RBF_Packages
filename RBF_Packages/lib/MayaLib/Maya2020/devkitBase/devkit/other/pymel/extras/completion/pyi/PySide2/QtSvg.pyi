from typing import Any, Container, Dict, Generic, Iterable, Iterator, List, Optional, Set, Tuple, TypeVar, Union
from . import QtCore


from PySide2.QtGui import QPaintDevice as _QPaintDevice
from PySide2.QtWidgets import QWidget as _QWidget
from PySide2.QtWidgets import QGraphicsObject as _QGraphicsObject
from PySide2.QtCore import QObject as _QObject


if False:
    from typing import Dict, List, Tuple, Union, Optional

class QGraphicsSvgItem(_QGraphicsObject):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def boundingRect(*args, **kwargs): ...
    def elementId(*args, **kwargs): ...
    def isCachingEnabled(*args, **kwargs): ...
    def maximumCacheSize(*args, **kwargs): ...
    def paint(*args, **kwargs): ...
    def renderer(*args, **kwargs): ...
    def setCachingEnabled(*args, **kwargs): ...
    def setElementId(*args, **kwargs): ...
    def setMaximumCacheSize(*args, **kwargs): ...
    def setSharedRenderer(*args, **kwargs): ...
    def type(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QSvgWidget(_QWidget):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def load(*args, **kwargs): ...
    def paintEvent(*args, **kwargs): ...
    def renderer(*args, **kwargs): ...
    def sizeHint(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    staticMetaObject : PySide2.QtCore.QMetaObject


class QSvgGenerator(_QPaintDevice):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def description(*args, **kwargs): ...
    def fileName(*args, **kwargs): ...
    def metric(*args, **kwargs): ...
    def outputDevice(*args, **kwargs): ...
    def paintEngine(*args, **kwargs): ...
    def resolution(*args, **kwargs): ...
    def setDescription(*args, **kwargs): ...
    def setFileName(*args, **kwargs): ...
    def setOutputDevice(*args, **kwargs): ...
    def setResolution(*args, **kwargs): ...
    def setSize(*args, **kwargs): ...
    def setTitle(*args, **kwargs): ...
    def setViewBox(*args, **kwargs): ...
    def size(*args, **kwargs): ...
    def title(*args, **kwargs): ...
    def viewBox(*args, **kwargs): ...
    def viewBoxF(*args, **kwargs): ...
    __new__ : builtin_function_or_method


class QSvgRenderer(_QObject):
    def __init__(*args, **kwargs):
        """
        x.__init__(...) initializes x; see help(type(x)) for signature
        """
        ...
    def animated(*args, **kwargs): ...
    def animationDuration(*args, **kwargs): ...
    def boundsOnElement(*args, **kwargs): ...
    def currentFrame(*args, **kwargs): ...
    def defaultSize(*args, **kwargs): ...
    def elementExists(*args, **kwargs): ...
    def framesPerSecond(*args, **kwargs): ...
    def isValid(*args, **kwargs): ...
    def load(*args, **kwargs): ...
    def matrixForElement(*args, **kwargs): ...
    def render(*args, **kwargs): ...
    def setCurrentFrame(*args, **kwargs): ...
    def setFramesPerSecond(*args, **kwargs): ...
    def setViewBox(*args, **kwargs): ...
    def viewBox(*args, **kwargs): ...
    def viewBoxF(*args, **kwargs): ...
    __new__ : builtin_function_or_method
    
    repaintNeeded : PySide2.QtCore.Signal
    
    staticMetaObject : PySide2.QtCore.QMetaObject



