// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//-
// ==========================================================================
//
// ==========================================================================
//+

{
	int $numCurves = 0;
	string $curveList[];
	int $mostSpans = 0;
	$numSpans = 0;
	string $baseCurve;
	string $selectionList[];

	/*
	  Step 1:
		a)	Build a list of all selected nurbs curves. If less than two are found,
	    	output an error message.
		b)	While building the list, find the curve with the most spans, and store
			in $baseCurve.
	 */

	$selectionList=`ls -selection`;
	clear ($curveList);

	for ($i = 0; $i < size($selectionList); $i++)
	{
		string $node = $selectionList[$i];
		string $children[] = `listRelatives -children $node`;
		for ($j = 0; $j < size ($children); $j++)
		{
			string $cnode = $children[$j];
			if (`nodeType $cnode` == "nurbsCurve")
	    	{
				int $spans = `getAttr ($cnode + ".spans")`;
				if ($spans > $mostSpans)
				{
					$mostSpans = $spans;
					$baseCurve = $cnode;
				}
				$curveList [$numCurves] = $cnode;
				$numCurves++;
			}
		}
	}

	if ($numCurves < 2)
	{
		error "Invalid selection.  Select two or more curves.";
	}

	/*
	  Step 2:
		Create a loft node and
		a)	Connect the base curve's worldspace to the loft node's input
		b)	For each of the other curves, use the rebuildCurve node to match the
			curve's knots with the base curve's knots. As a result, all of the
			curves will have the same number of knots as the base curve. Connect
			the rebuildCurve node's output to the loft node's input
	 */

	$loftNode = `createNode fullLoft`;

	for ($i = 0; $i < size($curveList); $i++)
	{
		if ($curveList [$i] != $baseCurve)
		{
			string $node = `createNode rebuildCurve`;
			// Rebuild type 2 is "match knots"
			setAttr ($node + ".rebuildType") 2;
			// Fit, not rebuild
			setAttr ($node + ".fr") 0;
			connectAttr ($curveList[$i] + ".worldSpace") ($node + ".inputCurve");
			connectAttr ($baseCurve + ".worldSpace") ($node + ".matchCurve");

			connectAttr ($node + ".outputCurve") ($loftNode + ".in["+$i+"]");
		}
		else
			connectAttr ($baseCurve + ".worldSpace") ($loftNode + ".in["+$i+"]");
	}

	/*
	  Step 3:
		Create a surface and connect the loft's output to the surface's create
		attribute. Finally, select the new lofted surface.
	 */

	$transformNode = `createNode transform`;
	$surfaceNode = `createNode nurbsSurface -p $transformNode`;
	sets -add initialShadingGroup $surfaceNode;

	connectAttr ($loftNode + ".outputSurface") ($surfaceNode + ".create");

	select -r $surfaceNode;
}